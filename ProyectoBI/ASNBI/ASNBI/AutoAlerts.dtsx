<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/30/2019 4:17:38 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PC1015238198"
  DTS:CreatorName="DB\raygozatorres.5"
  DTS:DTSID="{0F5A7083-BB19-4C56-ABFF-4625F88AA2E6}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1100.123"
  DTS:LocaleID="1033"
  DTS:ObjectName="AutoAlerts"
  DTS:PackageType="5"
  DTS:VersionBuild="26"
  DTS:VersionGUID="{697F1E53-7742-48B3-A0F3-D8AD38A7B816}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{05D0825E-3066-4F4C-9F25-262FBDB680E8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConexionBD">
      <DTS:VariableValue
        DTS:DataType="8">Server=MTYSQLDEV01;Database=ASN;User Id=app620;Password=5LAeWtnK9CAkVVFN;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6CC38132-820C-4BD0-B2DC-1DF41C7B25AB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Resultado">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{55384B2A-FD9A-4485-BB0B-872A44FB94C0}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{15B189FE-1777-4B94-B183-4E502BBCD91E}"
          SQLTask:SqlStatementSource="EXEC [app620].[AvisoSolicitantesAutorizantes]"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::Resultado" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{F6C059CE-EEB2-47C4-A9FE-539BECAE85D4}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_58251ac9730c4142b6af3f72cd896af1"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ConexionBD,User::Resultado">
          <ProjectItem
            Name="MailHelper.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Mail;
using System.Text;
using System.Threading.Tasks;

namespace ST_58251ac9730c4142b6af3f72cd896af1
{
    class MailHelper
    {
        private const int Timeout = 180000;
        private readonly string _host;
        private readonly int _port;
        private readonly string _user;
        private readonly string _pass;
        private readonly bool _ssl;
        private readonly MailAddress _sender;
        private readonly string testing;
        private readonly string testingMail;
        //private readonly MailAddress testingMail;

        public string Recipient { get; set; }
        public string RecipientCC { get; set; }
        public string RecipientCCO { get; set; }
        public string Subject { get; set; }
        public string Body { get; set; }
        public bool IsBodyHtml { get; set; }
        public string AttachmentFile { get; set; }
        public Attachment archivo { get; set; }

        public MailHelper()
        {
            //MailServer - Represents the SMTP Server
            _host = "10.6.5.240";
            //Port- Represents the port number
            _port = 25;
            //MailAuthUser and MailAuthPass - Used for Authentication for sending email
            _sender = new MailAddress("ASN@teleperformance.com");
            _user = "";
            _pass = "";
            _ssl = true;
            testing = "1";
            //testingMail = new MailAddress(ConfigurationManager.AppSettings["testingMail"]);
            testingMail = "javier.raygoza@teleperformance.com";
        }

        public void Send()
        {
            try
            {

                Attachment att = null;
                var message = new MailMessage();

                if (testing == "1")
                {
                    foreach (var address in testingMail.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries))
                    {
                        message.To.Add(new MailAddress(address));
                    }

                    //message.To.Add(testingMail);
                }
                else
                {
                    //Split each email on the field
                    foreach (var address in Recipient.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries))
                    {
                        message.To.Add(new MailAddress(address));
                    }
                }

                message.Subject = Subject;
                message.From = _sender;
                message.Body = Body;
                message.IsBodyHtml = IsBodyHtml;

                if (testing != "1")
                {
                    if (!String.IsNullOrEmpty(RecipientCC))
                    {
                        foreach (var address in RecipientCC.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries))
                        {
                            message.CC.Add(address);
                        }
                    }

                    if (!String.IsNullOrEmpty(RecipientCCO))
                    {
                        foreach (var address in RecipientCCO.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries))
                        {
                            message.Bcc.Add(address);
                        }
                    }
                }

                var smtp = new SmtpClient(_host, _port);

                if (!String.IsNullOrEmpty(AttachmentFile))
                {
                    if (File.Exists(AttachmentFile))
                    {
                        att = new Attachment(AttachmentFile);
                        att.ContentId = "imagens";
                        message.Attachments.Add(att);
                    }
                }

                if (archivo != null)
                {
                    message.Attachments.Add(archivo);
                }

                if (_user.Length > 0 && _pass.Length > 0)
                {
                    smtp.UseDefaultCredentials = false;
                    smtp.Credentials = new NetworkCredential(_user, _pass);
                    smtp.EnableSsl = _ssl;
                }

                smtp.Send(message);

                if (att != null)
                    att.Dispose();
                message.Dispose();
                smtp.Dispose();
            }

            catch
            {
                //TODO: Enviar error a log de bd
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_58251ac9730c4142b6af3f72cd896af1.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8AAE1859-D455-4E34-BE4C-F4998FB7DB73}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_58251ac9730c4142b6af3f72cd896af1</RootNamespace>
    <AssemblyName>ST_58251ac9730c4142b6af3f72cd896af1</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System">
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Data">
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Drawing">
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Web">
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Windows.Forms">
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Xml">
      <Private>True</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>True</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="LogError.cs" />
    <Compile Include="MailHelper.cs" />
    <Compile Include="MailViewModel.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_58251ac9730c4142b6af3f72cd896af1.Properties.Settings.get_Default():ST_58251ac9730c4142b6af3f72cd896af1.Properties.Sett" +
    "ings")]

namespace ST_58251ac9730c4142b6af3f72cd896af1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.Linq;
using System.Web.UI.WebControls;
using System.Drawing;
using System.Web.UI.HtmlControls;
using System.IO;
using System.Web.UI;
#endregion

namespace ST_58251ac9730c4142b6af3f72cd896af1
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            var connections = Dts.Variables["User::ConexionBD"].Value.ToString();

            try
            {
                var x = (DataSet)Dts.Variables["User::Resultado"].Value;

                DataTable dt = new DataTable();

                dt = x.Tables["Table"];

                //GAPPWCF.Service1Client pum = new GAPPWCF.Service1Client();
                //Demo1.Service1 obj = new Demo1.Service1();
                //bool resultado = true;
                //bool algo2 = true;
                //bool IsActive = true;

                var Lista = new List<MailViewModel>();
                int CCMSIDSol = 0;
                int CCMSIDAut = 0;
                int Folioid = 0;

                Lista = demostracion();

                //foreach (DataRow dr in dt.Rows)
                //{
                //    var obj = new MailViewModel();
                //    obj.FolioSolicitud = int.TryParse(dr["FolioSolicitud"].ToString(), out Folioid) ? Folioid : 0;
                //    obj.CCMSIDSol = int.TryParse(dr["Ident_Solicitante"].ToString(),out CCMSIDSol) ? CCMSIDSol : 0;
                //    obj.NombreSol = dr["Nombre_Solicitante"].ToString();
                //    obj.EmailSolicitante = dr["eMailSolicitante"].ToString();
                //    obj.Estatus = dr["EstatusSolicitudId"].ToString();
                //    obj.CCMSIDAut = int.TryParse(dr["Ident_Autorizante"].ToString(), out CCMSIDAut) ? CCMSIDAut : 0;
                //    obj.NombreAut = dr["Nombre_Autorizante"].ToString();
                //    obj.EmailAutorizante = dr["eMailAutorizante"].ToString();
                //    //obj.EmailCCO = "javier.raygoza@teleperformance.com";

                //    Lista.Add(obj);
                //}

                if (Lista.Count > 0)
                {
                    var listaDeSolicitantes = new List<MailViewModel>();

                    var listaDeAutorizantes = new List<MailViewModel>();

                    listaDeSolicitantes = Lista.Where(f => f.EmailSolicitante.Length > 1 && !string.IsNullOrWhiteSpace(f.EmailSolicitante)).ToList();

                    listaDeAutorizantes = Lista.Where(g => g.EmailAutorizante.Length > 1 && !string.IsNullOrWhiteSpace(g.EmailAutorizante)).ToList();


                    var listaDeFoliosPorCCMSIDSol = listaDeSolicitantes
                    .GroupBy(p => p.CCMSIDSol)
                    .Select(g => g.First().CCMSIDSol)
                    .ToList();

                    var listaDeFoliosPorCCMSIDAut = listaDeAutorizantes
                     .GroupBy(p => p.CCMSIDAut)
                     .Select(g => g.First().CCMSIDAut)
                     .ToList();

                    //listaDeSolicitantes = Lista
                    //  .Where(f => f.EmailSolicitante.Length > 0)
                    //  .GroupBy(p => p.CCMSIDSol)
                    //  .Select(g => g.First().CCMSIDSol)
                    //  .ToList();

                    //Lista.Where(f => f.EmailSolicitante.Length > 0);

                    var mail = new MailHelper();


                    foreach (var ccmsid in listaDeFoliosPorCCMSIDSol)
                    {
                        //var liston = Lista.Where(emp => emp.CCMSIDSol == ccmsid).ToList();
                        var listaSol = listaDeSolicitantes.Where(emp => emp.CCMSIDSol == ccmsid).ToList();
                        //var listaAut = listaDeAutorizantes.Where(x => x.CCMSIDAut == obj.CCMSIDSol).ToList();

                        GridView grid = new GridView();

                        grid.RowCreated += new GridViewRowEventHandler(this.GridView1_RowCreated);

                        grid.HorizontalAlign = HorizontalAlign.Center;
                        grid.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
                        grid.HeaderStyle.BackColor = Color.FromArgb(0, 102, 153);
                        grid.HeaderStyle.ForeColor = Color.White;
                        //grid.RowStyle.BorderWidth = 1;
                        grid.RowStyle.HorizontalAlign = HorizontalAlign.Center;
                        //grid.RowStyle.BorderColor = Color.FromArgb(198,198,198);
                        grid.BorderWidth = 1;
                        grid.BorderColor = Color.Black;
                        grid.BorderStyle = System.Web.UI.WebControls.BorderStyle.Solid;
                        grid.CellPadding = 5;
                        grid.CellSpacing = 10;
                        grid.Font.Size = FontUnit.Small;

                        grid.AllowPaging = false;
                        grid.DataSource = listaSol;
                        grid.DataBind();


                        mail.IsBodyHtml = true;
                        //mail.Recipient = liston.Count > 0 ? liston.Take(1).SingleOrDefault().EmailTo : "javier.raygoza@teleperformance.com";
                        mail.Recipient = listaSol.Take(1).SingleOrDefault().EmailSolicitante;
                        //mail.RecipientCCO = liston.Count > 0 ? liston.Take(1).SingleOrDefault().EmailCCO : "juan.leal@teleperformance.com";
                        mail.RecipientCCO = "sd.support@teleperformance.com";
                        //mail.Subject = "Location: " + liston.Take(1).SingleOrDefault().Location + ", Action : " + liston.Take(1).SingleOrDefault().Action;
                        mail.Subject = "Solicitudes pendientes para " + listaSol.Take(1).SingleOrDefault().NombreSol;
                        //mail.AttachmentFile = Server.MapPath("~/Content/images/logo.png");
                        mail.Body = DibujaPagina(grid);
                        mail.Send();
                    }

                    foreach (var ccmsid in listaDeFoliosPorCCMSIDAut)
                    {
                        var listaAut = listaDeAutorizantes.Where(emp => emp.CCMSIDAut == ccmsid).ToList();

                        GridView grid = new GridView();

                        grid.RowCreated += new GridViewRowEventHandler(this.GridView1_RowCreated);

                        grid.HorizontalAlign = HorizontalAlign.Center;
                        grid.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
                        grid.HeaderStyle.BackColor = Color.FromArgb(0, 102, 153);
                        grid.HeaderStyle.ForeColor = Color.White;
                        //grid.RowStyle.BorderWidth = 1;
                        grid.RowStyle.HorizontalAlign = HorizontalAlign.Center;
                        //grid.RowStyle.BorderColor = Color.FromArgb(198,198,198);
                        grid.BorderWidth = 1;
                        grid.BorderColor = Color.Black;
                        grid.BorderStyle = System.Web.UI.WebControls.BorderStyle.Solid;
                        grid.CellPadding = 5;
                        grid.CellSpacing = 10;
                        grid.Font.Size = FontUnit.Small;

                        grid.AllowPaging = false;
                        grid.DataSource = listaAut;
                        grid.DataBind();


                        mail.IsBodyHtml = true;
                        //mail.Recipient = liston.Count > 0 ? liston.Take(1).SingleOrDefault().EmailTo : "javier.raygoza@teleperformance.com";
                        mail.Recipient = listaAut.Take(1).SingleOrDefault().EmailAutorizante;
                        //mail.RecipientCCO = liston.Count > 0 ? liston.Take(1).SingleOrDefault().EmailCCO : "juan.leal@teleperformance.com";
                        mail.RecipientCCO = "sd.support@teleperformance.com";
                        //mail.Subject = "Location: " + liston.Take(1).SingleOrDefault().Location + ", Action : " + liston.Take(1).SingleOrDefault().Action;
                        mail.Subject = "Autorizaciones pendientes para " + listaAut.Take(1).SingleOrDefault().NombreAut;
                        //mail.AttachmentFile = Server.MapPath("~/Content/images/logo.png");
                        mail.Body = DibujaPagina(grid);
                        mail.Send();
                    }
                }

            }
            catch (Exception ex)
            {
                LogError log = new LogError();
                log.RecordError(ex, 1, connections);
            }
            

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        protected void GridView1_RowCreated(object sender, GridViewRowEventArgs e)
        {
            //Just changed the index of cells based on your requirements
            e.Row.Cells[1].Visible = false;
            e.Row.Cells[2].Visible = false;
            e.Row.Cells[4].Visible = false;
            e.Row.Cells[5].Visible = false;
            e.Row.Cells[6].Visible = false;
            e.Row.Cells[7].Visible = false;
            e.Row.Cells[8].Visible = false;
        }

        public string DibujaPagina(GridView grid)
        {
            HtmlForm form = new HtmlForm();
            StringWriter sw = new StringWriter();
            HtmlTextWriter htw = new HtmlTextWriter(sw);
            //form.Controls.Add(grid);
            //form.RenderControl(htw);
            grid.RenderControl(htw);

            return sw.ToString();
        }

        public List<MailViewModel> demostracion()
        {

            List<MailViewModel> ListaDemo = new List<MailViewModel>();

            ListaDemo.Add(new MailViewModel
            {
                FolioSolicitud = 1,
                CCMSIDSol = 123,
                CCMSIDAut = 0,
                Autorizado = 0,
                EmailAutorizante = string.Empty,
                EmailSolicitante = "solcitante@algo.com",
                Estatus = "EB",
                NombreAut = string.Empty,
                NombreSol = "Pepe123"
            });

            ListaDemo.Add(new MailViewModel
            {
                FolioSolicitud = 2,
                CCMSIDSol = 123,
                CCMSIDAut = 0,
                Autorizado = 0,
                EmailAutorizante = string.Empty,
                EmailSolicitante = "solcitante@algo.com",
                Estatus = "EB",
                NombreAut = string.Empty,
                NombreSol = "Pepe123"
            });

            ListaDemo.Add(new MailViewModel
            {
                FolioSolicitud = 3,
                CCMSIDSol = 0,
                CCMSIDAut = 146,
                Autorizado = 0,
                EmailAutorizante = "autorizante@algo.com",
                EmailSolicitante = string.Empty,
                Estatus = "E",
                NombreAut = "AutoriName",
                NombreSol =string.Empty
            });

            ListaDemo.Add(new MailViewModel
            {
                FolioSolicitud = 3,
                CCMSIDSol = 0,
                CCMSIDAut = 789,
                Autorizado = 0,
                EmailAutorizante = "autorizante2@algo.com",
                EmailSolicitante = string.Empty,
                Estatus = "E",
                NombreAut = "AutoriName2",
                NombreSol = string.Empty
            });

            ListaDemo.Add(new MailViewModel
            {
                FolioSolicitud = 3,
                CCMSIDSol = 0,
                CCMSIDAut = 456,
                Autorizado = 0,
                EmailAutorizante = "autorizante3@algo.com",
                EmailSolicitante = string.Empty,
                Estatus = "E",
                NombreAut = "AutoriName3",
                NombreSol = string.Empty
            });

            ListaDemo.Add(new MailViewModel
            {
                FolioSolicitud = 6,
                CCMSIDSol = 357,
                CCMSIDAut = 0,
                Autorizado = 0,
                EmailAutorizante = string.Empty,
                EmailSolicitante = "solcitante2@algo.com",
                Estatus = "EB",
                NombreAut = string.Empty,
                NombreSol = "Peje357"
            });

            ListaDemo.Add(new MailViewModel
            {
                FolioSolicitud = 7,
                CCMSIDSol = 357,
                CCMSIDAut = 0,
                Autorizado = 0,
                EmailAutorizante = string.Empty,
                EmailSolicitante = "solcitante2@algo.com",
                Estatus = "EB",
                NombreAut = string.Empty,
                NombreSol = "Peje357"
            });

            ListaDemo.Add(new MailViewModel
            {
                FolioSolicitud = 8,
                CCMSIDSol = 357,
                CCMSIDAut = 0,
                Autorizado = 0,
                EmailAutorizante = string.Empty,
                EmailSolicitante = "solcitante2@algo.com",
                Estatus = "EB",
                NombreAut = string.Empty,
                NombreSol = "Peje357"
            });

            ListaDemo.Add(new MailViewModel
            {
                FolioSolicitud = 9,
                CCMSIDSol = 965,
                CCMSIDAut = 0,
                Autorizado = 0,
                EmailAutorizante = string.Empty,
                EmailSolicitante = "solcitante3@algo.com",
                Estatus = "EB",
                NombreAut = string.Empty,
                NombreSol = "Pasa965"
            });


            ListaDemo.Add(new MailViewModel
            {
                FolioSolicitud = 10,
                CCMSIDSol = 0,
                CCMSIDAut = 852,
                Autorizado = 0,
                EmailAutorizante = "autorizante4@algo.com",
                EmailSolicitante = string.Empty,
                Estatus = "E",
                NombreAut = "AutoriName4",
                NombreSol = string.Empty
            });

            ListaDemo.Add(new MailViewModel
            {
                FolioSolicitud = 10,
                CCMSIDSol = 0,
                CCMSIDAut = 159,
                Autorizado = 0,
                EmailAutorizante = "autorizante5@algo.com",
                EmailSolicitante = string.Empty,
                Estatus = "E",
                NombreAut = "AutoriName5",
                NombreSol = string.Empty
            });

            return ListaDemo;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="LogError.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_58251ac9730c4142b6af3f72cd896af1
{
    class LogError
    {
        public string LogErrorMessage { get; set; }
        public string StackTrace { get; set; }
        public string IpAddress { get; set; }
        public string Browser { get; set; }
        public Nullable<int> CreatedBy { get; set; }

        public void RecordError(Exception ex, int EID, string connections)
        {
            try
            {
                string MessageInnerEx = string.Format("[ExecUser:{2}]:_:[ex.Msg: {0}]:_:[ex.Src: {1}]"
                            , ex.Message, ex.Source, System.Security.Principal.WindowsIdentity.GetCurrent().Name);
                if (ex.InnerException != null)
                {
                    MessageInnerEx += string.Format(":_:[{0}]:_:[{1}]", ex.InnerException.Message, ex.InnerException.StackTrace);
                }

                SqlConnection conn = new SqlConnection(connections);

                SqlCommand cmd = new SqlCommand();

                cmd.CommandText = "app620.CatLogErrorSi";
                cmd.CommandType = System.Data.CommandType.StoredProcedure;
                cmd.Parameters.Add("@LogErrorMessage", System.Data.SqlDbType.VarChar).Value = MessageInnerEx;
                cmd.Parameters.Add("@StackTrace", System.Data.SqlDbType.VarChar).Value = ex.StackTrace;
                cmd.Parameters.Add("@IpAddress", System.Data.SqlDbType.VarChar).Value = "Atuomatico";
                cmd.Parameters.Add("@Browser", System.Data.SqlDbType.VarChar).Value = "SSIS";
                cmd.Parameters.Add("@CreatedBy", System.Data.SqlDbType.Int).Value = 1;

                cmd.Connection = conn;
                cmd.CommandTimeout = 600;

                conn.Open();

                int i = cmd.ExecuteNonQuery();

                conn.Close();
            }
            catch (Exception exs)
            {

            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="MailViewModel.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;

namespace ST_58251ac9730c4142b6af3f72cd896af1
{
    public class MailViewModel
    {
        //public string Date { get; set; }
        [DisplayName("Folio Solicitud")]
        public int FolioSolicitud { get; set; }
        [DisplayName("CCMSID Solicitante")]
        public int CCMSIDSol { get; set; }
        [DisplayName("Nombre Solicitante")]
        public string NombreSol { get; set; }
        [DisplayName("Estatus Solicitud")]
        public string Estatus { get; set; }
        [DisplayName("CCMSID Autorizante")]
        public int CCMSIDAut { get; set; }
        [DisplayName("Nombre Autorizante")]
        public string NombreAut { get; set; }

        [ReadOnly(true)]
        [Bindable(false)]
        public string EmailSolicitante { get; set; }
        [ReadOnly(true)]
        [Bindable(false)]
        public string EmailAutorizante { get; set; }
        [ReadOnly(true)]
        public int Autorizado { get; set; }
        //[ReadOnly(true)]
        //[Bindable(false)]
        //public int EmailId { get; set; }
        //[ReadOnly(true)]
        //[Bindable(false)]
        //public string EmailCCO { get; set; }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_58251ac9730c4142b6af3f72cd896af1</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_58251ac9730c4142b6af3f72cd896af1</msb:DisplayName>
		<msb:ProjectId>{FEEC94D2-482B-4245-9E2B-3CEF33337095}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_58251ac9730c4142b6af3f72cd896af1.csproj"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="LogError.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="MailHelper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="MailViewModel.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_58251ac9730c4142b6af3f72cd896af1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_58251ac9730c4142b6af3f72cd896af1")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_58251ac9730c4142b6af3f72cd896af1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_58251ac9730c4142b6af3f72cd896af1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_58251ac9730c4142b6af3f72cd896af1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_58251ac9730c4142b6af3f72cd896af1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_58251ac9730c4142b6af3f72cd896af1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_58251ac9730c4142b6af3f72cd896af1.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMAi0lwAAAAAAAAAAOAAIiALATAAAEIAAAAIAAAAAAAAnmEA
AAAgAAAAgAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAADAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAExhAABPAAAAAIAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAKAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApEEAAAAgAAAAQgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAgAAAAAYAAABEAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAKAAAAACAAAASgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
YQAAAAAAAEgAAAACAAUAFDEAAIAvAAABAAAAAAAAAJRgAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCoe
AnsDAAAEKiICA30DAAAEKh4CewQAAAQqIgIDfQQAAAQqHgJ7BQAABCoiAgN9BQAABCoAAAAbMAQA
IQEAAAEAABFyAQAAcANvEwAACgNvFAAACigVAAAKbxYAAAooFwAACgoDbxgAAAosJwZyXwAAcANv
GAAACm8TAAAKA28YAAAKbxkAAAooGgAACigbAAAKCgVzHAAACgtzHQAACiVygQAAcG8eAAAKJRpv
HwAACiVvIAAACnKrAABwHxZvIQAACgZvIgAACiVvIAAACnLNAABwHxZvIQAACgNvGQAACm8iAAAK
JW8gAAAKcuUAAHAfFm8hAAAKcvsAAHBvIgAACiVvIAAACnIRAQBwHxZvIQAACnIjAQBwbyIAAAol
byAAAApyLQEAcB5vIQAACheMMgAAAW8iAAAKJQdvIwAACiUgWAIAAG8kAAAKB28lAAAKbyYAAAom
B28nAAAK3gMm3gAqAAAAQRwAAAAAAAAAAAAAHQEAAB0BAAADAAAAEAAAAR4CKCgAAAoqHgJ7DwAA
BCoiAgN9DwAABCoeAnsQAAAEKiICA30QAAAEKh4CexEAAAQqIgIDfREAAAQqHgJ7EgAABCoiAgN9
EgAABCoeAnsTAAAEKiICA30TAAAEKh4CexQAAAQqIgIDfRQAAAQqHgJ7FQAABCoiAgN9FQAABCoe
AnsWAAAEKiICA30WAAAEKhMwAgBdAAAAAAAAAAIoKAAACgJyQwEAcH0HAAAEAh8ZfQgAAAQCclkB
AHBzKQAACn0MAAAEAnKJAQBwfQkAAAQCcokBAHB9CgAABAIXfQsAAAQCcosBAHB9DQAABAJyjwEA
cH0OAAAEKgAAABswBQBVAgAAAgAAERQKcyoAAAoLAnsNAAAEcosBAHAoKwAACixHAnsOAAAEF40q
AAABJRZy1QEAcKIXbywAAAoNFhMEKx4JEQSaEwUHby0AAAoRBXMpAAAKby4AAAoRBBdYEwQRBAmO
aTLbK0UCKA0AAAYXjSoAAAElFnLVAQBwohdvLAAACg0WEwQrHgkRBJoTBgdvLQAAChEGcykAAApv
LgAAChEEF1gTBBEECY5pMtsHAigTAAAGby8AAAoHAnsMAAAEbzAAAAoHAigVAAAGbzEAAAoHAigX
AAAGbzIAAAoCew0AAARyiwEAcCgzAAAKOZoAAAACKA8AAAYoNAAACi1AAigPAAAGF40qAAABJRZy
1QEAcKIXbywAAAoNFhMEKxkJEQSaEwcHbzUAAAoRB282AAAKEQQXWBMEEQQJjmky4AIoEQAABig0
AAAKLUACKBEAAAYXjSoAAAElFnLVAQBwohdvLAAACg0WEwQrGQkRBJoTCAdvNwAAChEIbzYAAAoR
BBdYEwQRBAmOaTLgAnsHAAAEAnsIAAAEczgAAAoMAigZAAAGKDQAAAotMAIoGQAABig5AAAKLCMC
KBkAAAZzOgAACgoGctkBAHBvOwAACgdvPAAACgZvPQAACgIoGwAABiwRB288AAAKAigbAAAGbz0A
AAoCewkAAARvPgAAChYxOAJ7CgAABG8+AAAKFjEqCBZvPwAACggCewkAAAQCewoAAARzQAAACm9B
AAAKCAJ7CwAABG9CAAAKCAdvQwAACgYsBgZvRAAACgdvRQAACghvRgAACt4DJt4AKgAAAEEcAAAA
AAAAAAAAAFECAABRAgAAAwAAAA0AAAEeAnsXAAAEKiICA30XAAAEKh4CexgAAAQqIgIDfRgAAAQq
HgJ7GQAABCoiAgN9GQAABCoeAnsaAAAEKiICA30aAAAEKh4CexsAAAQqIgIDfRsAAAQqHgJ7HAAA
BCoiAgN9HAAABCoeAnsdAAAEKiICA30dAAAEKh4Cex4AAAQqIgIDfR4AAAQqHgJ7HwAABCoiAgN9
HwAABCoAAAAbMAQAmAQAAAMAABECKEcAAApvSAAACnLpAQBwb0kAAApvSgAACm9LAAAKCgIoRwAA
Cm9IAAAKcgsCAHBvSQAACm9KAAAKdD8AAAFzTAAACiZvTQAACnIrAgBwb04AAAomc08AAAoLAig1
AAAGCwdvUAAAChY+CQQAAHNPAAAKDHNPAAAKDQd+KQAABCUtFyZ+KAAABP4GRAAABnNRAAAKJYAp
AAAEKAEAACsoAgAAKwwHfioAAAQlLRcmfigAAAT+BkUAAAZzUQAACiWAKgAABCgBAAArKAIAACsN
CH4rAAAEJS0XJn4oAAAE/gZGAAAGc1QAAAolgCsAAAQoAwAAK34sAAAEJS0XJn4oAAAE/gZHAAAG
c1YAAAolgCwAAAQoBAAAKygFAAArEwQJfi0AAAQlLRcmfigAAAT+BkgAAAZzVAAACiWALQAABCgD
AAArfi4AAAQlLRcmfigAAAT+BkkAAAZzVgAACiWALgAABCgEAAArKAUAACsTBXMdAAAGEwYRBG9Y
AAAKEwc4VgEAAHM+AAAGEwgRCBIHKFkAAAp9JgAABAgRCP4GPwAABnNRAAAKKAEAACsoAgAAKxMJ
c1oAAAoTChEKAv4GMwAABnNbAAAKb1wAAAoRChhvXQAAChEKb14AAAoYb18AAAoRCm9eAAAKFh9m
IJkAAAAoYAAACm9hAAAKEQpvXgAACihiAAAKb2MAAAoRCm9kAAAKGG9lAAAKEQoXKGYAAApvZwAA
ChEKKGgAAApvaQAAChEKGm9qAAAKEQobb2sAAAoRCh8Kb2wAAAoRCm9tAAAKfm4AAApvbwAAChEK
Fm9wAAAKEQoRCW9xAAAKEQpvcgAAChEGF28YAAAGEQYRCRcoBgAAKygHAAArbysAAAZvDgAABhEG
cjcCAHBvEgAABhEGcnUCAHARCRcoBgAAKygHAAArbyMAAAYoGwAACm8UAAAGEQYCEQooNAAABm8W
AAAGEQZvHgAABhIHKHUAAAo6nv7//94OEgf+FggAABtvdgAACtwRBW9YAAAKEwc4VgEAAHNAAAAG
EwsRCxIHKFkAAAp9JwAABAkRC/4GQQAABnNRAAAKKAEAACsoAgAAKxMMc1oAAAoTDRENAv4GMwAA
BnNbAAAKb1wAAAoRDRhvXQAAChENb14AAAoYb18AAAoRDW9eAAAKFh9mIJkAAAAoYAAACm9hAAAK
EQ1vXgAACihiAAAKb2MAAAoRDW9kAAAKGG9lAAAKEQ0XKGYAAApvZwAAChENKGgAAApvaQAAChEN
Gm9qAAAKEQ0bb2sAAAoRDR8Kb2wAAAoRDW9tAAAKfm4AAApvbwAAChENFm9wAAAKEQ0RDG9xAAAK
EQ1vcgAAChEGF28YAAAGEQYRDBcoBgAAKygHAAArby0AAAZvDgAABhEGcjcCAHBvEgAABhEGcq8C
AHARDBcoBgAAKygHAAArbykAAAYoGwAACm8UAAAGEQYCEQ0oNAAABm8WAAAGEQZvHgAABhIHKHUA
AAo6nv7//94OEgf+FggAABtvdgAACtzeEhMOcwwAAAYRDhcGbwsAAAbeAAIoRwAAChZvdwAACipB
TAAAAgAAAIABAABpAQAA6QIAAA4AAAAAAAAAAgAAAAADAABpAQAAaQQAAA4AAAAAAAAAAAAAACAA
AABZBAAAeQQAABIAAAAQAAABEzACAKIAAAAAAAAABG94AAAKb3kAAAoXb3oAAAoWb3sAAAoEb3gA
AApveQAAChhvegAAChZvewAACgRveAAACm95AAAKGm96AAAKFm97AAAKBG94AAAKb3kAAAobb3oA
AAoWb3sAAAoEb3gAAApveQAAChxvegAAChZvewAACgRveAAACm95AAAKHW96AAAKFm97AAAKBG94
AAAKb3kAAAoeb3oAAAoWb3sAAAoqAAATMAMAHwAAAAQAABFzfAAACiZzfQAACiVzfgAACgoDBm9/
AAAKb0sAAAoqABMwBQA5BAAAAAAAAHNPAAAKJXMxAAAGJRdvIAAABiUfe28iAAAGJRZvKAAABiUW
bzAAAAYlfoAAAApvLgAABiVy7wIAcG8sAAAGJXIXAwBwbyYAAAYlfoAAAApvKgAABiVyHQMAcG8k
AAAGb4EAAAolczEAAAYlGG8gAAAGJR97byIAAAYlFm8oAAAGJRZvMAAABiV+gAAACm8uAAAGJXLv
AgBwbywAAAYlchcDAHBvJgAABiV+gAAACm8qAAAGJXIdAwBwbyQAAAZvgQAACiVzMQAABiUZbyAA
AAYlFm8iAAAGJSCSAAAAbygAAAYlFm8wAAAGJXItAwBwby4AAAYlfoAAAApvLAAABiVyVwMAcG8m
AAAGJXJbAwBwbyoAAAYlfoAAAApvJAAABm+BAAAKJXMxAAAGJRlvIAAABiUWbyIAAAYlIBUDAABv
KAAABiUWbzAAAAYlcnEDAHBvLgAABiV+gAAACm8sAAAGJXJXAwBwbyYAAAYlcp0DAHBvKgAABiV+
gAAACm8kAAAGb4EAAAolczEAAAYlGW8gAAAGJRZvIgAABiUgyAEAAG8oAAAGJRZvMAAABiVytQMA
cG8uAAAGJX6AAAAKbywAAAYlclcDAHBvJgAABiVy4QMAcG8qAAAGJX6AAAAKbyQAAAZvgQAACiVz
MQAABiUcbyAAAAYlIGUBAABvIgAABiUWbygAAAYlFm8wAAAGJX6AAAAKby4AAAYlcvkDAHBvLAAA
BiVyFwMAcG8mAAAGJX6AAAAKbyoAAAYlciMEAHBvJAAABm+BAAAKJXMxAAAGJR1vIAAABiUgZQEA
AG8iAAAGJRZvKAAABiUWbzAAAAYlfoAAAApvLgAABiVy+QMAcG8sAAAGJXIXAwBwbyYAAAYlfoAA
AApvKgAABiVyIwQAcG8kAAAGb4EAAAolczEAAAYlHm8gAAAGJSBlAQAAbyIAAAYlFm8oAAAGJRZv
MAAABiV+gAAACm8uAAAGJXL5AwBwbywAAAYlchcDAHBvJgAABiV+gAAACm8qAAAGJXIjBABwbyQA
AAZvgQAACiVzMQAABiUfCW8gAAAGJSDFAwAAbyIAAAYlFm8oAAAGJRZvMAAABiV+gAAACm8uAAAG
JXIzBABwbywAAAYlchcDAHBvJgAABiV+gAAACm8qAAAGJXJdBABwbyQAAAZvgQAACiVzMQAABiUf
Cm8gAAAGJRZvIgAABiUgVAMAAG8oAAAGJRZvMAAABiVybQQAcG8uAAAGJX6AAAAKbywAAAYlclcD
AHBvJgAABiVymQQAcG8qAAAGJX6AAAAKbyQAAAZvgQAACiVzMQAABiUfCm8gAAAGJRZvIgAABiUg
nwAAAG8oAAAGJRZvMAAABiVysQQAcG8uAAAGJX6AAAAKbywAAAYlclcDAHBvJgAABiVy3QQAcG8q
AAAGJX6AAAAKbyQAAAZvgQAACioeAiiCAAAKKq5+IAAABC0ecvUEAHDQBgAAAiiDAAAKb4QAAApz
hQAACoAgAAAEfiAAAAQqGn4hAAAEKh4CgCEAAAQqGn4iAAAEKh4CKIYAAAoqLnM8AAAGgCIAAAQq
PgNvIQAABgJ7JgAABP4BKj4DbycAAAYCeycAAAT+ASouc0MAAAaAKAAABCp+A28rAAAGbz4AAAoX
MQ8DbysAAAYohwAAChb+ASoWKn4Dby0AAAZvPgAAChcxDwNvLQAABiiHAAAKFv4BKhYqHgNvIQAA
BioyAygIAAArbyEAAAYqHgNvJwAABioyAygIAAArbycAAAYqAAAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAAdBEAACN+AADgEQAACBMAACNTdHJpbmdzAAAAAOgkAABoBQAAI1VT
AFAqAAAQAAAAI0dVSUQAAABgKgAAIAUAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQsAAAD6ATMAFgAA
AQAAAFsAAAALAAAALgAAAEkAAAAlAAAAiAAAAAMAAABgAAAABAAAAAUAAAAZAAAAMAAAAAgAAAAB
AAAACAAAAAEAAAAEAAAACAAAAAAAMQsBAAAAAAAGANMIyQ4GAHQJyQ4GAAoItg4PAD0PAAAGADcI
mgwGALYImgwGAJcImgwGAFsJmgwGAPMImgwGAAwJmgwGAGMImgwGAH4I5wkGANIQAwwGAMAHyQ4G
AFcAAwwGAEkNAwwKADINUREOAFcQDwsOAI4RDwsOAIIFDwsOAGcRDwsOAE4I6woOAEkJ6woOAPgH
6woSACcJZQoSAPwGZQoGAH0ACgJvAJ4OAAAWAFMS5g8WAJ0P5g8WAEsOZwEGABwMAwwGAMQAAwwa
AMsAvA0GANsHtg4GANQN6Q4GAIsNhQwOAE0H6woOAB4I6woOABgHcAwGAOkSoAoGAAMKAwwKANwE
UREKANIEUw0KAK4G1QEKANQMUREKADEOUREKAKAG1QEKACUOUw0GAKgAAwwKACUNUw0GACcQAwwO
AOsMDwsGAHAAugoGADYGlwEOADAHDwsOAAENDwsOAI4K+BAOANAR+BASANkKZQoeAIoPgAYeAMUF
gAYKAAMR1QEKALsF1QEKAKwM1QEaAM4FvA0GAGIACgIWAOQN5g8WAEgM5g8WADsG5g8WADYM5g8i
AIAOEgoWAHEG5g8WACER5g8WALkL5g8WAF4G5g8WAJcN5g8WAB0R5g8WAMQL5g8WAN8LZwEGANkF
AwwWAG0S5g8WAGQS5g8WAMAM5g8WAFkL5g8WABMMABAGAD4OlwEGAE8OlwEGALUGAwwGAPEFAwwG
ALYSmgwAAAAAMwEAAAAAAQABAAAAEACSDoQANQABAAEAAAAQAPwNhAA1AAYADQABABAAAQuEADUA
FwAfAAEAEABYDIQAaQAgADIAAAAQAPAOTA81ACAANwAAARAAlA9MD6EAIgA7AAMBAACHEAAAgQAj
AD4AAwEQABcAAAA1ACYAPgADARAAQgAAADUAJwBAAAMhEAD+AQAANQAoAEIAAQDeAqQCAQDCAqQC
AQADBKQCAQDqA6QCAQChBOgCUYAyEu8CIQDjEaQCIQDDEe8CIQAHDqQCIQBJEKQCIQD1C/ICIQDI
DfUCIQAKCqQCIQAfC6QCAQBQBKQCAQBnAqQCAQCEAqQCAQA3BKQCAQC8BKQCAQBjA/ICAQD/AqQC
AQDRA/kCAQCiAu8CAQB/A+8CAQCaA6QCAQAeBKQCAQBrBO8CAQCGBKQCAQAfA6QCAQBBA6QCAQC1
A+8CEQAhDP0CEQDsBgIDEQBMBQcDBgbAAe8CVoBPEAsDVoDMBgsDBgBgAu8CBgBgAu8CNgAvAQ8D
FgABABMDFgAsABMDFgCuAB0DFgDXACcDFgDtAB0DFgADAScDUCAAAAAAhgiOBScAAQBYIAAAAACG
CKIFEAABAGEgAAAAAIYILgUnAAIAaSAAAAAAhgg9BRAAAgByIAAAAACGCGMQJwADAHogAAAAAIYI
cRAQAAMAgyAAAAAAhggNDicABACLIAAAAACGCBkOEAAEAJQgAAAAAIYIfBI3AwUAnCAAAAAAhgiK
Ej8DBQCoIAAAAACGAIYOSAMGAPQhAAAAAIYYqQ4GAAkA/CEAAAAAhghyEScACQAEIgAAAACGCIAR
EAAJAA0iAAAAAIYIQwEnAAoAFSIAAAAAhghTARAACgAeIgAAAACGCHUBJwALACYiAAAAAIYIhgEQ
AAsALyIAAAAAhgjZECcADAA3IgAAAACGCOUQEAAMAEAiAAAAAIYIoBInAA0ASCIAAAAAhgipEhAA
DQBRIgAAAACGCGMLewIOAFkiAAAAAIYIcgsVAA4AYiIAAAAAhggVBicADwBqIgAAAACGCCgGEAAP
AHMiAAAAAIYIoA1QAxAAeyIAAAAAhgisDVUDEACEIgAAAACGGKkOBgARAPAiAAAAAIYA5wQGABEA
cCUAAAAAhgj1BG0AEQB4JQAAAACGCAgFAQARAIElAAAAAIYIgQttABIAiSUAAAAAhgiPCwEAEgCS
JQAAAACGCJ0LJwATAJolAAAAAIYIqwsQABMAoyUAAAAAhgisECcAFACrJQAAAACGCLgQEAAUALQl
AAAAAIYI7xFtABUAvCUAAAAAhgj9EQEAFQDFJQAAAACGCAsSJwAWAM0lAAAAAIYIGRIQABYA1iUA
AAAAhghsBycAFwDeJQAAAACGCIEHEAAXAOclAAAAAIYIlgcnABgA7yUAAAAAhgirBxAAGAD4JQAA
AACGCG0NbQAZAAAmAAAAAIYIfA0BABkA9CEAAAAAhhipDgYAGgAMJgAAAACGAF4MBgAaAPwqAAAA
AIQANwJbAxoArCsAAAAAhgDIAWIDHADYKwAAAACGAGMMaAMdAB0wAAAAAIYYqQ4GAB0A9CEAAAAA
gxipDgYAHQAlMAAAAACTCNANcQMdAFEwAAAAAJMI1AZ3Ax0AWDAAAAAAkwjgBn0DHQBgMAAAAACW
CCYRhAMeAGcwAAAAAIYYqQ4GAB4AbzAAAAAAkRivDokDHgD0IQAAAACGGKkOBgAeAHswAAAAAIMA
GQGNAx4A9CEAAAAAhhipDgYAHwCLMAAAAACDACQBjQMfAJswAAAAAJEYrw6JAyAA9CEAAAAAhhip
DgYAIACnMAAAAACDAAoAjQMgAMcwAAAAAIMANQCNAyEA5zAAAAAAgwC3AJMDIgDvMAAAAACDAOAA
mQMjAPwwAAAAAIMA9gCTAyQABDEAAAAAgwAMAZkDJQAAAAEApgkAAAEApgkAAAEApgkAAAEApgkA
AAEApgkAAAEAeRIAAAIAYwEAAAMAGxAAAAEApgkAAAEApgkAAAEApgkAAAEApgkAAAEApgkAAAEA
pgkAAAEApgkAAAEApgkAAAEApgkAAAEApgkAAAEApgkAAAEApgkAAAEApgkAAAEApgkAAAEApgkA
AAEApgkAAAEApgkAAAEAyQ0AAAIAswkAAAEAWwIAAAEApgkAAAEAuA0AAAEAuA0AAAEAtQkAAAEA
HwoAAAEAug0AAAEAHwoAAAEAug0AAAEAHwoJAKkOAQARAKkOBgAZAKkOCgApAKkOEAAxAKkOEAA5
AKkOEABBAKkOEABJAKkOEABRAKkOEABZAKkOEABhAKkOEABxAKkOBgCxAKkOEAC5AKkOFQDBAKkO
FQDJAKkOBgAZAakOBgA5AakOGgCBAHYFJwCBAFwFJwBJAaURKwBJAXcGJwBRAcsQMQCBAEANOQCB
AC4FJwBRAcsQPgBRAcQQRQCJAKkOEABZAakOBgBhAUMSEABhAaoGSwBZAToQUgBxATMCWACJAZwJ
YgBZARYNZwBhAScSAQCZAS0MBgBhAb8SbQCZAT8HBgBpAKkOBgCRAKkOEAChAKkOBgBRAc8SgQBR
ARcRhwChAGYNkQAMADMCnwChAOUQEAChAAoMpQChAKkSEAChAHILFQBRAdsSgQBRAfkSqwChADwB
kQCpATMCEAChAAICkQCpAKkOsAC5AaUQqwCZAKkOEADBASUCEAChAJUQtgAUADMCnwBRATEKbQCp
AMIPFQDRAakOxACpALIPygCpAOcLFQCpAOcE0QDBAUUHBgChAEUHBgCpAEUHBgDRAH8QFAHhAYYP
GgHpAfoLIAHxAZIJJwFpAAEKJwABAqkOBgD5AXsPKwEJAvoLMQEcAKkOBgAcALkRbQAkAKkOSAER
AroGTgERAskRbQEsAKkOSAERApgShwE0AKkOSAERAvEQvgE8AJsO7wFEAJkR/gHpAKkOBgAhAqkO
SAHpAEwCAwLpAEQMCgLpAEoGEQIxAjIMFwJBAuwBHgJJAmgOJwJBAmIHLgJJAloOJwLpAGoGEQIx
AkQMCgJRAgsRNAJZAiEKOwJBAjwKLgJZAnYOJwJZAloGQgLpAMcJAQDpALcJAQBZArARSQJxAisL
TwJpAqwJVALpANcJFQB5AmcFYgCBAuwEBgARArYFWwIRAjIRbgJEADoSewKJAkUHBgDhAUIRAQDx
AFwSfwKZAtwPhQKhAvoLiwKBAuUFFQCxAqkOBgC5AqkOBgD5AKkOlwKBAtkLngJRAQETpAIcADMC
nwDRAKkOBgDJAgMGpwLJArISsAIhAakOtgJBAakOBgBRARsFqwARAukRbgIIABgA2QIIAJAA3gII
AJQA4wIgAGMA4wIhAGMA4wIuAAsAzwMuABMA2AMuABsA9wMuACMAAAQuACsAKQQuADMAKQQuADsA
KQQuAEMAAAQuAEsALwQuAFMAKQQuAFsARgRAAGMA4wJBAGMA4wJgAGMA4wJhAGMA4wKAAGMA4wKB
AGMA4wKgAGMA4wKhAGMA4wKjAIMA4wLAAGMA4wLDAIsA4wLgAGMA4wIAAWMA4wIgAWMA4wIjAWMA
4wJAAWMA4wJDAWMA4wJjAWMA4wKgAWMA4wLAAWMA4wLJAWsAjgTgAWMA4wLhAWMA4wLpAWsAowQA
AmMA4wIBAmMA4wIJAmsAuwQgAmMA4wIhAmMA4wIpAmsA0wRAAmMA4wJBAmMA4wJJAmsA6gRgAmMA
4wJhAmMA4wJpAmsAAgWAAmMA4wKBAmMA4wKJAnMAGgWJAnsAKQSgAmMA4wKhAmMA4wKpAnMAGgWp
AnsAKQTAAmMA4wLBAmMA4wLJAnMAGgXgAmMA4wLhAmMA4wLpApMA9wMAA2MA4wIBA2MA4wIJA5MA
9wMgA2MA4wIhA2MA4wJAA2MA4wJBA2MA4wJgA2MA4wJhA2MA4wKAA2MA4wKBA2MA4wKhA2MA4wLB
A2MA4wLgA2MA4wLhA2MA4wIABGMA4wIgBGMA4wJABGMA4wJBBGMA4wJgBGMA4wKABGMA4wKgBGMA
4wLABGMA4wLgBGMA4wIABWMA4wIgBWMA4wJABWMA4wJgBWMA4wKABWMA4wKgBWMA4wLABWMA4wLg
BWMA4wIABmMA4wIhAHEA1wCSAgIAAQADAAYABAAOAAYAFwAHABkAAACmBaUDAABBBaUDAAB1EKUD
AAAdDqUDAACOEqkDAACEEaUDAABXAaUDAACKAaUDAADpEKUDAACtEqUDAAB2C7EDAAAsBqUDAACw
DbUDAAAMBboDAACTC7oDAACvC6UDAAC8EKUDAAABEroDAAAdEqUDAACFB6UDAACvB6UDAACADboD
AADUDb4DAAD0BsQDAAA6EcoDAgABAAMAAQACAAMAAgADAAUAAQAEAAUAAgAFAAcAAQAGAAcAAgAH
AAkAAQAIAAkAAgAJAAsAAQAKAAsAAgANAA0AAQAOAA0AAgAPAA8AAQAQAA8AAgARABEAAQASABEA
AgATABMAAQAUABMAAgAVABUAAQAWABUAAgAXABcAAQAYABcAAgAZABkAAQAaABkAAgAbABsAAQAc
ABsAAgAfAB0AAQAgAB0AAgAhAB8AAQAiAB8AAgAjACEAAQAkACEAAgAlACMAAQAmACMAAgAnACUA
AQAoACUAAgApACcAAQAqACcAAgArACkAAQAsACkAAgAtACsAAQAuACsAAgAvAC0AAQAwAC0AAgA4
AC8AAgA5ADEAAQA6ADEAAgA7ADMAlwC8ADgBPwF+Aa8B6QH4AQSAAAABAAAAmhv4iAAAAAAAAIQA
AAAEAAAAAAAAAAAAAAC+AvUBAAAAAAQAAAAAAAAAAAAAAL4C1QEAAAAABAAAAAAAAAAAAAAAvgID
DAAAAAAMAAAAAAAAAAAAAADHAkYKAAAAAAQAAAAAAAAAAAAAANAC4QEAAAAABAAAAAAAAAAAAAAA
vgLABgAAAAAMAAAAAAAAAAAAAADHAqEBAAAAAAQAAAAAAAAAAAAAANACEgoAAAAAAAAAAAEAAAD6
DgAACAAFAAkABQAKAAUACwAFAKUAaAGnAGgBqwCpAa8A2QGnAOUB5wBoAekAaAERAWgBAAAAAAA8
PjlfXzBfMAA8TWFpbj5iX18wXzAAPD5jX19EaXNwbGF5Q2xhc3MwXzAAPD45X18wXzEAPE1haW4+
Yl9fMF8xADw+Y19fRGlzcGxheUNsYXNzMF8xAE51bGxhYmxlYDEASUVudW1lcmFibGVgMQBDb2xs
ZWN0aW9uYDEATGlzdGAxAFNUXzU4MjUxYWM5NzMwYzQxNDJiNmFmM2Y3MmNkODk2YWYxAEludDMy
ADw+OV9fMF8yADxNYWluPmJfXzBfMgBGdW5jYDIASUdyb3VwaW5nYDIAPD45X18wXzMAPE1haW4+
Yl9fMF8zADw+OV9fMF80ADxNYWluPmJfXzBfNAA8PjlfXzBfNQA8TWFpbj5iX18wXzUAPE1haW4+
Yl9fNgA8TWFpbj5iX183ADw+OQA8TW9kdWxlPgBnZXRfQ0MAZ2V0X1JlY2lwaWVudENDAHNldF9S
ZWNpcGllbnRDQwBFSUQAU3lzdGVtLldlYi5VSQBnZXRfUmVjaXBpZW50Q0NPAHNldF9SZWNpcGll
bnRDQ08AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAERp
YnVqYVBhZ2luYQBTeXN0ZW0uRGF0YQBTeXN0ZW0uV2ViAEZyb21BcmdiAG1zY29ybGliADw+YwBn
ZXRfQmNjAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAHNldF9Db250ZW50SWQAQWRkAEdyaWRW
aWV3MV9Sb3dDcmVhdGVkAGFkZF9Sb3dDcmVhdGVkAGdyaWQAY2Ntc2lkADxSZWNpcGllbnRDQz5r
X19CYWNraW5nRmllbGQAPFJlY2lwaWVudENDTz5rX19CYWNraW5nRmllbGQAPEZvbGlvU29saWNp
dHVkPmtfX0JhY2tpbmdGaWVsZAA8U3RhY2tUcmFjZT5rX19CYWNraW5nRmllbGQAPExvZ0Vycm9y
TWVzc2FnZT5rX19CYWNraW5nRmllbGQAPEF0dGFjaG1lbnRGaWxlPmtfX0JhY2tpbmdGaWVsZAA8
RW1haWxTb2xpY2l0YW50ZT5rX19CYWNraW5nRmllbGQAPEVtYWlsQXV0b3JpemFudGU+a19fQmFj
a2luZ0ZpZWxkADxJc0JvZHlIdG1sPmtfX0JhY2tpbmdGaWVsZAA8Q0NNU0lEU29sPmtfX0JhY2tp
bmdGaWVsZAA8Tm9tYnJlU29sPmtfX0JhY2tpbmdGaWVsZAA8QXV0b3JpemFkbz5rX19CYWNraW5n
RmllbGQAPGFyY2hpdm8+a19fQmFja2luZ0ZpZWxkADxCcm93c2VyPmtfX0JhY2tpbmdGaWVsZAA8
SXBBZGRyZXNzPmtfX0JhY2tpbmdGaWVsZAA8RXN0YXR1cz5rX19CYWNraW5nRmllbGQAPFN1Ympl
Y3Q+a19fQmFja2luZ0ZpZWxkADxSZWNpcGllbnQ+a19fQmFja2luZ0ZpZWxkADxDQ01TSURBdXQ+
a19fQmFja2luZ0ZpZWxkADxOb21icmVBdXQ+a19fQmFja2luZ0ZpZWxkADxDcmVhdGVkQnk+a19f
QmFja2luZ0ZpZWxkADxCb2R5PmtfX0JhY2tpbmdGaWVsZABEYkNvbW1hbmQAU3FsQ29tbWFuZABT
ZW5kAERhdGFCaW5kAGdldF9Gb2xpb1NvbGljaXR1ZABzZXRfRm9saW9Tb2xpY2l0dWQASXNOdWxs
T3JXaGl0ZVNwYWNlAGdldF9TdGFja1RyYWNlAHNldF9TdGFja1RyYWNlAGRlZmF1bHRJbnN0YW5j
ZQBnZXRfU291cmNlAHNldF9EYXRhU291cmNlAGdldF9NZXNzYWdlAE1haWxNZXNzYWdlAGdldF9M
b2dFcnJvck1lc3NhZ2UAc2V0X0xvZ0Vycm9yTWVzc2FnZQBUYWtlAERhdGFUYWJsZQBWYXJpYWJs
ZQBFbnVtZXJhYmxlAElEaXNwb3NhYmxlAHNldF9WaXNpYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAGdldF9BdHRhY2htZW50RmlsZQBzZXRfQXR0YWNobWVudEZpbGUAVGFi
bGVJdGVtU3R5bGUAZ2V0X0hlYWRlclN0eWxlAHNldF9Cb3JkZXJTdHlsZQBnZXRfUm93U3R5bGUA
Z2V0X05hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBTcWxEYlR5cGUAc2V0X0Nv
bW1hbmRUeXBlAFdoZXJlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBBdHRhY2htZW50QmFzZQBDbG9zZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJs
ZVN0YXRlAGdldF9XaGl0ZQBnZXRfRW1haWxTb2xpY2l0YW50ZQBzZXRfRW1haWxTb2xpY2l0YW50
ZQBnZXRfRW1haWxBdXRvcml6YW50ZQBzZXRfRW1haWxBdXRvcml6YW50ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAEJpbmRhYmxlQXR0cmli
dXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUARGlzcGxheU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBSZWFkT25seUF0dHJpYnV0ZQBB
c3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0
X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBzZXRfU2l6ZQBmAHNldF9DZWxsU3BhY2luZwBzZXRfQ2Vs
bFBhZGRpbmcAc2V0X0FsbG93UGFnaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJp
bmcAdGVzdGluZwBTeXN0ZW0uRHJhd2luZwBzZXRfQm9yZGVyV2lkdGgAZ2V0X0xlbmd0aABnZXRf
QmxhY2sATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sATmV0d29ya0NyZWRlbnRpYWwAU3lzdGVtLlNlY3VyaXR5LlBy
aW5jaXBhbABTeXN0ZW0uQ29sbGVjdGlvbnMuT2JqZWN0TW9kZWwAU2NyaXB0T2JqZWN0TW9kZWwA
U3lzdGVtLkNvbXBvbmVudE1vZGVsAE1haWxWaWV3TW9kZWwAU3lzdGVtLk5ldC5NYWlsAHRlc3Rp
bmdNYWlsAFNtYWxsAFNUXzU4MjUxYWM5NzMwYzQxNDJiNmFmM2Y3MmNkODk2YWYxLmRsbABUYWJs
ZUNlbGwAZ2V0X0lzQm9keUh0bWwAc2V0X0lzQm9keUh0bWwAZ2V0X0NDTVNJRFNvbABzZXRfQ0NN
U0lEU29sAGdldF9Ob21icmVTb2wAc2V0X05vbWJyZVNvbABXZWJDb250cm9sAEJhc2VEYXRhQm91
bmRDb250cm9sAFJlbmRlckNvbnRyb2wAc2V0X0VuYWJsZVNzbABfc3NsAGdldF9JdGVtAFN5c3Rl
bQBzZXRfRnJvbQBIdG1sRm9ybQBFbnVtAHJlc291cmNlTWFuAE9wZW4Ac2V0X1ZlcnRpY2FsQWxp
Z24Ac2V0X0hvcml6b250YWxBbGlnbgBTY3JpcHRNYWluAGRlbW9zdHJhY2lvbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYXRhVGFi
bGVDb2xsZWN0aW9uAFRhYmxlQ2VsbENvbGxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBN
YWlsQWRkcmVzc0NvbGxlY3Rpb24AQXR0YWNobWVudENvbGxlY3Rpb24Ac2V0X0Nvbm5lY3Rpb24A
RGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24AZ2V0X0lubmVyRXhjZXB0aW9uAFN5c3RlbS5EYXRh
LkNvbW1vbgBnZXRfVG8AZ2V0X0F1dG9yaXphZG8Ac2V0X0F1dG9yaXphZG8AQ3VsdHVyZUluZm8A
Rm9udEluZm8AZ2V0X2FyY2hpdm8Ac2V0X2FyY2hpdm8AZW1wAFN5c3RlbS5MaW5xAF9zZW5kZXIA
Z2V0X1Jlc291cmNlTWFuYWdlcgBHcmlkVmlld1Jvd0V2ZW50SGFuZGxlcgBNYWlsSGVscGVyAF91
c2VyAGdldF9Ccm93c2VyAHNldF9Ccm93c2VyAERiUGFyYW1ldGVyAFNxbFBhcmFtZXRlcgBTdHJp
bmdXcml0ZXIASHRtbFRleHRXcml0ZXIAc2V0X0ZvcmVDb2xvcgBzZXRfQmFja0NvbG9yAHNldF9C
b3JkZXJDb2xvcgBSZWNvcmRFcnJvcgBMb2dFcnJvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3Rv
cgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0
ZW0uUmVzb3VyY2VzAFNUXzU4MjUxYWM5NzMwYzQxNDJiNmFmM2Y3MmNkODk2YWYxLlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF81ODI1MWFjOTczMGM0MTQy
YjZhZjNmNzJjZDg5NmFmMS5Qcm9wZXJ0aWVzAGdldF9UYWJsZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0
aW5ncwBHcmlkVmlld1Jvd0V2ZW50QXJncwBzZXRfQ3JlZGVudGlhbHMAc2V0X1VzZURlZmF1bHRD
cmVkZW50aWFscwBnZXRfQ2VsbHMAU3lzdGVtLldlYi5VSS5XZWJDb250cm9scwBTeXN0ZW0uV2Vi
LlVJLkh0bWxDb250cm9scwBjb25uZWN0aW9ucwBTdHJpbmdTcGxpdE9wdGlvbnMAZ2V0X1BhcmFt
ZXRlcnMAX3Bhc3MAU3VjY2VzcwBNYWlsQWRkcmVzcwBnZXRfSXBBZGRyZXNzAHNldF9JcEFkZHJl
c3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9BdHRhY2htZW50cwBFeGlzdHMAZ2V0X0VzdGF0
dXMAc2V0X0VzdGF0dXMAQ29uY2F0AEZvcm1hdABPYmplY3QAZ2V0X1N1YmplY3QAc2V0X1N1Ympl
Y3QAU2VsZWN0AFN5c3RlbS5OZXQARGF0YVNldABvcF9JbXBsaWNpdABTcGxpdABGb250VW5pdABn
ZXRfRGVmYXVsdABTaW5nbGVPckRlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEuU3Fs
Q2xpZW50AFNtdHBDbGllbnQAZ2V0X1JlY2lwaWVudABzZXRfUmVjaXBpZW50AEF0dGFjaG1lbnQA
Z2V0X0N1cnJlbnQAR2V0Q3VycmVudABnZXRfRm9udABnZXRfQ291bnQAX3BvcnQAVG9MaXN0AElD
cmVkZW50aWFsc0J5SG9zdABfaG9zdABGaXJzdABnZXRfQ0NNU0lEQXV0AHNldF9DQ01TSURBdXQA
Z2V0X05vbWJyZUF1dABzZXRfTm9tYnJlQXV0AHNldF9Db21tYW5kVGltZW91dABNb3ZlTmV4dABz
ZXRfQ29tbWFuZFRleHQAR3JpZFZpZXcAZ2V0X1JvdwBUYWJsZVJvdwBHcmlkVmlld1JvdwBleABn
ZXRfQ3JlYXRlZEJ5AHNldF9DcmVhdGVkQnkAR3JvdXBCeQBnZXRfQm9keQBzZXRfQm9keQBnZXRf
QXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AG9wX0VxdWFsaXR5AG9wX0luZXF1YWxpdHkAV2luZG93
c0lkZW50aXR5AElzTnVsbE9yRW1wdHkAAABdWwBFAHgAZQBjAFUAcwBlAHIAOgB7ADIAfQBdADoA
XwA6AFsAZQB4AC4ATQBzAGcAOgAgAHsAMAB9AF0AOgBfADoAWwBlAHgALgBTAHIAYwA6ACAAewAx
AH0AXQAAIToAXwA6AFsAewAwAH0AXQA6AF8AOgBbAHsAMQB9AF0AAClhAHAAcAA2ADIAMAAuAEMA
YQB0AEwAbwBnAEUAcgByAG8AcgBTAGkAACFAAEwAbwBnAEUAcgByAG8AcgBNAGUAcwBzAGEAZwBl
AAAXQABTAHQAYQBjAGsAVAByAGEAYwBlAAAVQABJAHAAQQBkAGQAcgBlAHMAcwAAFUEAdAB1AG8A
bQBhAHQAaQBjAG8AABFAAEIAcgBvAHcAcwBlAHIAAAlTAFMASQBTAAAVQABDAHIAZQBhAHQAZQBk
AEIAeQAAFTEAMAAuADYALgA1AC4AMgA0ADAAAC9BAFMATgBAAHQAZQBsAGUAcABlAHIAZgBvAHIA
bQBhAG4AYwBlAC4AYwBvAG0AAAEAAzEAAEVqAGEAdgBpAGUAcgAuAHIAYQB5AGcAbwB6AGEAQAB0
AGUAbABlAHAAZQByAGYAbwByAG0AYQBuAGMAZQAuAGMAbwBtAAADOwAAD2kAbQBhAGcAZQBuAHMA
ACFVAHMAZQByADoAOgBDAG8AbgBlAHgAaQBvAG4AQgBEAAAfVQBzAGUAcgA6ADoAUgBlAHMAdQBs
AHQAYQBkAG8AAAtUAGEAYgBsAGUAAD1zAGQALgBzAHUAcABwAG8AcgB0AEAAdABlAGwAZQBwAGUA
cgBmAG8AcgBtAGEAbgBjAGUALgBjAG8AbQAAOVMAbwBsAGkAYwBpAHQAdQBkAGUAcwAgAHAAZQBu
AGQAaQBlAG4AdABlAHMAIABwAGEAcgBhACAAAD9BAHUAdABvAHIAaQB6AGEAYwBpAG8AbgBlAHMA
IABwAGUAbgBkAGkAZQBuAHQAZQBzACAAcABhAHIAYQAgAAAncwBvAGwAYwBpAHQAYQBuAHQAZQBA
AGEAbABnAG8ALgBjAG8AbQAABUUAQgAAD1AAZQBwAGUAMQAyADMAAClhAHUAdABvAHIAaQB6AGEA
bgB0AGUAQABhAGwAZwBvAC4AYwBvAG0AAANFAAAVQQB1AHQAbwByAGkATgBhAG0AZQAAK2EAdQB0
AG8AcgBpAHoAYQBuAHQAZQAyAEAAYQBsAGcAbwAuAGMAbwBtAAAXQQB1AHQAbwByAGkATgBhAG0A
ZQAyAAArYQB1AHQAbwByAGkAegBhAG4AdABlADMAQABhAGwAZwBvAC4AYwBvAG0AABdBAHUAdABv
AHIAaQBOAGEAbQBlADMAAClzAG8AbABjAGkAdABhAG4AdABlADIAQABhAGwAZwBvAC4AYwBvAG0A
AA9QAGUAagBlADMANQA3AAApcwBvAGwAYwBpAHQAYQBuAHQAZQAzAEAAYQBsAGcAbwAuAGMAbwBt
AAAPUABhAHMAYQA5ADYANQAAK2EAdQB0AG8AcgBpAHoAYQBuAHQAZQA0AEAAYQBsAGcAbwAuAGMA
bwBtAAAXQQB1AHQAbwByAGkATgBhAG0AZQA0AAArYQB1AHQAbwByAGkAegBhAG4AdABlADUAQABh
AGwAZwBvAC4AYwBvAG0AABdBAHUAdABvAHIAaQBOAGEAbQBlADUAAHFTAFQAXwA1ADgAMgA1ADEA
YQBjADkANwAzADAAYwA0ADEANAAyAGIANgBhAGYAMwBmADcAMgBjAGQAOAA5ADYAYQBmADEALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAB9C2g/J8DkRqsJ50XvihSY
AAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIGIAEBEYCZBQcCDhJFAyAADgUAABKApQcABA4OHBwc
BCAAEkEGAAMODhwcBQACDg4OBiABARGAtQUgABKAuQkgAhKAvQ4RgMEEIAEBHAUgAQESRQMgAAgP
BwkSTRJRElUdDggODg4OBQACAg4OCSACHQ4dDhGA0QUgABKA1QcVEoDZARJJBSABARMABSABARJJ
BAABAg4FIAIBDggFIAASgOUHFRKA2QESTQUgAgEODgYgAQESgO0FIAEBElE8Bw8OFRJtARIQFRJt
ARIQFRJtARIQFRJtAQgVEm0BCBIMFRFxAQgSJBUSbQESEBJ1EigVEm0BEhASdRJBBSAAEoDxBSAA
EoD1BiABEoD5HAMgABwFIAASgQUGIAESgQEOBhUSbQESEAgVEoCFAhIQAgUgAgEcGBkQAQIVEoEN
AR4AFRKBDQEeABUSgIUCHgACBAoBEhAQEAEBFRJtAR4AFRKBDQEeAAgVEoCFAhIQCCEQAgIVEoEN
ARUSgIkCHgEeABUSgQ0BHgAVEoCFAh4AHgEFCgISEAgOFRKAhQIVEoCJAggSEAgaEAICFRKBDQEe
ARUSgQ0BHgAVEoCFAh4AHgELCgIVEoCJAggSEAgDCgEIBRUSbQEICCAAFRFxARMABRURcQEIBCAA
EwAGIAEBEoERBiABARGBFQUgABKBGQYgAQERgR0IAAMRgSEICAgGIAEBEYEhBQAAEYEhBgABEYEp
CAYgAQERgSkGIAEBEYExBSAAEoE1BAYRgTkGIAEBEYE5EhABAhUSgQ0BHgAVEoENAR4ACAwQAQEe
ABUSgQ0BHgADIAACBSAAEoFJBSAAEoFRBiABEoFVCAQHARJ9BiABARKBYQUgAQESfQIGDggAARKB
ZRGBaQUgABKBbQcgAgEOEoFtCLd6XFYZNOCJCImEXc2AgMyRCLA/X38R1Qo6BCC/AgAEAAAAAAQB
AAAABgYVET0BCAIGCAIGAgMGEkkDBhJNBAYSgJEEBhKAlQMGEhwDBhEgAwYSLAkGFRKAhQISEAIJ
BhUSgIUCEhAIDwYVEoCFAhUSgIkCCBIQCAcgABURPQEICCABARURPQEIByADARJBCA4EIAASTQUg
AQESTQYgAgEcEnkFIAEOEnUIIAAVEm0BEhAFAAASgJEFAAASgJUGAAEBEoCVBAAAEhwDAAABBSAB
AhIQBSABCBIQCyABCBUSgIkCCBIQAygADgcoABURPQEIAygAAgQoABJNAygACAUIABKAkQUIABKA
lQQIABIcCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgB
ACNTVF81ODI1MWFjOTczMGM0MTQyYjZhZjNmNzJjZDg5NmFmMQAABQEAAAAAFgEAEUNvcHlyaWdo
dCBAICAyMDE5AABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQUAQAPRm9saW8gU29saWNpdHVkAAAXAQASQ0NNU0lE
IFNvbGljaXRhbnRlAAAXAQASTm9tYnJlIFNvbGljaXRhbnRlAAAWAQARRXN0YXR1cyBTb2xpY2l0
dWQAABcBABJDQ01TSUQgQXV0b3JpemFudGUAABcBABJOb21icmUgQXV0b3JpemFudGUAAAUBAAEA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAAB0YQAAAAAAAAAAAACOYQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgGEA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAA
AAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAAGgQAAAAAAAAAAAAAGgQ0
AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAPiImhsAAAEA
+IiaGz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBm
AG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAABAFMAdAByAGkA
bgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBt
AG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQA
AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8ANQA4ADIANQAxAGEAYwA5
ADcAMwAwAGMANAAxADQAMgBiADYAYQBmADMAZgA3ADIAYwBkADgAOQA2AGEAZgAxAAAAPgAPAAEA
RgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcAMAA2ADYALgAzADUAMAA2ADQAAAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANQA4ADIANQAxAGEAYwA5ADcA
MwAwAGMANAAxADQAMgBiADYAYQBmADMAZgA3ADIAYwBkADgAOQA2AGEAZgAxAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwA1ADgAMgA1ADEA
YQBjADkANwAzADAAYwA0ADEANAAyAGIANgBhAGYAMwBmADcAMgBjAGQAOAA5ADYAYQBmADEALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8ANQA4ADIANQAxAGEA
YwA5ADcAMwAwAGMANAAxADQAMgBiADYAYQBmADMAZgA3ADIAYwBkADgAOQA2AGEAZgAxAAAAQgAP
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADAANgA2AC4AMwA1ADAA
NgA0AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3
ADAANgA2AC4AMwA1ADAANgA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAAKAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{94138163-6875-46C6-8645-BC29A67DA1D2}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Script Task" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="170,42"
          Id="Package\Execute SQL Task"
          TopLeft="308,89" />
        <NodeLayout
          Size="134,42"
          Id="Package\Script Task"
          TopLeft="311,241" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="393,131">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-15,110"
              Start="0,0"
              End="-15,102.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51"
                    Point2="0,55"
                    Point3="-4,55" />
                  <mssgle:LineSegment
                    End="-11,55" />
                  <mssgle:CubicBezierSegment
                    Point1="-11,55"
                    Point2="-15,55"
                    Point3="-15,59" />
                  <mssgle:LineSegment
                    End="-15,102.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>