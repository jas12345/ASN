<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/10/2019 3:52:32 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PC1015238198"
  DTS:CreatorName="DB\raygozatorres.5"
  DTS:DTSID="{A0AB5E27-2BD3-41A3-BCC8-F7EF45B9E742}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.128"
  DTS:LocaleID="1033"
  DTS:ObjectName="Bonos"
  DTS:PackageType="5"
  DTS:VersionBuild="68"
  DTS:VersionGUID="{213CBE8F-C334-448E-9949-99BE1335711F}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.152.32.165.ASN]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{587138F2-3508-4AB4-A5EF-A514BA53DA3D}"
      DTS:ObjectName="10.152.32.165.ASN">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.152.32.165;Initial Catalog=ASN;Integrated Security=True;Application Name=SSIS-Bonos-{587138F2-3508-4AB4-A5EF-A514BA53DA3D}10.152.32.165.ASN;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9AD3CF04-7738-4C9C-9640-92817D35CAD6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConexionBD">
      <DTS:VariableValue
        DTS:DataType="8">Server=PC1015238228;Database=ASN;User Id=sa;Password=Cr1pt0n0m1c0n;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{14C3EED8-9973-48B3-980F-0FBE5BD7B08A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Extension">
      <DTS:VariableValue
        DTS:DataType="8">.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DC605F5F-CF57-43B6-A0B8-543F9FB1FEB0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NombrePeriodo">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A8F58A4B-16D4-4D53-947F-ABD2307152BC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PaisId">
      <DTS:VariableValue
        DTS:DataType="3">239</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DD4F9381-BA34-4283-BCAF-748A6355AFAC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PeriodoNominaId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2AE7F006-1F52-49D9-8D4B-E59D6A7EF63E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Resultado">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{80F59E18-0111-42E4-861A-5CC5AEA36235}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TablaBonos">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{679A37EB-EECB-4796-AAF9-2ACFF2E60069}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Unidad">
      <DTS:VariableValue
        DTS:DataType="8">Y:</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Borrar unidad de red"
      DTS:CreationName="Microsoft.ExecuteProcess"
      DTS:Description="Execute Process Task"
      DTS:DTSID="{121fd790-fe8d-4e65-b683-3d5e59d470a7}"
      DTS:ExecutableType="Microsoft.ExecuteProcess"
      DTS:LocaleID="-1"
      DTS:ObjectName="Borrar unidad de red"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExecuteProcessData
          Executable="cmd.exe"
          RequireFullFileName="False"
          Arguments="/c NET USE Y:  /delete /y" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Crear unidad de red"
      DTS:CreationName="Microsoft.ExecuteProcess"
      DTS:Description="Execute Process Task"
      DTS:DTSID="{2338210b-9281-4a58-99bc-d396b00b6c78}"
      DTS:ExecutableType="Microsoft.ExecuteProcess"
      DTS:LocaleID="-1"
      DTS:ObjectName="Crear unidad de red"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExecuteProcessData
          Executable="cmd.exe"
          RequireFullFileName="False"
          Arguments="/c &quot;NET USE y:  &quot;\\10.152.32.164\tp&quot;  /user:tpmty\peoplesoft.web Renovacion2016&quot;"
          WindowStyle="Hidden" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{45080C67-E1D5-4470-B6CA-D013444CAC3D}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{30385cf8-fdb9-4011-b4ea-14d6442da145}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Enviar Archivo o Depositar Archivo"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Tarea Script"
          DTS:DTSID="{8be5b052-643a-4edb-925f-326ac67e1742}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Enviar Archivo o Depositar Archivo"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_e851fcfedf22481580807873c773a266"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::NombrePeriodo,User::ConexionBD,User::Extension,User::TablaBonos,User::Unidad">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="MailHelper.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.IO;
using System.Net;
using System.Net.Mail;

namespace ST_b5c21392dbc540afa85f849020efe0d2
{
    class MailHelper
    {
        private const int Timeout = 180000;
        private readonly string _host;
        private readonly int _port;
        private readonly string _user;
        private readonly string _pass;
        private readonly bool _ssl;
        private readonly MailAddress _sender;
        private readonly string testing;
        private readonly string testingMail;
        //private readonly MailAddress testingMail;

        public string Recipient { get; set; }
        public string RecipientCC { get; set; }
        public string RecipientCCO { get; set; }
        public string Subject { get; set; }
        public string Body { get; set; }
        public bool IsBodyHtml { get; set; }
        public string AttachmentFile { get; set; }
        public Attachment archivo { get; set; }

        public MailHelper()
        {
            //MailServer - Represents the SMTP Server
            _host = "10.6.5.240";
            //Port- Represents the port number
            _port = 25;
            //MailAuthUser and MailAuthPass - Used for Authentication for sending email
            _sender = new MailAddress("RAFTool@teleperformance.com");
            _user = "";
            _pass = "";
            _ssl = true;
            testing = "0";
            //testingMail = new MailAddress(ConfigurationManager.AppSettings["testingMail"]);
            testingMail = "javier.raygoza@teleperformance.com";
        }

        public void Send()
        {
            try
            {

                Attachment att = null;
                var message = new MailMessage();

                if (testing == "1")
                {
                    foreach (var address in testingMail.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries))
                    {
                        message.To.Add(new MailAddress(address));
                    }

                    //message.To.Add(testingMail);
                }
                else
                {
                    //Split each email on the field
                    foreach (var address in Recipient.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries))
                    {
                        message.To.Add(new MailAddress(address));
                    }
                }

                message.Subject = Subject;
                message.From = _sender;
                message.Body = Body;
                message.IsBodyHtml = IsBodyHtml;

                if (testing != "1")
                {
                    if (!String.IsNullOrEmpty(RecipientCC))
                    {
                        foreach (var address in RecipientCC.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries))
                        {
                            message.CC.Add(address);
                        }
                    }

                    if (!String.IsNullOrEmpty(RecipientCCO))
                    {
                        foreach (var address in RecipientCCO.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries))
                        {
                            message.Bcc.Add(address);
                        }
                    }
                }

                var smtp = new SmtpClient(_host, _port);

                if (!String.IsNullOrEmpty(AttachmentFile))
                {
                    if (File.Exists(AttachmentFile))
                    {
                        att = new Attachment(AttachmentFile);
                        att.ContentId = "imagens";
                        message.Attachments.Add(att);
                    }
                }

                if (archivo != null)
                {
                    message.Attachments.Add(archivo);
                }

                if (_user.Length > 0 && _pass.Length > 0)
                {
                    smtp.UseDefaultCredentials = false;
                    smtp.Credentials = new NetworkCredential(_user, _pass);
                    smtp.EnableSsl = _ssl;
                }

                smtp.Send(message);

                if (att != null)
                    att.Dispose();
                message.Dispose();
                smtp.Dispose();
            }

            catch
            {
                //TODO: Enviar error a log de bd
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="RafToolObj.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ST_b5c21392dbc540afa85f849020efe0d2
{
    public class RafToolObj
    {
        public string Payroll_Processed { get; set; }
        public string Payroll_Period { get; set; }
        public string CCMSID { get; set; }
        public string Type { get; set; }
        public string Amount { get; set; }
        public string Detail { get; set; }
        public string Concept { get; set; }
        public string Error { get; set; }
        public string Responsible_of_requests_name { get; set; }
        public string Responsible_of_requests_Department { get; set; }
        public string Responsible_of_requests_Position { get; set; }
        public string Descripcion { get; set; }
        public string Manger_ID { get; set; }
        public string Nombre { get; set; }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b5c21392dbc540afa85f849020efe0d2.Properties.Settings.get_Default():ST_b5c21392dbc540afa85f849020efe0d2.Properties.Sett" +
    "ings")]

namespace ST_b5c21392dbc540afa85f849020efe0d2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_b5c21392dbc540afa85f849020efe0d2</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_b5c21392dbc540afa85f849020efe0d2</msb:DisplayName>
		<msb:ProjectId>{A3DDDEB1-E98D-4AC1-9980-1641336997C6}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_e851fcfedf22481580807873c773a266.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="MailHelper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="LogError.cs"/>
		<msb:File Include="RafToolBonos.cs"/>
		<msb:File Include="RafToolObj.cs"/>
		<msb:File Include="BonoInfo.cs"/>
		<msb:Breakpoint Include="41d7659cb7a54370a51a9ad575f8127c">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:LineNumber>155</msb:LineNumber>
			<msb:ColumnNumber>21</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="RafToolBonos.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ST_b5c21392dbc540afa85f849020efe0d2
{
    public class NMBonos
    {
        public string Payroll_Processed { get; set; }
        public string Payroll_Period { get; set; }
        public string CCMSID { get; set; }
        public string Type { get; set; }
        public string Amount { get; set; }
        public string Detail { get; set; }
        public string Concept { get; set; }
        public string Error { get; set; }
        public string Responsible_of_requests_name { get; set; }
        public string Responsible_of_requests_Department { get; set; }
        public string Responsible_of_requests_Position { get; set; }
        public string Descripcion { get; set; }
        public string Manger_ID { get; set; }
        public string Nombre { get; set; }
        public string Empresa { get; set; }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_b5c21392dbc540afa85f849020efe0d2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_b5c21392dbc540afa85f849020efe0d2")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b5c21392dbc540afa85f849020efe0d2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b5c21392dbc540afa85f849020efe0d2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b5c21392dbc540afa85f849020efe0d2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_b5c21392dbc540afa85f849020efe0d2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_b5c21392dbc540afa85f849020efe0d2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Reflection;
using System.Linq;
using System.Collections.Generic;
using System.Net.Mail;
#endregion

namespace ST_b5c21392dbc540afa85f849020efe0d2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //using (var memoryStream = new MemoryStream())
            //using (var streamWriter = new StreamWriter(memoryStream))
            //using (var csvWriter = new CsvWriter(streamWriter))
            //{
            //    //csvWriter.WriteRecords(records);
            //    //streamWriter.Flush();
            //}

            var connections = Dts.Variables["User::ConexionBD"].Value.ToString();
            var unidad = Dts.Variables["User::Unidad"].Value.ToString();
            var extension = Dts.Variables["User::Extension"].Value.ToString();
            var NombrePeriodo = Dts.Variables["User::NombrePeriodo"].Value.ToString();

            try
            {
                //var people = new List<Person> { new Person("Matt", "Abbott"), new Person("John Smith","") };
                //WriteCSV(people, @"C:\DemoCSv\people.csv");
                //User::TablaReferidosConBono
                var records = new List<NMBonos>();
                //var FechaDeCreacion = DateTime.Now.ToString("yyyyMMdd_HHmmss");
                var FechaDeCreacion = DateTime.Now.ToString("yyyyMMdd");
                var numerin = 1;
                var contador = 1;

                if (Dts.Variables.Contains("User::TablaBonos"))
                {
                    var x = (DataSet)Dts.Variables["User::TablaBonos"].Value;

                    DataTable dt = new DataTable();

                    dt = x.Tables["Table"];

                    

                    foreach (DataRow dr in dt.Rows)
                    {
                        var p1 = new NMBonos();

                        p1.Payroll_Processed = "Payroll_Processed";
                        p1.Payroll_Period = "Payroll_Period";
                        p1.CCMSID = "CCMSID";
                        p1.Type = "Type";
                        p1.Amount = "Amount";
                        p1.Detail = "Detail";
                        p1.Concept = "Concept";
                        p1.Error = "Error";
                        p1.Responsible_of_requests_name = "Responsible_of_requests_name";
                        p1.Responsible_of_requests_Department = "Responsible_of_requests_Department";
                        p1.Responsible_of_requests_Position = "Responsible_of_requests_Position";
                        p1.Descripcion = "Descripcion";
                        p1.Manger_ID = "Manger_ID";
                        p1.Nombre = "Nombre";
                        p1.Empresa = "Empresa";

                        records.Add(p1);
                    }

                    if (records.Count > 0)
                    {
                        var listaDeCIA = new List<string>();
                        var listaDeBonoInfo = new List<BonoInfo>();

                        listaDeCIA = records
                                      .GroupBy(p => p.Empresa)
                                      .Select(g => g.First().Empresa)
                                      .ToList();

                        //foreach (var CIA in listaDeCIA)
                        //{
                        //    var elBonoInfo = records.Where(v => v.CIA_IDReporteo == CIA).Take(1).Select(c =>
                        //       new BonoInfo
                        //       {
                        //           ID = contador,
                        //           CIA_IDReporteo = c.CIA_IDReporteo,
                        //           Compania = c.Compania,
                        //           Folder = c.Folder,
                        //           ID_Empresa = c.ID_Empresa,
                        //           ID_REP = c.ID_REP
                        //       }
                        //   ).SingleOrDefault();

                        //    contador++;

                        //    listaDeBonoInfo.Add(elBonoInfo);
                        //}


                        foreach (var IDCIA in listaDeCIA)
                        {
                            var liston = new List<NMBonos>();
                            var bonosArchivo = new List<RafToolObj>();

                            var p1 = new RafToolObj();

                            p1.Payroll_Processed = "Payroll_Processed";
                            p1.Payroll_Period = "Payroll_Period";
                            p1.CCMSID = "CCMSID";
                            p1.Type = "Type";
                            p1.Amount = "Amount";
                            p1.Detail = "Detail";
                            p1.Concept = "Concept";
                            p1.Error = "Error";
                            p1.Responsible_of_requests_name = "Responsible_of_requests_name";
                            p1.Responsible_of_requests_Department = "Responsible_of_requests_Department";
                            p1.Responsible_of_requests_Position = "Responsible_of_requests_Position";
                            p1.Descripcion = "Descripcion";
                            p1.Manger_ID = "Manger_ID";
                            p1.Nombre = "Nombre";


                            bonosArchivo.Add(p1);

                            liston = records.Where(morro => morro.Empresa == IDCIA).ToList();

                            foreach(var obj  in liston)
                            {
                                
                                var bono = new RafToolObj();

                                bono.Payroll_Processed = obj.Payroll_Processed;
                                bono.Payroll_Period = obj.Payroll_Period;
                                bono.CCMSID = obj.CCMSID.ToString();
                                bono.Type = obj.Type;
                                bono.Amount = obj.Amount;
                                bono.Detail = obj.Detail;
                                bono.Concept = obj.Concept;
                                bono.Error = obj.Error;
                                bono.Responsible_of_requests_name = obj.Responsible_of_requests_name;
                                bono.Responsible_of_requests_Department = obj.Responsible_of_requests_Department;
                                bono.Responsible_of_requests_Position = obj.Responsible_of_requests_Position;
                                bono.Descripcion = obj.Descripcion;
                                bono.Manger_ID = obj.Manger_ID.ToString();
                                bono.Nombre = obj.Nombre;
                                //empresa = obj.Empresa;

                                bonosArchivo.Add(bono);
                               
                            }

                            var result = WriteCsvToMemory(bonosArchivo);
                            var memoryStream = new MemoryStream(result);

                            /// El numero 10 es simbolicos, solo es para comprobar que tegno registros, tratandose de Miles
                            /// deberia tener mas de 10 registros pues es segun los empleados que hay en la compañia con Miles.
                            if (records.Count > 0)
                            {

                                // 10.156.42.40 =  mty - cvo - cgn03.tpnsn.com
                                //var server = @"\\10.156.42.40\Payroll_Analysis";
                                var server = @"\\10.152.32.164\tp";
                                var FolderPath = string.Format(@" \Temp\files\{0}", NombrePeriodo.Substring(0, 4));                                                                                                                          
                                var nombreArchivo = string.Format("MO_{2}_{0}{1}", NombrePeriodo, extension, IDCIA);

                                var serverPath = server + FolderPath + "\\" + nombreArchivo;
                                var filePath = unidad + FolderPath + "/" + nombreArchivo;
                                //using (FileStream fs = new FileStream("Z:\\MILES\\ML_Miles_" + FechaDeCreacion + ".csv", FileMode.Create))
                                //using (FileStream fs = new FileStream("C:" + "//RafArchivo/basura/basuron" + "/" + nombreArchivo, FileMode.Create))
                                using (FileStream fs = new FileStream(filePath, FileMode.Create))
                                {
                                    numerin++;
                                    memoryStream.Seek(0, SeekOrigin.Begin);
                                    memoryStream.CopyTo(fs);
                                    fs.Flush();
                                }
                            }
                        }
                    }
                }

                //var records = new List<Person>();
                //records.Add(new Person { uno = "hola", dos = "mundo", tres = "ho1" });
                //records.Add(new Person { uno = "holas", dos = "mundos", tres = "ho2" });
                //records.Add(new Person { uno = "holas3", dos = "mundos3", tres = "ho3" });
                //records.Add(new Person { uno = "holas4", dos = "mundos4", tres = "ho4" });
                //records.Add(new Person { uno = "holas5", dos = "mundos5", tres = "ho5" });
                
                //var result = WriteCsvToMemory(records);
                //var memoryStream = new MemoryStream(result);

                ///// El numero 10 es simbolicos, solo es para comprobar que tegno registros, tratandose de Miles
                ///// deberia tener mas de 10 registros pues es segun los empleados que hay en la compañia con Miles.
                //if (records.Count > 10)
                //{
                //    //using (FileStream fs = new FileStream("Z:\\MILES\\ML_Miles_" + FechaDeCreacion + ".csv", FileMode.Create))
                //    using (FileStream fs = new FileStream("C:\\RafArchivo\\" + FechaDeCreacion + extension, FileMode.Create))
                //    {
                //        memoryStream.Seek(0, SeekOrigin.Begin);
                //        memoryStream.CopyTo(fs);
                //        fs.Flush();
                //    }
                //}

                //Attachment att = new Attachment(memoryStream, "test.csv");

                //MailHelper mail = new MailHelper();

                //mail.archivo = att;
                //mail.Recipient = Dts.Variables["User::EmailReport"].Value.ToString(); ;
                //mail.Subject = "test from dtsx email with csv";

                //if (records.Count > 0)
                //{
                //    mail.Send();
                //}
            }
            catch (Exception ex)
            {
                LogError log = new LogError();
                log.RecordError(ex, 1, connections);
            }

            // TODO: Add your code here

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        public byte[] WriteCsvToMemory(IEnumerable<RafToolObj> records)
        {


            using (var memoryStream = new MemoryStream())
            using (var streamWriter = new StreamWriter(memoryStream))
            //using (var csvWriter = new CsvWriter(streamWriter))
            {
                Type itemType = typeof(RafToolObj);
                var props = itemType.GetProperties(BindingFlags.Public | BindingFlags.Instance);
                //.OrderBy(p => p.Name);

                //streamWriter.WriteLine(string.Join(", ", props.Select(p => p.Name)));

                foreach (var item in records)
                {
                    streamWriter.WriteLine(string.Join(",", props.Select(p => p.GetValue(item, null))));
                }

                //csvWriter.WriteRecords(records);
                //streamWriter.WriteLine(records);
                streamWriter.Flush();
                return memoryStream.ToArray();
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="BonoInfo.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ST_b5c21392dbc540afa85f849020efe0d2
{
    public class BonoInfo
    {
        public int ID { get; set; }
        public string ID_Empresa { get; set; }
        public string CIA_IDReporteo { get; set; }
        public string Folder { get; set; }
        public string Compania { get; set; }
        public string ID_REP { get; set; }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_e851fcfedf22481580807873c773a266.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{F0113C09-E455-4949-946A-08358AF186B6}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_b5c21392dbc540afa85f849020efe0d2</RootNamespace><AssemblyName>ST_e851fcfedf22481580807873c773a266</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="BonoInfo.cs" /><Compile Include="LogError.cs" /><Compile Include="MailHelper.cs" /><Compile Include="RafToolBonos.cs" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="RafToolObj.cs" /><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="LogError.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Data.SqlClient;

namespace ST_b5c21392dbc540afa85f849020efe0d2
{
    class LogError
    {
        public string LogErrorMessage { get; set; }
        public string StackTrace { get; set; }
        public string IpAddress { get; set; }
        public string Browser { get; set; }
        public Nullable<int> CreatedBy { get; set; }

        public void RecordError(Exception ex, int EID, string connections)
        {
            try
            {
                string MessageInnerEx = string.Format("[ExecUser:{2}]:_:[ex.Msg: {0}]:_:[ex.Src: {1}]"
                            , ex.Message, ex.Source, System.Security.Principal.WindowsIdentity.GetCurrent().Name);
                if (ex.InnerException != null)
                {
                    MessageInnerEx += string.Format(":_:[{0}]:_:[{1}]", ex.InnerException.Message, ex.InnerException.StackTrace);
                }

                SqlConnection conn = new SqlConnection(connections);

                SqlCommand cmd = new SqlCommand();

                cmd.CommandText = "601.CatLogErrorSi";
                cmd.CommandType = System.Data.CommandType.StoredProcedure;
                cmd.Parameters.Add("@LogErrorMessage", System.Data.SqlDbType.VarChar).Value = MessageInnerEx;
                cmd.Parameters.Add("@StackTrace", System.Data.SqlDbType.VarChar).Value = ex.StackTrace;
                cmd.Parameters.Add("@IpAddress", System.Data.SqlDbType.VarChar).Value = "Atuomatico";
                cmd.Parameters.Add("@Browser", System.Data.SqlDbType.VarChar).Value = "SSIS";
                cmd.Parameters.Add("@CreatedBy", System.Data.SqlDbType.Int).Value = 1;

                cmd.Connection = conn;
                cmd.CommandTimeout = 600;

                conn.Open();

                int i = cmd.ExecuteNonQuery();

                conn.Close();
            }
            catch (Exception exs)
            {

            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_e851fcfedf22481580807873c773a266.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGAw3mAAAAAAAAAAAOAAIiALATAAAEgAAAAIAAAAAAAAimYA
AAAgAAAAgAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAADAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADhmAABPAAAAAIAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAKAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAkEYAAAAgAAAASAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAgAAAAAYAAABKAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAKAAAAACAAAAUAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABs
ZgAAAAAAAEgAAAACAAUABC8AAHw2AAABAAAAAAAAAIBlAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCoe
AnsDAAAEKiICA30DAAAEKh4CewQAAAQqIgIDfQQAAAQqHgJ7BQAABCoiAgN9BQAABCoeAnsGAAAE
KiICA30GAAAEKh4CKBAAAAoqHgJ7BwAABCoiAgN9BwAABCoeAnsIAAAEKiICA30IAAAEKh4CewkA
AAQqIgIDfQkAAAQqHgJ7CgAABCoiAgN9CgAABCoeAnsLAAAEKiICA30LAAAEKgAbMAQAIQEAAAEA
ABFyAQAAcANvEQAACgNvEgAACigTAAAKbxQAAAooFQAACgoDbxYAAAosJwZyXwAAcANvFgAACm8R
AAAKA28WAAAKbxcAAAooGAAACigZAAAKCgVzGgAACgtzGwAACiVygQAAcG8cAAAKJRpvHQAACiVv
HgAACnKlAABwHxZvHwAACgZvIAAACiVvHgAACnLHAABwHxZvHwAACgNvFwAACm8gAAAKJW8eAAAK
ct8AAHAfFm8fAAAKcvUAAHBvIAAACiVvHgAACnILAQBwHxZvHwAACnIdAQBwbyAAAAolbx4AAApy
JwEAcB5vHwAACheMNQAAAW8gAAAKJQdvIQAACiUgWAIAAG8iAAAKB28jAAAKbyQAAAomB28lAAAK
3gMm3gAqAAAAQRwAAAAAAAAAAAAAHQEAAB0BAAADAAAAEAAAAR4CexUAAAQqIgIDfRUAAAQqHgJ7
FgAABCoiAgN9FgAABCoeAnsXAAAEKiICA30XAAAEKh4CexgAAAQqIgIDfRgAAAQqHgJ7GQAABCoi
AgN9GQAABCoeAnsaAAAEKiICA30aAAAEKh4CexsAAAQqIgIDfRsAAAQqHgJ7HAAABCoiAgN9HAAA
BCoTMAIAXQAAAAAAAAACKBAAAAoCcj0BAHB9DQAABAIfGX0OAAAEAnJTAQBwcyYAAAp9EgAABAJy
iwEAcH0PAAAEAnKLAQBwfRAAAAQCF30RAAAEAnKNAQBwfRMAAAQCcpEBAHB9FAAABCoAAAAbMAUA
VQIAAAIAABEUCnMnAAAKCwJ7EwAABHLXAQBwKCgAAAosRwJ7FAAABBeNLQAAASUWctsBAHCiF28p
AAAKDRYTBCseCREEmhMFB28qAAAKEQVzJgAACm8rAAAKEQQXWBMEEQQJjmky2ytFAigaAAAGF40t
AAABJRZy2wEAcKIXbykAAAoNFhMEKx4JEQSaEwYHbyoAAAoRBnMmAAAKbysAAAoRBBdYEwQRBAmO
aTLbBwIoIAAABm8sAAAKBwJ7EgAABG8tAAAKBwIoIgAABm8uAAAKBwIoJAAABm8vAAAKAnsTAAAE
ctcBAHAoMAAACjmaAAAAAigcAAAGKDEAAAotQAIoHAAABheNLQAAASUWctsBAHCiF28pAAAKDRYT
BCsZCREEmhMHB28yAAAKEQdvMwAAChEEF1gTBBEECY5pMuACKB4AAAYoMQAACi1AAigeAAAGF40t
AAABJRZy2wEAcKIXbykAAAoNFhMEKxkJEQSaEwgHbzQAAAoRCG8zAAAKEQQXWBMEEQQJjmky4AJ7
DQAABAJ7DgAABHM1AAAKDAIoJgAABigxAAAKLTACKCYAAAYoNgAACiwjAigmAAAGczcAAAoKBnLf
AQBwbzgAAAoHbzkAAAoGbzoAAAoCKCgAAAYsEQdvOQAACgIoKAAABm86AAAKAnsPAAAEbzsAAAoW
MTgCexAAAARvOwAAChYxKggWbzwAAAoIAnsPAAAEAnsQAAAEcz0AAApvPgAACggCexEAAARvPwAA
CggHb0AAAAoGLAYGb0EAAAoHb0IAAAoIb0MAAAreAybeACoAAABBHAAAAAAAAAAAAABRAgAAUQIA
AAMAAAANAAABHgJ7HQAABCoiAgN9HQAABCoeAnseAAAEKiICA30eAAAEKh4Cex8AAAQqIgIDfR8A
AAQqHgJ7IAAABCoiAgN9IAAABCoeAnshAAAEKiICA30hAAAEKh4CeyIAAAQqIgIDfSIAAAQqHgJ7
IwAABCoiAgN9IwAABCoeAnskAAAEKiICA30kAAAEKh4CeyUAAAQqIgIDfSUAAAQqHgJ7JgAABCoi
AgN9JgAABCoeAnsnAAAEKiICA30nAAAEKh4CeygAAAQqIgIDfSgAAAQqHgJ7KQAABCoiAgN9KQAA
BCoeAnsqAAAEKiICA30qAAAEKh4CeysAAAQqIgIDfSsAAAQqHgJ7LAAABCoiAgN9LAAABCoeAnst
AAAEKiICA30tAAAEKh4Cey4AAAQqIgIDfS4AAAQqHgJ7LwAABCoiAgN9LwAABCoeAnswAAAEKiIC
A30wAAAEKh4CezEAAAQqIgIDfTEAAAQqHgJ7MgAABCoiAgN9MgAABCoeAnszAAAEKiICA30zAAAE
Kh4CezQAAAQqIgIDfTQAAAQqHgJ7NQAABCoiAgN9NQAABCoeAns2AAAEKiICA302AAAEKh4CezcA
AAQqIgIDfTcAAAQqHgJ7OAAABCoiAgN9OAAABCoeAns5AAAEKiICA305AAAEKgAAABswBQBDBQAA
AwAAEQIoRAAACm9FAAAKcu8BAHBvRgAACm9HAAAKb0gAAAoKAihEAAAKb0UAAApyEQIAcG9GAAAK
b0cAAApvSAAACgsCKEQAAApvRQAACnIrAgBwb0YAAApvRwAACm9IAAAKDAIoRAAACm9FAAAKcksC
AHBvRgAACm9HAAAKb0gAAAoNc0kAAAoTBChKAAAKEwYSBnJzAgBwKEsAAAomFxMFAihEAAAKb0UA
AApyhQIAcG9MAAAKOWoEAAACKEQAAApvRQAACnKFAgBwb0YAAApvRwAACnRCAAABc00AAAomb04A
AApypwIAcG9PAAAKb1AAAApvUQAAChMHONEAAAARB29SAAAKdEcAAAEmc0oAAAYTCBEIcrMCAHBv
LQAABhEIctcCAHBvLwAABhEIcvUCAHBvMQAABhEIcgMDAHBvMwAABhEIcg0DAHBvNQAABhEIchsD
AHBvNwAABhEIcikDAHBvOQAABhEIcjkDAHBvOwAABhEIckUDAHBvPQAABhEIcn8DAHBvPwAABhEI
csUDAHBvQQAABhEIcgcEAHBvQwAABhEIch8EAHBvRQAABhEIcjMEAHBvRwAABhEIckEEAHBvSQAA
BhEEEQhvUwAAChEHb1QAAAo6I////94VEQd1GwAAARMJEQksBxEJb1UAAArcEQRvVgAAChY+JAMA
AHNXAAAKJnNYAAAKJhEEfkIAAAQlLRcmfkEAAAT+BnYAAAZzWQAACiWAQgAABCgBAAArfkMAAAQl
LRcmfkEAAAT+BncAAAZzWwAACiWAQwAABCgCAAArKAMAACtvXgAAChMKOKECAABzcgAABhMLEQsS
CihfAAAKfUAAAARzSQAACiZzYAAAChMMc2cAAAYTDRENcrMCAHBvTAAABhENctcCAHBvTgAABhEN
cvUCAHBvUAAABhENcgMDAHBvUgAABhENcg0DAHBvVAAABhENchsDAHBvVgAABhENcikDAHBvWAAA
BhENcjkDAHBvWgAABhENckUDAHBvXAAABhENcn8DAHBvXgAABhENcsUDAHBvYAAABhENcgcEAHBv
YgAABhENch8EAHBvZAAABhENcjMEAHBvZgAABhEMEQ1vYQAAChEEEQv+BnMAAAZzYgAACigEAAAr
KAUAACtvZAAAChMPOOcAAAASDyhlAAAKExBzZwAABhMREREREG8sAAAGb0wAAAYREREQby4AAAZv
TgAABhERERBvMAAABm9IAAAKb1AAAAYREREQbzIAAAZvUgAABhERERBvNAAABm9UAAAGEREREG82
AAAGb1YAAAYREREQbzgAAAZvWAAABhERERBvOgAABm9aAAAGEREREG88AAAGb1wAAAYREREQbz4A
AAZvXgAABhERERBvQAAABm9gAAAGEREREG9CAAAGb2IAAAYREREQb0QAAAZvSAAACm9kAAAGERER
EG9GAAAGb2YAAAYRDBERb2EAAAoSDyhmAAAKOg3////eDhIP/hYLAAAbb1UAAArcAhEMKGkAAAZz
ZwAAChMOEQRvVgAAChY+gwAAAHJRBABwcncEAHAJFhpvaAAACihpAAAKExJymQQAcAkIEQt7QAAA
BCgVAAAKExMREnK1BABwERMoagAACiYHERJyuQQAcBETKGoAAAoYc2sAAAoTFBEFF1gTBREOFmoW
b2wAAAomEQ4RFG9tAAAKERRvbgAACt4MERQsBxEUb1UAAArcEgoobwAACjpT/f//3g4SCv4WCAAA
G29VAAAK3N4SExVzGQAABhEVFwZvGAAABt4AAihEAAAKFm9wAAAKKgBBfAAAAgAAAPgAAADkAAAA
3AEAABUAAAAAAAAAAgAAAF8DAAD6AAAAWQQAAA4AAAAAAAAAAgAAANcEAAAjAAAA+gQAAAwAAAAA
AAAAAgAAAGACAAC0AgAAFAUAAA4AAAAAAAAAAAAAAIAAAACkBAAAJAUAABIAAAAQAAABGzAFAJoA
AAAEAAARc3EAAAoKBnNyAAAKC9AGAAACKHMAAAofFG90AAAKDANvdQAACg0rN3N4AAAGEwQRBAlv
dgAACn1EAAAEB3K9BABwCBEE/gZ5AAAGc3cAAAooBgAAKygHAAArb3kAAAoJb1QAAAotwd4KCSwG
CW9VAAAK3AdvegAACgZvewAAChMF3hQHLAYHb1UAAArcBiwGBm9VAAAK3BEFKgAAASgAAAIAJgBD
aQAKAAAAAAIADQB2gwAKAAAAAAIABgCHjQAKAAAAAB4CKHwAAAoqrn46AAAELR5ywQQAcNAIAAAC
KHMAAApvfQAACnN+AAAKgDoAAAR+OgAABCoafjsAAAQqHgKAOwAABCoafjwAAAQqHgIofwAACiou
c3AAAAaAPAAABCpKA29IAAAGAntAAAAEKCgAAAoqLnN1AAAGgEEAAAQqHgNvSAAABioyAygIAAAr
b0gAAAYqOgMCe0QAAAQUb4EAAAoqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAAEBgAACN+AAB8GAAAGBQAACNTdHJpbmdzAAAAAJQsAAA0BQAAI1VTAMgxAAAQAAAAI0dVSUQA
AADYMQAApAQAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQsAAAD6ATMAFgAAAQAAAFAAAAANAAAARAAA
AHkAAAA5AAAAgQAAAAMAAACjAAAABAAAAAcAAAAzAAAAZAAAAA4AAAABAAAABgAAAAEAAAAEAAAA
CAAAAAAATAwBAAAAAAAGADkK4w8GAMgK4w8GAIUJyA8PAFcQAAAGALIJVg0GABwKVg0GAP0JVg0G
AK8KVg0GAFkKVg0GAHIKVg0GAMkJVg0GAOQJCQsGAMgRywwGAE0J4w8GAG4AywwGAE0OywwKAOwN
IhIOAFwRGgwOAF8SGgwOACIHGgwOADgSGgwSAI0KfgsSAMwIfgsGAKIAbQIGABUIywwGAKEPBREG
AHQHywxjALAPAAAGALAMtQEGAKUMtQEGAHkAbQIGAGAPtQEGALMOVg0GAJQAbQIGANsMywwGALoA
ywwWAMEA4A4GAGgJyA8GAA4PAxAGAJ4OQQ0OADgJBAwOAJkJBAwOAAMJLA0GAPgTuQsGACULywwK
AJ4GIhIKAJQGVw4KAGgITAIKAHwNIhIKAFMPIhIKAFoITAIKAEcPVw4GAKkAywwKAN8NVw4GACQR
ywwOAJMNGgwGAIcA0wsGAMUHtQEOABsJGgwOAKkNGgwOAKcL7hEOABQT7hESAPILfgsaALIQHgga
AGAHHggKAPkRTAIKAFYHTAIKAGgNTAIKAL4NTAIKAOgITAIKAGcTTAIWAGkH4A4GAA0HtQEGALYM
tQEGAPwMtQEGAG8IywwGAIAHywwGALwQVg0GAG0PtQEGALQTVg0AAAAAGQEAAAAAAQABAAEAEACq
Ds0ANQABAAEAAAAQAJgPzQA1AAcADgAAABAAHg/NADUADAAaAAEAEAA3Ec0ANQAdACwAAQAQAE8L
zQA1ACwASwABABAA8QzNAF0AOgBoAAAAEAAKEGYQNQA6AGsAAAEQAMkQZhCtADwAbwADAQAAjBEA
AI0APQByAAMBEAAXAAAANQBAAHIAAyEQAGECAAA1AEEAdAADARAALAAAADUARAB4AAEA4wIFAwEA
kwMIAwEALgUIAwEAZwUIAwEAYAMIAwEASAMIAwEADgQIAwEA8gMIAwEArwUIAwEAfwUIAwEAYwYL
A1GAPhMFAyEAJxMIAyEABxMFAyEAKQ8IAyEAThEIAyEAoAwSAyEAAg8VAyEANgsIAyEAKgwIAwEA
4wUIAwEAxgIIAwEAKgMIAwEAygUIAwEAfgYIAwEAwwQSAwEALwQIAwEATgUZAwEArwMIAwEA0gMI
AwEA9wIIAwEAfQQIAwEAMgYIAwEAqwQIAwEASgYIAwEAmAUIAwEATwQIAwEA/gUIAwEA/AQIAwEA
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
5S4AAAAAgwBhAKgDOAC2IAAAAACGGLsPBgA5APIuAAAAAIMAQQC0AzkAAAABAAMLAAABAAMLAAAB
AAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAG8T
AAACAE8BAAADABgRAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAAB
AAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAML
AAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAAB
AAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAMLAAABAAML
AAABAAMLAAABANsPAAABAAMLAAABAMAOAAABAN4OAAABADwLAAABAN4OCQC7DwEAEQC7DwYAGQC7
DwoAKQC7DxAAMQC7DxAAOQC7DxAAQQC7DxAASQC7DxAAUQC7DxAAWQC7DxAAYQC7DxAAcQC7DwYA
sQC7DwYAMQG7DwYAUQG7DxUAaQC7DwYAgQAWByIAgQACByIAYQHEEiYAYQHKByIAaQHBESwAgQBE
DjQAgQDUBiIAaQHBETkAaQG6EUAAiQC7DxAAcQG7DwYAeQFPExAAeQFkCEYAcQE/EU0AiQGWAlMA
oQHwCl0AcQHQDWIAeQEzEwEAsQHsDAYAeQG9E2gAsQEqCQYAkQC7DxAAoQC7DwYAaQHeE3wAaQEB
EoIAoQBqDowADACWApoAoQDbERAAoQDSDKAAoQCnExAAoQCDDKYAaQHqE3wAaQEIFKsAoQAoAYwA
wQGWAhAAoQBlAowAqQC7D7AA0QGqEasAmQC7DxAA2QGIAhAAoQCaEbYAFACWApoAaQFEC2gAqQDi
EKYA6QG7D8QAqQDSEMoAqQCSDKYAqQCpBtEA2QEwCQYAoQAwCQYAqQAwCQYAuQCEEQ4B+QGuEBQB
AQK9DBoBCQLmCiEBaQAjCyIAHAC7DwYAyQBfEywByQAjCzEBAQL8EDYBGQK7DwYAEQKjEDsBIQK9
DEEBGQKxEUgBMQKtD04B0QC4EiEBHACWApoA0QBGE1MB2QAwCQYAHADPEmgAJAC7DwYALAC7DwYA
NAC7D20BQQKOE3MBPAC7D20BQQLnEagBQQINE80BJACtD+EBRAC4EvABTAC7DwYATACWApoAVAC7
D20BQQKKCAUCHACtD+EBXAC4EvABXABGE1MB6QC7DykCaQEsCy8CaQHBETUCaQG6ETsC8QC7D0MC
UQJaC0sCUQJxDlMCUQI+CwYARABGE1MB+QETEgEA6QC7DwYAAQG7D1MCYQKSB3ECYQKVEHoCZACt
D4sCbAC4EvABdAC7D20BaQEHDa4CeQI+CBAAeQI+CwYA6QCWE74CuQC7DwYAYQKwE8MCOQG7D8kC
WQG7DwYAQQItE9ECCQH6Ct0CCAAwAPYCCAD4APsCCAD8AAADIABjAAADIQBjAAADLgALAOUDLgAT
AO4DLgAbAA0ELgAjABYELgArAD8ELgAzAD8ELgA7AD8ELgBDABYELgBLAEUELgBTAD8ELgBbAFwE
QABjAAADQQBjAAADYABjAAADYQBjAAADgABjAAADgQBjAAADoABjAAADoQBjAAADwABjAAADwQBj
AAAD4ABjAAAD4QBjAAAD4wBrAAADAAFjAAADAQFjAAADAwFzAAADIAFjAAADIQFjAAADQAFjAAAD
QQFjAAADYAFjAAADYQFjAAADYwFjAAADgAFjAAADgwFjAAADowFjAAADwAFjAAAD4AFjAAADAAJj
AAADIAJjAAADQAJjAAADYAJjAAADgAJjAAADoAJjAAADoQJjAAADwAJjAAADwQJjAAAD4AJjAAAD
4QJjAAADAQNjAAADIQNjAAADQANjAAADQQNjAAADYANjAAADYQNjAAADgANjAAADgQNjAAADoANj
AAADoQNjAAADwANjAAADwQNjAAAD4ANjAAAD4QNjAAADAARjAAADAQRjAAADIARjAAADIQRjAAAD
QARjAAADQQRjAAADYARjAAADYQRjAAADgARjAAADgQRjAAADoARjAAADoQRjAAADwARjAAADwQRj
AAAD4ARjAAAD4QRjAAADAAVjAAADAQVjAAADIAVjAAADIQVjAAADQQVjAAADYQVjAAADgAVjAAAD
gQVjAAADoAVjAAADoQVjAAADwAVjAAADwQVjAAAD4AVjAAAD4QVjAAADAAZjAAADAQZjAAADIAZj
AAADIQZjAAADKQZ7AA0EQAZjAAADQQZjAAADSQZ7AA0EYAZjAAADYQZjAAADgAZjAAADgQZjAAAD
oAZjAAADoQZjAAADwAZjAAADwQZjAAAD4AZjAAAD4QZjAAADAAdjAAADAQdjAAADIAdjAAADIQdj
AAADQAdjAAADYAdjAAADgAdjAAADgQdjAAADoAdjAAADwAdjAAAD4AdjAAADAAhjAAADIAhjAAAD
QAhjAAADYAhjAAADgAhjAAADoAhjAAADwAhjAAAD4AhjAAADAAljAAADIAljAAADYAljAAADgAlj
AAADoAljAAADwAljAAAD4AljAAADAApjAAADIApjAAADQApjAAADYApjAAADgApjAAADoApjAAAD
wApjAAAD4ApjAAADAAtjAAADIAtjAAADQAtjAAADYAtjAAADgAtjAAADoAtjAAADwAtjAAAD4Atj
AAADAAxjAAADIAxjAAADQAxjAAADYAxjAAADgAxjAAADoAxjAAADwAxjAAADHABsANcAWgICAAEA
AwAHAAQADAAFABQABgAjAAgAMQAJADMAAACQAbsDAAApAr8DAACPDr8DAAD7Dr8DAAANAr8DAADO
Ab8DAABGB78DAADnBr8DAAB6Eb8DAAA/D78DAACEE8MDAABVEr8DAABDAb8DAACoAb8DAADfEb8D
AACrE78DAACHDMsDAAC7B78DAADWDs8DAAC0Ar8DAADFBr8DAABiAb8DAABvCL8DAADoEr8DAABF
DL8DAAD/Er8DAACbD78DAAD4B78DAACVEr8DAAAjDr8DAAAgDb8DAAB7Ab8DAACDCL8DAABEAr8D
AAC0Ar8DAADFBr8DAABiAb8DAABvCL8DAADoEr8DAABFDL8DAAD/Er8DAACbD78DAAD4B78DAACV
Er8DAAAjDr8DAAAgDb8DAAB7Ab8DAACDCL8DAAAOD9QDAADECNoDAAALEuADAgABAAMAAQACAAMA
AgADAAUAAQAEAAUAAgAFAAcAAQAGAAcAAgAHAAkAAQAIAAkAAgAJAAsAAQAKAAsAAgALAA0AAQAM
AA0AAgAOAA8AAQAPAA8AAgAQABEAAQARABEAAgASABMAAQATABMAAgAUABUAAQAVABUAAgAWABcA
AQAXABcAAgAaABkAAQAbABkAAgAcABsAAQAdABsAAgAeAB0AAQAfAB0AAgAgAB8AAQAhAB8AAgAi
ACEAAQAjACEAAgAkACMAAQAlACMAAgAmACUAAQAnACUAAgAoACcAAQApACcAAgAsACkAAQAtACkA
AgAuACsAAQAvACsAAgAwAC0AAQAxAC0AAgAyAC8AAQAzAC8AAgA0ADEAAQA1ADEAAgA2ADMAAQA3
ADMAAgA4ADUAAQA5ADUAAgA6ADcAAQA7ADcAAgA8ADkAAQA9ADkAAgA+ADsAAQA/ADsAAgBAAD0A
AQBBAD0AAgBCAD8AAQBDAD8AAgBEAEEAAQBFAEEAAgBGAEMAAQBHAEMAAgBIAEUAAQBJAEUAAgBL
AEcAAQBMAEcAAgBNAEkAAQBOAEkAAgBPAEsAAQBQAEsAAgBRAE0AAQBSAE0AAgBTAE8AAQBUAE8A
AgBVAFEAAQBWAFEAAgBXAFMAAQBYAFMAAgBZAFUAAQBaAFUAAgBbAFcAAQBcAFcAAgBdAFkAAQBe
AFkAAgBfAFsAAQBgAFsAAgBhAF0AAQBiAF0AAgBjAF8AAQBkAF8AAgBlAGEAAQBmAGEAAgBsAGMA
AgBtAGUAAQBuAGUAAgBvAGcAkgC8ACUBVwFdAWQBmQHqAfUB/AEiAoQClQKdAgSAAAABAAAArB5H
cgAAAAAAAPEAAAAEAAAAAAAAAAAAAADkAlgCAAAAAAQAAAAAAAAAAAAAAOQCTAIAAAAABAAAAAAA
AAAAAAAA5ALLDAAAAAAMAAAAAAAAAAAAAADtAl8LAAAAAAQAAAAAAAAAAAAAAOQCkAgAAAAADAAA
AAAAAAAAAAAA7QLVAQAAAAAAAAAAAQAAABQQAAAKAAcACwAHAAwABwANAAcAtQCTAbkAwQG7AN0B
xwAdArsAHQK5AKcC8QC6AgEBHQIAAAA8PjlfXzBfMAA8TWFpbj5iX18wXzAAPD5jX19EaXNwbGF5
Q2xhc3MwXzAAPD5jX19EaXNwbGF5Q2xhc3MxXzAAPFdyaXRlQ3N2VG9NZW1vcnk+Yl9fMAA8Pjlf
XzBfMQA8TWFpbj5iX18wXzEATnVsbGFibGVgMQBJRW51bWVyYWJsZWAxAENvbGxlY3Rpb25gMQBJ
RW51bWVyYXRvcmAxAExpc3RgMQBJbnQzMgA8TWFpbj5iX18yAEZ1bmNgMgBJR3JvdXBpbmdgMgBT
VF9iNWMyMTM5MmRiYzU0MGFmYTg1Zjg0OTAyMGVmZTBkMgBTVF9lODUxZmNmZWRmMjI0ODE1ODA4
MDc4NzNjNzczYTI2NgA8PjkAPE1vZHVsZT4ASURDSUEAZ2V0X0NDAGdldF9SZWNpcGllbnRDQwBz
ZXRfUmVjaXBpZW50Q0MARUlEAGdldF9DQ01TSUQAc2V0X0NDTVNJRABnZXRfTWFuZ2VyX0lEAHNl
dF9NYW5nZXJfSUQAZ2V0X0lEAHNldF9JRABnZXRfUmVjaXBpZW50Q0NPAHNldF9SZWNpcGllbnRD
Q08AU3lzdGVtLklPAGdldF9JRF9SRVAAc2V0X0lEX1JFUABNaWNyb3NvZnQuU3FsU2VydmVyLk1h
bmFnZWREVFMAdmFsdWVfXwBnZXRfQ29tcGFuaWEAc2V0X0NvbXBhbmlhAGdldF9JRF9FbXByZXNh
AHNldF9JRF9FbXByZXNhAGdldF9FbXByZXNhAHNldF9FbXByZXNhAFN5c3RlbS5EYXRhAG1zY29y
bGliADw+YwBnZXRfQmNjAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAHNldF9Db250ZW50SWQA
QWRkAGdldF9QYXlyb2xsX1Byb2Nlc3NlZABzZXRfUGF5cm9sbF9Qcm9jZXNzZWQAPFJlY2lwaWVu
dENDPmtfX0JhY2tpbmdGaWVsZAA8SUQ+a19fQmFja2luZ0ZpZWxkADxDQ01TSUQ+a19fQmFja2lu
Z0ZpZWxkADxNYW5nZXJfSUQ+a19fQmFja2luZ0ZpZWxkADxSZWNpcGllbnRDQ08+a19fQmFja2lu
Z0ZpZWxkADxJRF9SRVA+a19fQmFja2luZ0ZpZWxkADxDb21wYW5pYT5rX19CYWNraW5nRmllbGQA
PEVtcHJlc2E+a19fQmFja2luZ0ZpZWxkADxJRF9FbXByZXNhPmtfX0JhY2tpbmdGaWVsZAA8UGF5
cm9sbF9Qcm9jZXNzZWQ+a19fQmFja2luZ0ZpZWxkADxQYXlyb2xsX1BlcmlvZD5rX19CYWNraW5n
RmllbGQAPFN0YWNrVHJhY2U+a19fQmFja2luZ0ZpZWxkADxMb2dFcnJvck1lc3NhZ2U+a19fQmFj
a2luZ0ZpZWxkADxBdHRhY2htZW50RmlsZT5rX19CYWNraW5nRmllbGQAPFJlc3BvbnNpYmxlX29m
X3JlcXVlc3RzX25hbWU+a19fQmFja2luZ0ZpZWxkADxUeXBlPmtfX0JhY2tpbmdGaWVsZAA8Tm9t
YnJlPmtfX0JhY2tpbmdGaWVsZAA8RGV0YWlsPmtfX0JhY2tpbmdGaWVsZAA8SXNCb2R5SHRtbD5r
X19CYWNraW5nRmllbGQAPERlc2NyaXBjaW9uPmtfX0JhY2tpbmdGaWVsZAA8UmVzcG9uc2libGVf
b2ZfcmVxdWVzdHNfUG9zaXRpb24+a19fQmFja2luZ0ZpZWxkADxDSUFfSURSZXBvcnRlbz5rX19C
YWNraW5nRmllbGQAPGFyY2hpdm8+a19fQmFja2luZ0ZpZWxkADxGb2xkZXI+a19fQmFja2luZ0Zp
ZWxkADxCcm93c2VyPmtfX0JhY2tpbmdGaWVsZAA8RXJyb3I+a19fQmFja2luZ0ZpZWxkADxJcEFk
ZHJlc3M+a19fQmFja2luZ0ZpZWxkADxTdWJqZWN0PmtfX0JhY2tpbmdGaWVsZAA8UmVjaXBpZW50
PmtfX0JhY2tpbmdGaWVsZAA8UmVzcG9uc2libGVfb2ZfcmVxdWVzdHNfRGVwYXJ0bWVudD5rX19C
YWNraW5nRmllbGQAPEFtb3VudD5rX19CYWNraW5nRmllbGQAPENvbmNlcHQ+a19fQmFja2luZ0Zp
ZWxkADxDcmVhdGVkQnk+a19fQmFja2luZ0ZpZWxkADxCb2R5PmtfX0JhY2tpbmdGaWVsZABEYkNv
bW1hbmQAU3FsQ29tbWFuZABTZW5kAGdldF9QYXlyb2xsX1BlcmlvZABzZXRfUGF5cm9sbF9QZXJp
b2QAZ2V0X1N0YWNrVHJhY2UAc2V0X1N0YWNrVHJhY2UAZGVmYXVsdEluc3RhbmNlAGdldF9Tb3Vy
Y2UARmlsZU1vZGUAZ2V0X01lc3NhZ2UATWFpbE1lc3NhZ2UAZ2V0X0xvZ0Vycm9yTWVzc2FnZQBz
ZXRfTG9nRXJyb3JNZXNzYWdlAERhdGFUYWJsZQBWYXJpYWJsZQBFbnVtZXJhYmxlAElEaXNwb3Nh
YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9BdHRhY2htZW50Rmls
ZQBzZXRfQXR0YWNobWVudEZpbGUAZ2V0X05hbWUAZ2V0X1Jlc3BvbnNpYmxlX29mX3JlcXVlc3Rz
X25hbWUAc2V0X1Jlc3BvbnNpYmxlX29mX3JlcXVlc3RzX25hbWUARGF0ZVRpbWUATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuUnVudGltZQBXcml0ZUxpbmUAZ2V0X1R5cGUAc2V0X1R5cGUAU3FsRGJU
eXBlAHNldF9Db21tYW5kVHlwZQBnZXRfTm9tYnJlAHNldF9Ob21icmUAV2hlcmUAU3lzdGVtLkNv
cmUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJU
U2NyaXB0T2JqZWN0TW9kZWxCYXNlAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAEFwcGxpY2F0
aW9uU2V0dGluZ3NCYXNlAEF0dGFjaG1lbnRCYXNlAENsb3NlAERpc3Bvc2UARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFz
a0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAR2V0VmFsdWUAdmFsdWUAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBTdWJzdHJpbmcAdGVzdGluZwBGbHVzaABn
ZXRfTGVuZ3RoAFJhZlRvb2xPYmoAU2VlawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBOZXR3b3JrQ3JlZGVudGlh
bABTeXN0ZW0uU2VjdXJpdHkuUHJpbmNpcGFsAFN5c3RlbS5Db2xsZWN0aW9ucy5PYmplY3RNb2Rl
bABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU3lzdGVtLk5ldC5NYWls
AHRlc3RpbmdNYWlsAGdldF9EZXRhaWwAc2V0X0RldGFpbABTVF9lODUxZmNmZWRmMjI0ODE1ODA4
MDc4NzNjNzczYTI2Ni5kbGwAZ2V0X0lzQm9keUh0bWwAc2V0X0lzQm9keUh0bWwAc2V0X0VuYWJs
ZVNzbABfc3NsAEZpbGVTdHJlYW0ATWVtb3J5U3RyZWFtAGdldF9JdGVtAGl0ZW0AU3lzdGVtAHNl
dF9Gcm9tAEVudW0AcmVzb3VyY2VNYW4AT3BlbgBTY3JpcHRNYWluAFNlZWtPcmlnaW4ASm9pbgBn
ZXRfRGVzY3JpcGNpb24Ac2V0X0Rlc2NyaXBjaW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERhdGFUYWJsZUNvbGxlY3Rpb24AU3Fs
UGFyYW1ldGVyQ29sbGVjdGlvbgBNYWlsQWRkcmVzc0NvbGxlY3Rpb24AQXR0YWNobWVudENvbGxl
Y3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24Ac2V0X0Nvbm5lY3Rpb24ARGJDb25uZWN0aW9uAFNxbENv
bm5lY3Rpb24AZ2V0X1Jlc3BvbnNpYmxlX29mX3JlcXVlc3RzX1Bvc2l0aW9uAHNldF9SZXNwb25z
aWJsZV9vZl9yZXF1ZXN0c19Qb3NpdGlvbgBnZXRfSW5uZXJFeGNlcHRpb24AU3lzdGVtLkRhdGEu
Q29tbW9uAGdldF9UbwBDb3B5VG8AZ2V0X0NJQV9JRFJlcG9ydGVvAHNldF9DSUFfSURSZXBvcnRl
bwBDdWx0dXJlSW5mbwBCb25vSW5mbwBQcm9wZXJ0eUluZm8AbW9ycm8AZ2V0X2FyY2hpdm8Ac2V0
X2FyY2hpdm8AcABTeXN0ZW0uTGlucQBnZXRfRm9sZGVyAHNldF9Gb2xkZXIAX3NlbmRlcgBnZXRf
UmVzb3VyY2VNYW5hZ2VyAE1haWxIZWxwZXIAX3VzZXIAZ2V0X0Jyb3dzZXIAc2V0X0Jyb3dzZXIA
RGJQYXJhbWV0ZXIAU3FsUGFyYW1ldGVyAFN0cmVhbVdyaXRlcgBUZXh0V3JpdGVyAGdldF9FcnJv
cgBzZXRfRXJyb3IAUmVjb3JkRXJyb3IATG9nRXJyb3IASUVudW1lcmF0b3IAR2V0RW51bWVyYXRv
cgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAHJlY29yZHMAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2I1YzIxMzkyZGJjNTQwYWZhODVm
ODQ5MDIwZWZlMGQyLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBTVF9iNWMyMTM5MmRiYzU0MGFmYTg1Zjg0OTAyMGVmZTBkMi5Qcm9wZXJ0aWVzAEdldFByb3Bl
cnRpZXMAZ2V0X1RhYmxlcwBnZXRfVmFyaWFibGVzAEJpbmRpbmdGbGFncwBTZXR0aW5ncwBzZXRf
Q3JlZGVudGlhbHMAc2V0X1VzZURlZmF1bHRDcmVkZW50aWFscwBDb250YWlucwBTeXN0ZW0uQ29s
bGVjdGlvbnMAY29ubmVjdGlvbnMAU3RyaW5nU3BsaXRPcHRpb25zAE5NQm9ub3MAZ2V0X1BhcmFt
ZXRlcnMAX3Bhc3MAU3VjY2VzcwBNYWlsQWRkcmVzcwBnZXRfSXBBZGRyZXNzAHNldF9JcEFkZHJl
c3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9BdHRhY2htZW50cwBFeGlzdHMAZ2V0X1Jvd3MA
Q29uY2F0AEZvcm1hdABPYmplY3QAZ2V0X1N1YmplY3QAc2V0X1N1YmplY3QAU2VsZWN0AFN5c3Rl
bS5OZXQARGF0YVNldABTcGxpdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0
YS5TcWxDbGllbnQAU210cENsaWVudABnZXRfUmVjaXBpZW50AHNldF9SZWNpcGllbnQAQXR0YWNo
bWVudABnZXRfUmVzcG9uc2libGVfb2ZfcmVxdWVzdHNfRGVwYXJ0bWVudABzZXRfUmVzcG9uc2li
bGVfb2ZfcmVxdWVzdHNfRGVwYXJ0bWVudABnZXRfQ3VycmVudABHZXRDdXJyZW50AGdldF9Db3Vu
dABnZXRfQW1vdW50AHNldF9BbW91bnQAZ2V0X0NvbmNlcHQAc2V0X0NvbmNlcHQAX3BvcnQAVG9M
aXN0AElDcmVkZW50aWFsc0J5SG9zdABfaG9zdABGaXJzdABzZXRfQ29tbWFuZFRpbWVvdXQATW92
ZU5leHQAc2V0X0NvbW1hbmRUZXh0AGdldF9Ob3cARGF0YVJvdwBleABnZXRfQ3JlYXRlZEJ5AHNl
dF9DcmVhdGVkQnkAR3JvdXBCeQBUb0FycmF5AGdldF9Cb2R5AHNldF9Cb2R5AGdldF9Bc3NlbWJs
eQBFeGVjdXRlTm9uUXVlcnkAV3JpdGVDc3ZUb01lbW9yeQBvcF9FcXVhbGl0eQBvcF9JbmVxdWFs
aXR5AFdpbmRvd3NJZGVudGl0eQBJc051bGxPckVtcHR5AAAAAF1bAEUAeABlAGMAVQBzAGUAcgA6
AHsAMgB9AF0AOgBfADoAWwBlAHgALgBNAHMAZwA6ACAAewAwAH0AXQA6AF8AOgBbAGUAeAAuAFMA
cgBjADoAIAB7ADEAfQBdAAAhOgBfADoAWwB7ADAAfQBdADoAXwA6AFsAewAxAH0AXQAAIzYAMAAx
AC4AQwBhAHQATABvAGcARQByAHIAbwByAFMAaQAAIUAATABvAGcARQByAHIAbwByAE0AZQBzAHMA
YQBnAGUAABdAAFMAdABhAGMAawBUAHIAYQBjAGUAABVAAEkAcABBAGQAZAByAGUAcwBzAAAVQQB0
AHUAbwBtAGEAdABpAGMAbwAAEUAAQgByAG8AdwBzAGUAcgAACVMAUwBJAFMAABVAAEMAcgBlAGEA
dABlAGQAQgB5AAAVMQAwAC4ANgAuADUALgAyADQAMAAAN1IAQQBGAFQAbwBvAGwAQAB0AGUAbABl
AHAAZQByAGYAbwByAG0AYQBuAGMAZQAuAGMAbwBtAAABAAMwAABFagBhAHYAaQBlAHIALgByAGEA
eQBnAG8AegBhAEAAdABlAGwAZQBwAGUAcgBmAG8AcgBtAGEAbgBjAGUALgBjAG8AbQAAAzEAAAM7
AAAPaQBtAGEAZwBlAG4AcwAAIVUAcwBlAHIAOgA6AEMAbwBuAGUAeABpAG8AbgBCAEQAABlVAHMA
ZQByADoAOgBVAG4AaQBkAGEAZAAAH1UAcwBlAHIAOgA6AEUAeAB0AGUAbgBzAGkAbwBuAAAnVQBz
AGUAcgA6ADoATgBvAG0AYgByAGUAUABlAHIAaQBvAGQAbwAAEXkAeQB5AHkATQBNAGQAZAAAIVUA
cwBlAHIAOgA6AFQAYQBiAGwAYQBCAG8AbgBvAHMAAAtUAGEAYgBsAGUAACNQAGEAeQByAG8AbABs
AF8AUAByAG8AYwBlAHMAcwBlAGQAAB1QAGEAeQByAG8AbABsAF8AUABlAHIAaQBvAGQAAA1DAEMA
TQBTAEkARAAACVQAeQBwAGUAAA1BAG0AbwB1AG4AdAAADUQAZQB0AGEAaQBsAAAPQwBvAG4AYwBl
AHAAdAAAC0UAcgByAG8AcgAAOVIAZQBzAHAAbwBuAHMAaQBiAGwAZQBfAG8AZgBfAHIAZQBxAHUA
ZQBzAHQAcwBfAG4AYQBtAGUAAEVSAGUAcwBwAG8AbgBzAGkAYgBsAGUAXwBvAGYAXwByAGUAcQB1
AGUAcwB0AHMAXwBEAGUAcABhAHIAdABtAGUAbgB0AABBUgBlAHMAcABvAG4AcwBpAGIAbABlAF8A
bwBmAF8AcgBlAHEAdQBlAHMAdABzAF8AUABvAHMAaQB0AGkAbwBuAAAXRABlAHMAYwByAGkAcABj
AGkAbwBuAAATTQBhAG4AZwBlAHIAXwBJAEQAAA1OAG8AbQBiAHIAZQAAD0UAbQBwAHIAZQBzAGEA
ACVcAFwAMQAwAC4AMQA1ADIALgAzADIALgAxADYANABcAHQAcAAAISAAXABUAGUAbQBwAFwAZgBp
AGwAZQBzAFwAewAwAH0AABtNAE8AXwB7ADIAfQBfAHsAMAB9AHsAMQB9AAADXAAAAy8AAAMsAABx
UwBUAF8AYgA1AGMAMgAxADMAOQAyAGQAYgBjADUANAAwAGEAZgBhADgANQBmADgANAA5ADAAMgAw
AGUAZgBlADAAZAAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAA
AcTmaEbc30+nxRzNkYkG5wAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgKUFBwIOEkUDIAAOBQAA
EoCxBwAEDg4cHBwEIAASQQYAAw4OHBwFAAIODg4GIAEBEYDBBSAAEoDFCSACEoDJDhGAzQQgAQEc
BSABARJFAyAACA8HCRJNElESVR0OCA4ODg4FAAICDg4JIAIdDh0OEYDdBSAAEoDhBxUSgOUBEkkF
IAEBEwAFIAEBEkkEIAEBAgQAAQIOBSACAQ4IBSAAEoDxBxUSgOUBEk0FIAIBDg4GIAEBEoD5BSAB
ARJRNgcWDg4ODhUSYQESFAgRZRJpEhQSbRURcQEOEiwVEmEBEhgSGBJ1FRFxARIUEhQSGA4OEnkS
QQUgABKA/QUgABKBAQYgARKBBRwDIAAcBhUSYQESFAQAABFlBCABDg4EIAECHAUgABKBEQYgARKB
DQ4FIAASgRUEIAASaQMgAAIFFRJhAQ4GFRJhARIICBUSgJECEhQOBSACARwYHxACAhUSfQEVEoCV
Ah4BHgAVEn0BHgAVEoCRAh4AHgEFCgISFA4OFRKAkQIVEoCVAg4SFA4YEAICFRJ9AR4BFRJ9AR4A
FRKAkQIeAB4BCwoCFRKAlQIOEhQODxABARUSYQEeABUSfQEeAAMKAQ4IIAAVEXEBEwAFFRFxAQ4E
IAATAAYVEmEBEhgIFRKAkQISFAIXEAECFRJ9AR4AFRJ9AR4AFRKAkQIeAAIECgESFAYVEXEBEhQF
IAEBHQUFIAIOCAgFAAIODhwHAAQODg4ODgcgAgEOEYElByACCgoRgS0GIAEBEoEpFgcGEnUSgIEd
EoCFFRKAiQESGBI0HQUIAAESgTERgTUJIAEdEoCFEYE5BhUSfQESGAkgABUSgIkBEwAHFRKAiQES
GAkVEoCRAhKAhRwGCgISgIUcCxABAg4OFRJ9AR4AAwoBHAQgAB0FBSAAEoFBByACAQ4SgUELEAEB
HgAVEn0BHgAGIAIcHB0cCLd6XFYZNOCJCImEXc2AgMyRBCC/AgAEAAAAAAQBAAAAAgYIAgYOBgYV
ET0BCAIGAgMGEkkDBhJNBAYSgJ0EBhKAoQMGEiQDBhEoAwYSMAkGFRKAkQISFA4PBhUSgJECFRKA
lQIOEhQOAwYSGAcgABURPQEICCABARURPQEIByADARJBCA4EIAASTQUgAQESTQogAR0FFRJ9ARIY
BQAAEoCdBQAAEoChBgABARKAoQQAABIkAwAAAQUgAQISFAUgAQ4SFAsgAQ4VEoCVAg4SFAYgARwS
gIUDKAAIAygADgcoABURPQEIAygAAgQoABJNBQgAEoCdBQgAEoChBAgAEiQIAQAIAAAAAAAeAQAB
AFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2I1YzIxMzkyZGJjNTQw
YWZhODVmODQ5MDIwZWZlMGQyAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTgAAEcBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFt
ZXdvcmsgNLQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAABgZgAAAAAAAAAAAAB6ZgAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAbGYAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAA
AAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAAGgQAAAAAAAAAAAAAGgQ0AAAA
VgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAEdyrB4AAAEAR3Ks
Hj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8A
AAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBn
AEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0A
ZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBG
AGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AYgA1AGMAMgAxADMAOQAyAGQA
YgBjADUANAAwAGEAZgBhADgANQBmADgANAA5ADAAMgAwAGUAZgBlADAAZAAyAAAAPgAPAAEARgBp
AGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcAOAA1ADIALgAyADkAMgA1ADUAAAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZQA4ADUAMQBmAGMAZgBlAGQAZgAy
ADIANAA4ADEANQA4ADAAOAAwADcAOAA3ADMAYwA3ADcAMwBhADIANgA2AC4AZABsAGwAAABIABIA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAg
ADIAMAAxADgAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgA
KAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBlADgANQAxAGYAYwBm
AGUAZABmADIAMgA0ADgAMQA1ADgAMAA4ADAANwA4ADcAMwBjADcANwAzAGEAMgA2ADYALgBkAGwA
bAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AYgA1AGMAMgAxADMAOQAy
AGQAYgBjADUANAAwAGEAZgBhADgANQBmADgANAA5ADAAMgAwAGUAZgBlADAAZAAyAAAAQgAPAAEA
UAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADgANQAyAC4AMgA5ADIANQA1
AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADgA
NQAyAC4AMgA5ADIANQA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAAIw2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
              <Breakpoint
                Enabled="True"
                File="ScriptMain.cs"
                Line="155"
                Column="21" />
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{44ABD25F-C424-4CBA-B0BA-A3F53FAF4F27}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{587138F2-3508-4AB4-A5EF-A514BA53DA3D}"
              SQLTask:SqlStatementSource="SELECT&#x9;top 1 PeriodoNominaId, NombrePeriodo&#xA;FROM&#x9;[app620].[CatPeriodosNomina]&#xA;WHERE&#x9;convert(date,getdate()) between convert(date,FechaInicio) and convert(date,FechaCierre)&#xA;      AND  countryidents = 239&#xA;ORDER BY FechaCierre asc"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::PeriodoNominaId" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="1"
                SQLTask:DtsVariableName="User::NombrePeriodo" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PaisId"
                SQLTask:DtsVariableName="User::PaisId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="11"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Obtener Bonos NM"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Tarea Ejecutar SQL"
          DTS:DTSID="{0ff9aceb-a392-44b4-a867-d811ea426550}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Obtener Bonos NM"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{587138F2-3508-4AB4-A5EF-A514BA53DA3D}"
              SQLTask:IsStoredProc="True"
              SQLTask:SqlStatementSource="EXEC  [app620].[GeneraArchivoSolicitudSel_ByPais] 165"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::TablaBonos" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@Pais"
                SQLTask:DtsVariableName="User::PaisId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="11"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{AF23F1C9-859F-43CE-9E47-6CC1EBF19D5E}"
          DTS:From="Package\Sequence Container\Execute SQL Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Obtener Bonos NM" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{582f1871-cb80-4534-8e1a-66258fbab9a9}"
          DTS:From="Package\Sequence Container\Obtener Bonos NM"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Sequence Container\Enviar Archivo o Depositar Archivo" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{35d9cd53-5c42-42d6-bbdc-16b608fcd133}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Borrar unidad de red"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{5bd45943-d46d-4bd4-bcef-04e4621f0946}"
      DTS:From="Package\Crear unidad de red"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Sequence Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="177,42"
          Id="Package\Borrar unidad de red"
          TopLeft="114,411.357142857143" />
        <NodeLayout
          Size="173,42"
          Id="Package\Crear unidad de red"
          TopLeft="106.285714285714,0.785714285714285" />
        <NodeLayout
          Size="151,42"
          Id="Package\Data Flow Task"
          TopLeft="623.642857142857,81.6428571428572" />
        <NodeLayout
          Size="241,42"
          Id="Package\Sequence Container\Enviar Archivo o Depositar Archivo"
          TopLeft="25,166" />
        <NodeLayout
          Size="163,42"
          Id="Package\Sequence Container\Execute SQL Task"
          TopLeft="94.4999999999999,4.5" />
        <NodeLayout
          Size="168,42"
          Id="Package\Sequence Container\Obtener Bonos NM"
          TopLeft="73.6666666666666,70.5" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="176,46.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-18.3333333333333,24"
              Start="0,0"
              End="-18.3333333333333,16.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8"
                    Point2="0,12"
                    Point3="-4,12" />
                  <mssgle:LineSegment
                    End="-14.3333333333333,12" />
                  <mssgle:CubicBezierSegment
                    Point1="-14.3333333333333,12"
                    Point2="-18.3333333333333,12"
                    Point3="-18.3333333333333,16" />
                  <mssgle:LineSegment
                    End="-18.3333333333333,16.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="157.666666666667,112.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-12.1666666666666,53.5"
              Start="0,0"
              End="-12.1666666666666,46">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.75"
                    Point2="0,26.75"
                    Point3="-4,26.75" />
                  <mssgle:LineSegment
                    End="-8.1666666666666,26.75" />
                  <mssgle:CubicBezierSegment
                    Point1="-8.1666666666666,26.75"
                    Point2="-12.1666666666666,26.75"
                    Point3="-12.1666666666666,30.75" />
                  <mssgle:LineSegment
                    End="-12.1666666666666,46" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="289,263"
          Size="289,306"
          Id="Package\Sequence Container"
          TopLeft="252.857142857143,58.5714285714286" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="397.357142857143,364.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-194.857142857143,46.7857142857144"
              Start="0,0"
              End="-194.857142857143,39.2857142857144">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.3928571428572" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.3928571428572"
                    Point2="0,23.3928571428572"
                    Point3="-4,23.3928571428572" />
                  <mssgle:LineSegment
                    End="-190.857142857143,23.3928571428572" />
                  <mssgle:CubicBezierSegment
                    Point1="-190.857142857143,23.3928571428572"
                    Point2="-194.857142857143,23.3928571428572"
                    Point3="-194.857142857143,27.3928571428572" />
                  <mssgle:LineSegment
                    End="-194.857142857143,39.2857142857144" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-122.733024553572,28.3928571428572,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="279.285714285714,21.7857142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="118.071428571429,36.7857142857143"
              Start="0,0"
              End="118.071428571429,29.2857142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="114.071428571429,0" />
                  <mssgle:CubicBezierSegment
                    Point1="114.071428571429,0"
                    Point2="118.071428571429,0"
                    Point3="118.071428571429,4" />
                  <mssgle:LineSegment
                    End="118.071428571429,29.2857142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>