<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/11/2020 3:01:09 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-BNL1GT2"
  DTS:CreatorName="DESKTOP-BNL1GT2\Consiss"
  DTS:DTSID="{ECB044F7-B144-44A0-B5FD-978AE5C85535}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.128"
  DTS:LocaleID="2058"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="22"
  DTS:VersionGUID="{5B3C2257-5920-433F-8CBD-04318543E84F}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ASN.adonet]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{9B34DA05-80BC-49D6-B843-274D91C95518}"
      DTS:ObjectName="ASN.adonet">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.152.32.132;Initial Catalog=ASN_PE;Integrated Security=True;Application Name=SSIS-Package1-{9B34DA05-80BC-49D6-B843-274D91C95518}10.152.32.132;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ASN.oledb]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{659E30A3-E97C-4FF2-90FC-04C7147AF4E1}"
      DTS:ObjectName="ASN.oledb">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.152.32.132;Initial Catalog=ASN2;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.ASN.sa]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{1DECB3B2-5912-428A-9887-3B7005109440}"
      DTS:ObjectName="LocalHost.ASN.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;User ID=sa;Initial Catalog=ASN;Persist Security Info=True;Application Name=SSIS-Package1-{1DECB3B2-5912-428A-9887-3B7005109440}LocalHost.ASN.sa;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{61FF9F4A-48D3-435E-9746-52337D90BF22}"
      DTS:ObjectName="ASNAdonet_ConnectionString">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=10.152.32.132;Initial Catalog=ASN_PE;Integrated Security=True;Application Name=SSIS-Package1-{9B34DA05-80BC-49D6-B843-274D91C95518}10.152.32.132;</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Tarea Ejecutar SQL"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{71161D08-4F3C-45D3-A8F1-66323CF0253A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Tarea Ejecutar SQL"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{715BCA41-798A-4BB5-B820-EE309E9EC6FD}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="vResultado">
          <DTS:VariableValue
            DTS:DataType="3">0</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9B34DA05-80BC-49D6-B843-274D91C95518}"
          SQLTask:SqlStatementSource="EXECUTE app620.SolicitudesCanceladasPorSistema" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::vResultado"
            SQLTask:ParameterDirection="ReturnValue"
            SQLTask:DataType="11"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Tarea Script"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Tarea Script"
      DTS:DTSID="{16319417-6AC8-44E0-B962-8813BEEA0CA9}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Tarea Script"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_adf1dec3e97749a4a222b54f3f7998b4"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="MailHelper.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Net;
using System.Net.Mail;
using System.IO;

namespace ST_adf1dec3e97749a4a222b54f3f7998b4
{
    class MailHelper
    {
        private const int Timeout = 180000;
        private readonly string _host;
        private readonly int _port;
        private readonly string _user;
        private readonly string _pass;
        private readonly bool _ssl;
        private readonly MailAddress _sender;
        private readonly string testing;
        private readonly string testingMail;
        //private readonly MailAddress testingMail;

        public string Recipient { get; set; }
        public string RecipientCC { get; set; }
        public string RecipientCCO { get; set; }
        public string Subject { get; set; }
        public string Body { get; set; }
        public bool IsBodyHtml { get; set; }
        public string AttachmentFile { get; set; }

        public MailHelper()
        {
            //MailServer - Represents the SMTP Server
            _host = "10.6.5.240"; //ConfigurationManager.AppSettings["MailServer"];
            //Port- Represents the port number
            _port = 25; //int.Parse(ConfigurationManager.AppSettings["Port"]);
            //MailAuthUser and MailAuthPass - Used for Authentication for sending email
            _sender = new MailAddress("nm@tpnsr.com");  //new MailAddress(ConfigurationManager.AppSettings["EmailFromAddress"]);
            _user = ""; //ConfigurationManager.AppSettings["MailAuthUser"];
            _pass = ""; //ConfigurationManager.AppSettings["MailAuthPass"];
            _ssl = true; //Convert.ToBoolean(ConfigurationManager.AppSettings["EnableSSL"]);
            testing = "0";  //ConfigurationManager.AppSettings["testing"];
            //testingMail = new MailAddress(ConfigurationManager.AppSettings["testingMail"]);
            testingMail = "alfredo.guerrero@teleperformance.com"; //ConfigurationManager.AppSettings["testingMail"];
        }

        public void Send()
        {
            try
            {

                Attachment att = null;
                var message = new MailMessage();

                if (testing == "1")
                {
                    foreach (var address in testingMail.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries))
                    {
                        message.To.Add(new MailAddress(address));
                    }

                    //message.To.Add(testingMail);
                }
                else
                {
                    //Split each email on the field
                    foreach (var address in Recipient.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries))
                    {
                        message.To.Add(new MailAddress(address));
                    }
                }

                message.Subject = Subject;
                message.From = _sender;
                message.Body = Body;
                message.IsBodyHtml = IsBodyHtml;

                if (testing != "1")
                {
                    if (!String.IsNullOrEmpty(RecipientCC))
                    {
                        foreach (var address in RecipientCC.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries))
                        {
                            message.CC.Add(address);
                        }
                    }

                    if (!String.IsNullOrEmpty(RecipientCCO))
                    {
                        foreach (var address in RecipientCCO.Split(new[] { ";" }, StringSplitOptions.RemoveEmptyEntries))
                        {
                            message.Bcc.Add(address);
                        }
                    }
                }

                var smtp = new SmtpClient(_host, _port);

                if (!String.IsNullOrEmpty(AttachmentFile))
                {
                    if (File.Exists(AttachmentFile))
                    {
                        att = new Attachment(AttachmentFile);
                        att.ContentId = "imagens";
                        message.Attachments.Add(att);
                    }
                }

                if (_user.Length > 0 && _pass.Length > 0)
                {
                    smtp.UseDefaultCredentials = false;
                    smtp.Credentials = new NetworkCredential(_user, _pass);
                    smtp.EnableSsl = _ssl;
                }

                smtp.Send(message);

                if (att != null)
                    att.Dispose();
                message.Dispose();
                smtp.Dispose();
            }

            catch (Exception ex)
            {
                //LogError log = new LogError();
                //log.RecordError(ex, 1);
                //TODO: Enviar error a log de bd
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_adf1dec3e97749a4a222b54f3f7998b4.Properties.Settings.get_Default():ST_adf1dec3e97749a4a222b54f3f7998b4.Properties.Sett" +
    "ings")]

namespace ST_adf1dec3e97749a4a222b54f3f7998b4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_adf1dec3e97749a4a222b54f3f7998b4.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FCE2A86F-DE6C-47B5-A19F-7D57EABA7910}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_adf1dec3e97749a4a222b54f3f7998b4</RootNamespace>
    <AssemblyName>ST_adf1dec3e97749a4a222b54f3f7998b4</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="MailHelper.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_adf1dec3e97749a4a222b54f3f7998b4
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            EnviaNotificacionesSolCerradasSolicitante();

            Dts.TaskResult = (int)ScriptResults.Success;
		}
        private void EnviaNotificacionesSolCerradasSolicitante()
        {
            ConnectionManager cm;
            System.Data.SqlClient.SqlConnection sqlConn;
            System.Data.SqlClient.SqlCommand sqlComm;

            cm = Dts.Connections["ASN.adonet"];

            sqlConn = (System.Data.SqlClient.SqlConnection)cm.AcquireConnection(Dts.Transaction);
            sqlComm = new System.Data.SqlClient.SqlCommand("app620.SolicitanteSolPasaronCS", sqlConn);
            sqlComm.CommandType = CommandType.StoredProcedure;
            //sqlComm.ExecuteNonQuery();
            System.Data.SqlClient.SqlDataReader exc = sqlComm.ExecuteReader(CommandBehavior.CloseConnection);

            //cm.ReleaseConnection(sqlConn);

            while (exc.Read())
            {
                //string mensaje = "";
                DataTable dt = new DataTable();
                sqlConn = (System.Data.SqlClient.SqlConnection)cm.AcquireConnection(Dts.Transaction);
                sqlComm = new System.Data.SqlClient.SqlCommand("app620.EnviaNotificacionSolicitudesCanceladas", sqlConn);
                sqlComm.CommandType = CommandType.StoredProcedure;
                sqlComm.Parameters.AddWithValue("@CCMSID", exc["Solicitante_Ident"].ToString());
                //mensaje = sqlComm.ExecuteScalar().ToString();

                System.Data.SqlClient.SqlDataAdapter da = new System.Data.SqlClient.SqlDataAdapter(sqlComm);
                da.Fill(dt);
                cm.ReleaseConnection(sqlConn);

                if (dt.Rows.Count > 0)
                {
                    var mail = new MailHelper();

                    mail.IsBodyHtml = true;
                    mail.Recipient = dt.Rows[0]["CorreoSolicitante"].ToString();
                    //mail.RecipientCCO = liston.Take(1).SingleOrDefault().EmailCCO;
                    mail.Subject = dt.Rows[0]["Subject"].ToString();
                    mail.Body = dt.Rows[0]["Body"].ToString();
                    mail.Send();
                }
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_adf1dec3e97749a4a222b54f3f7998b4</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_adf1dec3e97749a4a222b54f3f7998b4</msb:DisplayName>
    <msb:ProjectId>{AA27F52F-4E4D-4546-AC31-5D117740A27E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_adf1dec3e97749a4a222b54f3f7998b4.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="MailHelper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
    <msb:Breakpoint Include="a0b60ea2990d4293b2ace812444c0227">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>106</msb:LineNumber>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_adf1dec3e97749a4a222b54f3f7998b4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_adf1dec3e97749a4a222b54f3f7998b4")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_adf1dec3e97749a4a222b54f3f7998b4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_adf1dec3e97749a4a222b54f3f7998b4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_adf1dec3e97749a4a222b54f3f7998b4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_adf1dec3e97749a4a222b54f3f7998b4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_adf1dec3e97749a4a222b54f3f7998b4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_adf1dec3e97749a4a222b54f3f7998b4.dll">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
AACGCHMAEAADAIMgAAAAAIYInQnRAAQAiyAAAAAAhgipCRAABACUIAAAAACGCGIK0QAFAJwgAAAA
AIYIawoQAAUApSAAAAAAhggFBvwABgCtIAAAAACGCBQGVQAGALYgAAAAAIYIDgLRAAcAviAAAAAA
hgghAhAABwDIIAAAAACGGA8IBgAIADQhAAAAAIYAvwEGAAgAmCMAAAAAhgBmBgYACACsIwAAAACB
AA8DBgAIAPUkAAAAAIYYDwgGAAgA/SQAAAAAgxgPCAYACAAFJQAAAACTCJ4HVQEIADElAAAAAJMI
bAJaAQgAOCUAAAAAkwh4Al8BCABAJQAAAACWCMYJZQEJAEclAAAAAIYYDwgGAAkATyUAAAAAkRgV
CGoBCQAAAAEA3wQAAAEA3wQAAAEA3wQAAAEA3wQAAAEA3wQAAAEA3wQAAAEA3wQAAAEA3wQJAA8I
AQARAA8IBgAZAA8ICgApAA8IEAAxAA8IEAA5AA8IEABBAA8IEABJAA8IEABRAA8IEABZAA8IEABh
AA8IEAB5AA8IBgChAA8IBgDZAA8IBgD5AA8IFQBpAA8IBgBxAA8IEACJAA8IBgAJAYEKKwAJAcAJ
MQCJAFoHOwAMAOUASQCJAKkJEACJAEYGTwCJAGsKEACJABQGVQAJAY0KKwAJAZsKWgCJADsAOwAZ
AeUAEACJAMoAOwCRAA8IXwApAYYJWgCBAA8IEAAxAdIAEACJAHYJZQAUAOUASQAJARAFcwCRAPoI
VQBBAQ8IdwCRAOoIfQCRACMGVQCRAL8BhAAxAfICBgCJAPICBgCRAPICBgCpAGAJigBRAdIJAQBR
ARQJmwBZATYGoQBRAZUGpwCxAAsHqwBhAQ8IsABpAVQCtwBhAYgHvgDJAA8IBgBhATcJxgCJATYG
zABpAP8E0QCBAdIE1QCZAQ8I3QChAQAG5ACxAB0H6gDJAI0J7wCxASkKcwCpATYG9QC5ATYGzACJ
AeAA/ACpAA8IBgDBAfwBAAHBAXQKCQHhAA8IDwEBAQ8IBgAIAAQAKQEIAFQALgEIAFgAMwEgAGMA
MwEuAAsAhQEuABMAjgEuABsArQEuACMAtgEuACsA3wEuADMA3wEuADsA3wEuAEMAtgEuAEsA5QEu
AFMA3wEuAFsA/AFAAGMAMwFgAGMAMwFjAGsAMwGAAGMAMwGDAHMAMwGgAGMAMwHAAGMAMwHgAGMA
MwEAAWMAMwEJAXsArQEgAWMAMwEpAXsArQFAAWMAMwFBAWMAMwFgAWMAMwFhAWMAMwGAAWMAMwGB
AWMAMwGgAWMAMwGhAWMAMwHAAWMAMwHBAWMAMwHhAWMAMwEBAmMAMwFhAmMAMwEbAJAAAgABAAQA
CAAFAAoAAAAUCm4BAABWAG4BAAB3AG4BAACtCW4BAABvCm4BAAAYBnIBAAAlAm4BAACiB3YBAACM
AnsBAADKCYABAgABAAMAAQACAAMAAgADAAUAAQAEAAUAAgAFAAcAAQAGAAcAAgAHAAkAAQAIAAkA
AgAJAAsAAQAKAAsAAgALAA0AAQAMAA0AAgANAA8AAQAOAA8AAgAVABEAAgAWABMAAQAXABMAAgAY
ABUAQQBrAASAAAABAAAAjh08gAAAAAAAAA4AAAAEAAAAAAAAAAAAAAAXAcEAAAAAAAQAAAAAAAAA
AAAAABcBPwYAAAAADwAAAAAAAAAAAAAAIAEbBQAAAAAPAAAAAAAAAAAAAAAgAY4AAAAAAAQAAAAA
AAAAAAAAABcBtQAAAAAAAAAAAAEAAABgCAAABgADAAAAAENvbGxlY3Rpb25gMQBTVF9hZGYxZGVj
M2U5Nzc0OWE0YTIyMmI1NGYzZjc5OThiNAA8TW9kdWxlPgBnZXRfQ0MAZ2V0X1JlY2lwaWVudEND
AHNldF9SZWNpcGllbnRDQwBnZXRfUmVjaXBpZW50Q0NPAHNldF9SZWNpcGllbnRDQ08AU3lzdGVt
LklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFN5c3RlbS5EYXRhAG1z
Y29ybGliAGdldF9CY2MAc2V0X0NvbnRlbnRJZABSZWFkAEFkZAA8UmVjaXBpZW50Q0M+a19fQmFj
a2luZ0ZpZWxkADxSZWNpcGllbnRDQ08+a19fQmFja2luZ0ZpZWxkADxBdHRhY2htZW50RmlsZT5r
X19CYWNraW5nRmllbGQAPElzQm9keUh0bWw+a19fQmFja2luZ0ZpZWxkADxTdWJqZWN0PmtfX0Jh
Y2tpbmdGaWVsZAA8UmVjaXBpZW50PmtfX0JhY2tpbmdGaWVsZAA8Qm9keT5rX19CYWNraW5nRmll
bGQARGJDb21tYW5kAFNxbENvbW1hbmQAU2VuZABkZWZhdWx0SW5zdGFuY2UATWFpbE1lc3NhZ2UA
RGF0YVRhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9BdHRhY2ht
ZW50RmlsZQBzZXRfQXR0YWNobWVudEZpbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGlt
ZQBzZXRfQ29tbWFuZFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEludGVybmFsRGF0YUNvbGxlY3Rp
b25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEF0dGFjaG1lbnRCYXNlAERpc3Bvc2UARWRp
dG9yQnJvd3NhYmxlU3RhdGUARW52aWFOb3RpZmljYWNpb25lc1NvbENlcnJhZGFzU29saWNpdGFu
dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0
ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0
dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlv
bkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVj
dEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5
UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmls
aXR5QXR0cmlidXRlAEFkZFdpdGhWYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRvU3RyaW5nAHRlc3RpbmcAZ2V0X0xlbmd0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRh
c2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBOZXR3b3JrQ3JlZGVu
dGlhbABTeXN0ZW0uQ29sbGVjdGlvbnMuT2JqZWN0TW9kZWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAFN5c3RlbS5OZXQuTWFpbAB0ZXN0aW5nTWFpbABTVF9hZGYxZGVj
M2U5Nzc0OWE0YTIyMmI1NGYzZjc5OThiNC5kbGwARmlsbABnZXRfSXNCb2R5SHRtbABzZXRfSXNC
b2R5SHRtbABzZXRfRW5hYmxlU3NsAF9zc2wAZ2V0X0l0ZW0AU3lzdGVtAHNldF9Gcm9tAEVudW0A
cmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFs
aXphdGlvbgBnZXRfVHJhbnNhY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3FsUGFyYW1ldGVyQ29s
bGVjdGlvbgBNYWlsQWRkcmVzc0NvbGxlY3Rpb24AQXR0YWNobWVudENvbGxlY3Rpb24ARGF0YVJv
d0NvbGxlY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24AUmVsZWFzZUNvbm5lY3Rpb24AU3FsQ29ubmVj
dGlvbgBFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAGdldF9UbwBDdWx0dXJlSW5mbwBEYkRh
dGFSZWFkZXIAU3FsRGF0YVJlYWRlcgBFeGVjdXRlUmVhZGVyAF9zZW5kZXIAZ2V0X1Jlc291cmNl
TWFuYWdlcgBDb25uZWN0aW9uTWFuYWdlcgBNYWlsSGVscGVyAF91c2VyAFNxbFBhcmFtZXRlcgBE
YkRhdGFBZGFwdGVyAFNxbERhdGFBZGFwdGVyAENvbW1hbmRCZWhhdmlvcgAuY3RvcgAuY2N0b3IA
U3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJlc291cmNlcwBTVF9hZGYxZGVjM2U5Nzc0OWE0YTIyMmI1NGYzZjc5OThiNC5Qcm9wZXJ0aWVz
LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfYWRmMWRlYzNlOTc3NDlhNGEy
MjJiNTRmM2Y3OTk4YjQuUHJvcGVydGllcwBTZXR0aW5ncwBzZXRfQ3JlZGVudGlhbHMAc2V0X1Vz
ZURlZmF1bHRDcmVkZW50aWFscwBnZXRfQ29ubmVjdGlvbnMAU3RyaW5nU3BsaXRPcHRpb25zAGdl
dF9QYXJhbWV0ZXJzAF9wYXNzAFN1Y2Nlc3MATWFpbEFkZHJlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1
bHRzAGdldF9BdHRhY2htZW50cwBFeGlzdHMAZ2V0X1Jvd3MAT2JqZWN0AGdldF9TdWJqZWN0AHNl
dF9TdWJqZWN0AFN5c3RlbS5OZXQAU3BsaXQAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAU3lz
dGVtLkRhdGEuU3FsQ2xpZW50AFNtdHBDbGllbnQAZ2V0X1JlY2lwaWVudABzZXRfUmVjaXBpZW50
AEF0dGFjaG1lbnQAZ2V0X0NvdW50AF9wb3J0AElDcmVkZW50aWFsc0J5SG9zdABfaG9zdABUaW1l
b3V0AERhdGFSb3cAZ2V0X0JvZHkAc2V0X0JvZHkAZ2V0X0Fzc2VtYmx5AG9wX0VxdWFsaXR5AG9w
X0luZXF1YWxpdHkASXNOdWxsT3JFbXB0eQAAAAAAFTEAMAAuADYALgA1AC4AMgA0ADAAABluAG0A
QAB0AHAAbgBzAHIALgBjAG8AbQAAAQADMAAASWEAbABmAHIAZQBkAG8ALgBnAHUAZQByAHIAZQBy
AG8AQAB0AGUAbABlAHAAZQByAGYAbwByAG0AYQBuAGMAZQAuAGMAbwBtAAADMQAAAzsAAA9pAG0A
YQBnAGUAbgBzAAAVQQBTAE4ALgBhAGQAbwBuAGUAdAAAPWEAcABwADYAMgAwAC4AUwBvAGwAaQBj
AGkAdABhAG4AdABlAFMAbwBsAFAAYQBzAGEAcgBvAG4AQwBTAABbYQBwAHAANgAyADAALgBFAG4A
dgBpAGEATgBvAHQAaQBmAGkAYwBhAGMAaQBvAG4AUwBvAGwAaQBjAGkAdAB1AGQAZQBzAEMAYQBu
AGMAZQBsAGEAZABhAHMAAA9AAEMAQwBNAFMASQBEAAAjUwBvAGwAaQBjAGkAdABhAG4AdABlAF8A
SQBkAGUAbgB0AAAjQwBvAHIAcgBlAG8AUwBvAGwAaQBjAGkAdABhAG4AdABlAAAPUwB1AGIAagBl
AGMAdAAACUIAbwBkAHkAAHFTAFQAXwBhAGQAZgAxAGQAZQBjADMAZQA5ADcANwA0ADkAYQA0AGEA
MgAyADIAYgA1ADQAZgAzAGYANwA5ADkAOABiADQALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAAAAAAFmiJ3V+eBxCvx1bQaepo/oABCABAQgDIAABBSABARERBCABAQ4F
IAEBEXkPBwkSQRJFEkkdDggODg4OBQACAg4OCSACHQ4dDhGAiQUgABKAjQcVEoCRARI5BSABARMA
BSABARI5BCABAQIEAAECDgUgAgEOCAUgABKAnQcVEoCRARJBAyAACAUgAgEODgYgAQESgKUFIAEB
EkUFIAASgKkKBwQSWRJdEmESZQUgABKArQUgARJZHAMgABwEIAEcHAYgAgEOEl0GIAEBEYC5ByAB
EmERgL0FIAASgMEEIAEcDgMgAA4HIAISgMkOHAYgAQESgLEFIAEIEmUEIAEBHAUgABKA1QYgARKA
3QgDIAACCAABEoDhEYDlBSAAEoDpByACAQ4SgOkIt3pcVhk04IkIiYRdzYCAzJEEIL8CAAQAAAAA
BAEAAAACBggCBg4CBgIDBhI5AwYScQMGEnUDBhIUAwYRGAQAABJxBAAAEnUFAAEBEnUEAAASFAMA
AAEDKAAOAygAAgQIABJxBAgAEnUECAASFAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU1RfYWRmMWRlYzNlOTc3NDlhNGEyMjJiNTRmM2Y3OTk4YjQA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAAAEPgAAAAAAAAAAAAAePgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAED4AAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAPICOHQAAAQA8gI4dPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwBhAGQAZgAxAGQAZQBjADMAZQA5ADcANwA0ADkAYQA0AGEAMgAyADIAYgA1ADQAZgAzAGYANwA5
ADkAOABiADQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA1ADYA
NgAuADMAMgA4ADIAOAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBh
AGQAZgAxAGQAZQBjADMAZQA5ADcANwA0ADkAYQA0AGEAMgAyADIAYgA1ADQAZgAzAGYANwA5ADkA
OABiADQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUA
bQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfAGEAZABmADEAZABlAGMAMwBlADkANwA3ADQAOQBhADQAYQAyADIAMgBiADUANABmADMA
ZgA3ADkAOQA4AGIANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwBhAGQAZgAxAGQAZQBjADMAZQA5ADcANwA0ADkAYQA0AGEAMgAyADIAYgA1ADQAZgAzAGYA
NwA5ADkAOABiADQAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADcANQA2ADYALgAzADIAOAAyADgAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADcANQA2ADYALgAzADIAOAAyADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAMD4AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="106"
            Column="13" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{A58C8989-A350-4B8C-92BE-0A32DBA1317F}"
      DTS:From="Package\Tarea Ejecutar SQL"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Tarea Script" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="170,42"
          Id="Package\Tarea Ejecutar SQL"
          TopLeft="249,102" />
        <NodeLayout
          Size="136,42"
          Id="Package\Tarea Script"
          TopLeft="269,215" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="335.5,144">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,71"
              Start="0,0"
              End="0,63.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>