@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .k-grid .k-hierarchy-col {
        width: 6px;
    }

    #grid {
        height: 99%;
    }

    #parent {
        overflow: hidden;
    }

    html,
    body {
        height: 100%;
    }
   
</style>

@if (User.Identity.IsAuthenticated)
{
<div class="container-fluid">
    <div id="bar" class="hidden">
        <div class="k-loading-mask" style="width: 100%; height: 100%; top: 0px; left: 0px;">
            <span class="k-loading-text">Loading...</span>
            <div class="k-loading-image"></div>
            <div class="k-loading-color"></div>
        </div>
    </div>

    <div class="col-lg-12 col-md-12">
        <div class="row">
            @Html.Label("Reporte solicitud por estatus", new { style = "font-size: 18px" })
        </div>
    </div>

    <div class="row">
        
        <div class="col-lg-8 col-md-8 col-sm-8">



            @if (ViewBag.MostrarPais == 1)
            {
                <div class="col-lg-4 col-md-4 col-sm-4">
                    @Html.Label("Pais ", new { style = "font-size: 15px" })
                    @(Html.Kendo().DropDownList()
                        .OptionLabel("- Pais Incidente - ")
                        .DataTextField("Value")
                        .DataValueField("Id")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                        {
                            read.Action("GetCountryByPerfilCMB", "ReporteSolicitudXEstatus");
                        });
                        })
                        .Name("PaisId")
                        .HtmlAttributes(new { style = "width: 20em;text-align:center;" })
                        .Events(e => e.Change("onChangePais"))
                    )

                </div>


            }

            <div class="col-lg-4 col-md-4 col-sm-4">
                @Html.Label("Periodos ", new { style = "font-size: 15px" })
                @(Html.Kendo().DropDownList()
                        .OptionLabel("- Período Incidente - ")
                        .DataTextField("Valor")
                        .DataValueField("Ident")

                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetPeriodosNominaCMB", "ReporteSolicitudXEstatus").Data("parametrosConceptos");
                            });
                        })

                        .Name("PeriodoNomina")
                        .HtmlAttributes(new { style = "width: 20em;text-align:center;" })
                    )

            </div>


            <div class="col-lg-2 col-md-2 col-sm-2">
                <div style="padding-top:25px;"></div>
                @(Html.Kendo().Button().Name("Buscar").Content("Buscar").Icon("search")
                            .Events(x => x.Click("searchSolicitud"))
                            .HtmlAttributes(new { style = "background-color:blue;color:white;font-weight:bold;" })
                    )
            </div>

            @*<div class="col-lg-2 col-md-2 col-sm-2">


        </div>*@
        </div>
        </div>
            <br />
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12">
                    <div id="parent">
                        @(Html.Kendo().Grid<ASN.Models.ReporteSolicitudXEstatusSel_Result>()
                                .Name("grid")
                                .Columns(columns =>
                                {
                                    columns.Bound(e => e.Ciudad).Title("Ciudad").Width(30);
                                    columns.Bound(e => e.Site).Width(30).Title("Site");
                                    columns.Bound(e => e.SolicitanteCCMSID).Width(30).Title("Solicitante CCMSID").Filterable(ftb => ftb.Cell(cell => cell.Template("gridFilterIntegerNumericTextbox").ShowOperators(false)));
                                    columns.Bound(e => e.Nombre).Title("Nombre").Width(30);
                                    columns.Bound(e => e.Periodo).Title("Período").Width(30);//.Format("{0:yyyy-MM-dd}").Filterable(true).Width(30).Filterable(fil => fil.Cell(cc => cc.ShowOperators(false).Template("dateFilter")));
                                    //columns.Bound(e => e.Fecha).Title("Fecha de solicitud").Width(30);//.Format("{0:yyyy-MM-dd}").Filterable(true).Width(30).Filterable(fil => fil.Cell(cc => cc.ShowOperators(false).Template("dateFilter")));
                                    columns.Bound(e => e.Folio).Width(25).Title("Folio").Filterable(ftb => ftb.Cell(cell => cell.Template("gridFilterIntegerNumericTextbox").ShowOperators(false))); ;
                                    columns.Bound(e => e.Concepto).Title("Concepto").Width(30);
                                    columns.Bound(e => e.Total).Title("Total").Width(25).HtmlAttributes(new { style = "text-align: right;" });
                                    columns.Bound(e => e.EstatusSol).Title("Estatus solciitud").Width(30);
                                    //columns.Bound(e => e.EstatusCon).Title("Estatus concepto").Width(30);
                                    columns.Bound(e => e.Aut_1).Title("Autorizador 1").Width(30);
                                    columns.Bound(e => e.Aut_2).Title("Autorizador 2 ").Width(30);
                                    columns.Bound(e => e.Aut_3).Title("Autorizador 3").Width(30);
                                })
                                .ToolBar(tools => tools.Excel().Text("Exportar"))
                                .Excel(excel => excel.FileName(DateTime.Now.ToString("yyyy-MM-dd_HH:mm:ss")).AllPages(true).Filterable(true))
                                .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
                                .Sortable()
                                .Scrollable()
                                .AutoBind(false)
                                //.HtmlAttributes(new { style = "height: 775px;" })
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    //.Batch(true)
                                    .ServerOperation(false)
                                    .Model(model =>
                                    {
                                        model.Id(c => c.Folio);
                                    })
                                    .Read(read => read.Action("GetSolicitudes", "ReporteSolicitudXEstatus").Data("infoSolicitud"))
                                    .PageSize(20)
                                    .Events(events=> events.RequestEnd("request_end"))
                                )
                                .Navigatable()
                                //.Events(e => e.DataBound("dataBound").ExcelExport("excelexport").DetailInit("detailInit"))
                                //.Events(e => e.DataBound("dataBound"))
                                //.Events(e => e.ExcelExport("columnas"))
                                .Pageable(pageable => pageable
                                    .Refresh(true)
                                    .PageSizes(true)
                                    .ButtonCount(5)
                                    .Numeric(true)
                                    .PreviousNext(true)
                                    .Messages(messages =>
                                    {
                                        messages.ItemsPerPage("Registros por página");
                                        messages.Empty("Sin información para mostrar");
                                        messages.First("Primera");
                                        messages.Page("Página");
                                        messages.Last("Última");
                                        messages.Previous("Anterior");
                                        messages.Next("Siguiente");
                                        messages.Refresh("Actualizar");
                                        messages.Of("De");
                                        messages.MorePages("Mas páginas");
                                        //messages.Display("Prueba");
                                        messages.Display("{0} a {1} de {2}");
                                    })
                                )
                    )
                    </div>
                </div>
            </div>
        </div>
}
else
{
    <script type="text/javascript">
        $(function(){
            window.location.href = "@Url.Action("Index","Inicio")";
        });
    </script>
}

@Scripts.Render("~/bundles/ReporteSolicitudXEstatus");