
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #grid {
        height: 99%;
    }

    #parent {
        overflow: hidden;
    }

    html,
    body {
        height: 100%;
    }
</style>

@if (User.Identity.IsAuthenticated)
{
    <div class="container-fluid">
        <div class="row">
            <div class="container-fluid">
                <div class="col-lg-12 col-md-12">
                    <div class="row">
                        @Html.Label("Mis Responsabilidades", new { style = "font-size: 15px" })
                        @*<a href="@Url.Action("Create","Responsabilidades")" data-role="button" class="k-button k-button-icontext" style="float:right; margin-right:10px;" role="button" aria-disabled="false" tabindex="0">
                            <span class="k-icon k-i-plus"></span> Crear Solicitud
                            </a>*@
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12">
                        <div id="parent">
                            @(Html.Kendo().Grid<ASN.Models.CatMisResponsabilidadesSel_Result>()
                                   .Name("grid")
                                   .Columns(column =>
                                   {
                                       column.Command(command => { command.Custom("Editar").Text("<span class='k-icon k-i-edit'></span> Editar").Click("EditaResponsabilidad"); }).Width(40);
                                       column.Bound(c => c.FolioSolicitud).Width(40).Title("Folio de Solicitud").Visible(true).Filterable(ftb => ftb.Cell(cell => cell.Template("gridFilterIntegerNumericTextbox").ShowOperators(false)));
                                       column.Bound(c => c.Fecha_Solicitud).Title("Fecha de Solicitud").Visible(true).Format("{0:yyyy-MM-dd}").Filterable(true).Width(50).Filterable(fil => fil.Cell(cc => cc.ShowOperators(false).Template("dateFilter")));
                                       column.Bound(c => c.EstatusSolicitud).Title("Estatus").Visible(true).Width(70);
                                       column.ForeignKey(c => c.PeriodoNominaId, (System.Collections.IEnumerable)ViewData["PeriodosNominaRes"], "Ident", "Valor").Title("Período de Nómina").Visible(true).Filterable(true).Width(70);
                                       //column.Bound(c => c.Justificacion).Title("Justificanción").Visible(true).Width(70);
                                   })
                                   //.HtmlAttributes(new { style = "height: 475px;" })
                                   .Scrollable(sorteable => sorteable.Virtual(false))
                                   .Sortable()
                                   .PersistSelection()
                                   //.Events(eve => eve.SaveChanges("onSave"))//.Change("onChange")
                                   .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
                                   .DataSource(dataSource => dataSource
                                       .Ajax()
                                       //.Batch(true)
                                       .Model(model =>
                                       {
                                           model.Id(c => c.FolioSolicitud);
                                           model.Field(c => c.FolioSolicitud);
                                           //model.Field(c => c.Justificacion).Editable(false);
                                       })
                                       .Read(read => read.Action("GetResponsabilidades", "MisResponsabilidades"))
                                   )
                                   .Navigatable()
                                   .Pageable(pageable => pageable
                                   .Refresh(true)
                                   .PageSizes(true)
                                   .ButtonCount(5)
                                   .Numeric(true)
                                   .PreviousNext(true)
                                   .Messages(messages =>
                                   {
                                       messages.ItemsPerPage("Registros por página");
                                       messages.Empty("Sin información para mostrar");
                                       messages.First("Primera");
                                       messages.Page("Página");
                                       messages.Last("Última");
                                       messages.Previous("Anterior");
                                       messages.Next("Siguiente");
                                       messages.Refresh("Actualizar");
                                       messages.Of("De");
                                       messages.MorePages("Mas páginas");
                                       messages.Display("{0} a {1} de {2}");
                                   })
                                   )
                            )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        var urlResponsabilidad = '@Url.Action("ResponsableAutoriza", "MisAutorizaciones")';
		//var urlEditar = '@Url.Action("Editar", "Responsabilidades")';
        var urlEditar = '@Url.Action("Index", "ResponsableAutoriza")';

        // Sección alta de Empleados - Responsabilidades
        var Solicitante_Ident = "";

    </script>
}
else
{
    <script type="text/javascript">
$(function(){
    window.location.href = "@Url.Action("Index","Inicio")";
});
    </script>
}

@Scripts.Render("~/bundles/MisResponsabilidades")
