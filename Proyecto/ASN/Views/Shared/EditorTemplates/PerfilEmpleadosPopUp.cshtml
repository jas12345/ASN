@model  ASN.Models.CatPerfilEmpleadosViewModel

<style>
    tr.spaceUnder > td {
        padding-bottom: 1em;
    }
</style>
<div>
    <div class="k-edit-form-container">
        <div class="editor-label">
            <label for="Descripcion">Descripción</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().TextBoxFor(x => x.NombrePerfilEmpleados).HtmlAttributes(new { required = "required", validationmessage = "El Nombre del Perfil de Empleados es requerido" }))
        </div>
        <div class="editor-label">
            <label for="Country_Ident">Pais</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.Country_Ident)
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetPaisesCMB", "PerfilEmpleados").Data("filterCountry");
                            });
                        })
                        .Filter("contains")
                        .DataValueField("Id")
                        .DataTextField("Value")
                        .Name("Country_Ident")
                        .HtmlAttributes(new { style = "text-align:center;width: 16.4em" })
            //.Events(eve => eve.Select("CargaCiudad"))
            .Events(eve => eve.Change("CargaCiudad"))
            )
        </div>
        <div class="editor-label">
            <label for="City_Ident">Ciudad</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.City_Ident)
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetCiudadesCMB", "PerfilEmpleados").Data("filterCity");
                            });
                        })
                        .Filter("contains")
                        .DataValueField("Id")
                        .DataTextField("Value")
                        .Name("City_Ident")
                        .HtmlAttributes(new { style = "text-align:center;width: 16.4em" })
                        .Events(eve => eve.Change("CargaSite"))
            )
        </div>
        <div class="editor-label">
            <label for="Site">Site</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.Location_Ident)
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetSitesCMB", "PerfilEmpleados").Data("filterSite");
                            });
                        })
                        .Filter("contains")
                        .DataValueField("Id")
                        .DataTextField("Value")
                        .Name("Location_Ident")
                        .HtmlAttributes(new { style = "text-align:center;width: 16.4em" })
                        .Events(eve => eve.Change("CargaCliente"))
            )
        </div>
        <div class="editor-label">
            <label for="Cliente">Cliente</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.Client_Ident)
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetClientesCMB", "PerfilEmpleados").Data("filterClient");
                            });
                        })
                        .Filter("contains")
                        .DataValueField("Id")
                        .DataTextField("Value")
                        .Name("Client_Ident")
                        .HtmlAttributes(new { style = "text-align:center;width: 16.4em" })
                        .Events(eve => eve.Change("CargaPrograma"))
            )
        </div>
        <div class="editor-label">
            <label for="Programa">Programa</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.Program_Ident)
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetProgramasCMB", "PerfilEmpleados").Data("filterProgram");
                            });
                        })
                        .Filter("contains")
                        .DataValueField("Id")
                        .DataTextField("Value")
                        .Name("Program_Ident")
                        .HtmlAttributes(new { style = "text-align:center;width: 16.4em" })
                        .Events(eve => eve.Change("CargaContrato"))
            )
        </div>
        <div class="editor-label">
            <label for="TipoContrato">Tipo de contrato</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.Contract_Type_Ident)
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetTiposContratoCMB", "PerfilEmpleados").Data("filterContract");
                            });
                        })
                        .Filter("contains")
                        .DataValueField("Id")
                        .DataTextField("Value")
                        .Name("Contract_Type_Ident")
                        .HtmlAttributes(new { style = "text-align:center;width: 16.4em" })
                        .Events(eve => eve.Change("CargaCascada"))
            )
        </div>

        <div class="editor-label">
            <label for="Concepto">Concepto de Nómina</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.ConceptoId)
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetConceptosCMB", "PerfilEmpleados").Data("filterConcepto");
                            });
                        })
                        .Filter("contains")
                        .DataValueField("Ident")
                        .DataTextField("Valor")
                        .Name("ConceptoId")
                        .OptionLabel(" - Todos - ")
                        .HtmlAttributes(new { style = "text-align:center;width: 16.4em" })
            )
        </div>
        <div class="editor-label">
            <label for="TipoAcceso">Tipo de acceso</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.TipoAccesoId)
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetTiposAccesoCMB", "PerfilEmpleados");
                            });
                        })
                        .Filter("contains")
                        .OptionLabel("- Tipo de acceso - ")
                        .DataValueField("Ident")
                        .DataTextField("Valor")
                        .Name("TipoAccesoId")
                        .HtmlAttributes(new { style = "text-align:center;width: 16.4em", required = "required", validationmessage = "El Tipo de Acceso es requerido" })
            )
        </div>

        <div class="editor-label">
            <label for="Active">Activo</label>
        </div>
        <div class="editor-field">
            @Html.CheckBox("Active")
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/PerfilEmpleados")
