@model  ASN.Models.PeriodoNominaViewModel

<style>
    tr.spaceUnder > td {
        padding-bottom: 1em;
    }
</style>
<div class="col-lg-12 col-md-12" >
    <div class="k-edit-form-container" style="width:500px;">
        <div class="editor-label">
            <label for="AnioId">Año</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.AnioId)
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetAniosNominaCMB", "PeriodoNomina");
                                    });
                                })
                                .Filter("contains")
                                .OptionLabel("- Año - ")
                                .DataValueField("Ident")
                                .DataTextField("Valor")
                                .Name("AnioId")
                                .Events(x => x.DataBound("getName"))
                                .HtmlAttributes(new { required = "required", style = "text-align:center;width: 22.4em" })
            )
        </div>
        <div class="editor-label">
            <label for="MesId">Mes</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.MesId)
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetAnioMesesConsecutivoCMB", "PeriodoNomina").Data("Anio");
                                    })
                                    .ServerFiltering(true);
                                })
                                .Filter("contains")
                                .OptionLabel("- Mes - ")
                                .DataValueField("Ident")
                                .DataTextField("Valor")
                                .Name("MesId")
                                .Events(x => x.Change("rellenaFechasMes").DataBound("getName").DataBound("validando"))//
                                .HtmlAttributes(new { required = "required", style = "text-align:center;width: 22.4em", validationMessage = "Este campo es requerido." })
                                .CascadeFrom("AnioId")
            )
        </div>
        <div class="editor-label">
            <label for="PeriodicidadNominaId">Periodicidad</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.PeriodicidadNominaId)
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetAnioMesPeriodicidadNominaCMB", "PeriodoNomina").Data("AnioMes");
                                    })
                                    .ServerFiltering(true);
                                })
                                .Filter("contains")
                                .OptionLabel("- Tipo de periodicidad - ")
                                .DataValueField("Ident")
                                .DataTextField("Valor")
                                .Name("PeriodicidadNominaId")
                                .Events(x => x.Change("getName"))
                                .HtmlAttributes(new { required = "required", style = "text-align:center;width: 22.4em", validationMessage = "Este campo es requerido." })
                                .CascadeFrom("MesId")
            )
        </div>
        <div class="editor-label">
            <label for="ConsecutivoId">Consecutivo</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.ConsecutivoId)
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetConsecutivoPeriodoNominaCMB", "PeriodoNomina").Data("tipoPerio");
                                    })
                                    .ServerFiltering(true);
                                })
                                .Filter("contains")
                                .OptionLabel("- Consecutivo - ")
                                .DataValueField("Ident")
                                .DataTextField("Valor")
                                .Name("ConsecutivoId")
                                .Events(x => x
                                            .DataBound("validando")
                                            .Change("getName"))
                                .HtmlAttributes(new { required = "required", style = "text-align:center;width: 22.4em" })
                                .CascadeFrom("PeriodicidadNominaId")

            )
        </div>
        <div class="editor-label">
            <label for="TipoPeriodo">Tipo de Periodo</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.TipoPeriodo)
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetTipoPeriodoCMB", "PeriodoNomina");
                                        });
                                    })
                                    .Filter("contains")
                                    .OptionLabel("- Tipo de Periodo - ")
                                    .DataValueField("Id")
                                    .DataTextField("Value")
                                    .Name("TipoPeriodo")
                                    .HtmlAttributes(new { required = "required", style = "text-align:center;width: 22.4em" })
                                    .Events(x => x.Change("getName"))
            )
        </div>
        <div class="editor-label">
            <label for="CountryIdents">País</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().MultiSelect()
                                .Name("LstCountryIdents")
                                .DataValueField("Id")
                                .DataTextField("Value")
                                .Placeholder("- País - ")
                                .Filter("contains")
                                .AutoBind(true)
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetCountryIdentsCMB", "PeriodoNomina");
                                    })
                                    .ServerFiltering(true);
                                })
                                .HtmlAttributes(new { required = "required", style = "text-align:center;width: 22.4em" })
            )

            @Html.HiddenFor(x => x.CountryIdents)
        </div>
        <div class="editor-label">
            <label for="TipoConsecutivoId">Tipo de consecutivo</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.TipoConsecutivoId)
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("GetTipoConsecutivo", "PeriodoNomina");
                                });
                            })
                            .Filter("contains")
                            .OptionLabel("- Tipo Consecutivo - ")
                            .DataValueField("Id")
                            .DataTextField("Value")
                            .Name("TipoConsecutivoId")
                            .HtmlAttributes(new { required = "required", style = "text-align:center;width: 22.4em" })
            )
        </div>
            <div class="editor-label">
                <label for="FechaInicio">Fecha Inicio</label>
            </div>
            <div class="editor-field">
                @(Html.Kendo().DatePicker()
                                                .Name("FechaInicio")
                                                .Format("yyyy-MM-dd")
                                                .ParseFormats(new string[] {
                                            "ddd, M/d/yyyy",
                                            "ddd, MM/dd/yyyy",
                                            "ddd, M/dd/yyyy"
                                                })
                                                .Min(DateTime.Now.AddMonths(-6))
                                                .Max(DateTime.Now)
                                                .Events(x => x.Change("delimitaRango"))
                                                .HtmlAttributes(new { required = "required", style = "text-align:center;width: 22.4em" })
                )
            </div>
            <div class="editor-label">
                <label for="FechaFin">Fecha Fin</label>
            </div>
            <div class="editor-field">
                @(Html.Kendo().DatePicker()
                                        .Name("FechaFin")
                                        .Format("yyyy-MM-dd")
                                        .ParseFormats(new string[] {
                                    "ddd, M/d/yyyy",
                                    "ddd, MM/dd/yyyy",
                                    "ddd, M/dd/yyyy"
                                        })
                                        .Min(DateTime.Now.AddMonths(-6))
                                        .Max(DateTime.Now)
                                        .Events(x => x.Change("delimitaRango"))
                                        .HtmlAttributes(new { required = "required", style = "text-align:center;width: 22.4em" })
                )
            </div>
            <div class="editor-label">
                <label for="FechaCaptura">Fecha de Captura</label>
            </div>
            <div class="editor-field">
                @(Html.Kendo().DateTimePicker()
                                        .Name("FechaCaptura")
                                        .Format("yyyy-MM-dd HH:mm")
                                        .HtmlAttributes(new { required = "required", style = "text-align:center;width: 22.4em" })
                                        .DateInput()
                )
            </div>
            <div class="editor-label">
                <label for="FechaCierre">Fecha Autorización</label>
            </div>
            <div class="editor-field">
                @(Html.Kendo().DateTimePicker()
                                          .Name("FechaCierre")
                                          .Format("yyyy-MM-dd HH:mm")
                                          .HtmlAttributes(new { required = "required", style = "text-align:center;width: 22.4em" })
                                          .DateInput()
                )
            </div>
            <div class="editor-label">
                <label for="NombrePeriodo">Nombre Periodo</label>
            </div>
            <div class="editor-field">
                @(Html.Kendo().TextBox().Name("NombrePeriodo").HtmlAttributes(new { MaxLength = "50", style = "width: 22.4em" }))
            </div>
            <div class="editor-label">
                <label for="Active">Activo</label>
            </div>
            <div class="editor-field">
                @Html.CheckBox("Active")
            </div>
        </div>
    </div>
