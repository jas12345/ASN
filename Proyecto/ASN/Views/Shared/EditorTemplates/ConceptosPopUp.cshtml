@model  ASN.Models.CatConceptosSel_Result

<style>
    tr.spaceUnder > td {
        padding-bottom: 1em;
    }
</style>
<div class="col-lg-12 col-md-12">
    @Html.HiddenFor(x => x.ConceptoId)
    <div class="k-edit-form-container">
        <div class="editor-label">
            <label for="Descripcion">Descripción</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().TextBoxFor(x => x.Descripcion).HtmlAttributes(new { required = "required", validationMessage = "El campo descripción es requerido." }))
        </div>
        <div class="editor-label">
            <label for="PaisId">País</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().MultiSelect()
                .ValuePrimitive(true)
                .Filter("contains")
                .DataValueField("Id")
                .DataTextField("Value")
                .Name("Paises")
                .AutoBind(true)
                .ClearButton(true)
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetCountryCMB", "Conceptos");
                    })
                    .ServerFiltering(true);
                })
                .HtmlAttributes(new { required = "required", style = "text-align:center;width: 22.4em", validationMessage = "Seleccione un país." })
            )
        </div>
        <div class="editor-label">
            <label for="MercadoId">Mercado</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.MercadoId)
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetCompanyCMB", "Conceptos");
                    });
                    //.ServerFiltering(true);
                })
                .Filter("contains")
                .OptionLabel("- Mercado - ")
                .DataValueField("Id")
                .DataTextField("Value")
                .Name("MercadoId")
                .HtmlAttributes(new { required = "required", style = "text-align:center;width: 16.4em", validationMessage = "Seleccione un mercado." })
            )
        </div>
        <div class="editor-label">
            <label for="ClienteId">Cliente</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.ClienteId)
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetClientCMB", "Conceptos");
                    }).ServerFiltering(true);
                })
                .Filter("contains")
                .OptionLabel("- Cliente - ")
                .DataValueField("Id")
                .DataTextField("Value")
                .Name("ClienteId")
                .HtmlAttributes(new { required = "required", style = "text-align:center;width: 16.4em", validationMessage = "Seleccione un cliente." })
            )
        </div>
        <div class="editor-label">
            <label for="PeopleSoftId">PeopleSoft</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.PeopleSoftId)
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetConceptosMotivoCMB", "Conceptos");
                    });
                    //.ServerFiltering(true);
                })
                .Filter("contains")
                .OptionLabel("- PeopleSoft - ")
                .DataValueField("Ident")
                .DataTextField("Valor")
                .Name("PeopleSoftId")
                .HtmlAttributes(new { required = "required", style = "text-align:center;width: 16.4em", validationMessage = "Seleccione una opción" })
            )
        </div>
        <div class="editor-label">
            <label for="TipoPeriodoId">Tipo de periodo</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.TipoPeriodoId)
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetTipoPeriodoCMB", "Conceptos");
                    });
                })
                .Filter("contains")
                .OptionLabel("- Tipo de periodo - ")
                .DataValueField("Id")
                .DataTextField("Value")
                .Name("TipoPeriodoId")
                .HtmlAttributes(new { style = "text-align:center;width: 16.4em" })//, validationMessage = "Seleccione un tipo de periodo."
            )
        </div>
        <div class="editor-label">
            <label for="TipoConcepto">Tipo de concepto</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().DropDownListFor(x => x.TipoConcepto)
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetConceptosCMB", "Conceptos");
                    });
                    //.ServerFiltering(true);
                })
                .Filter("contains")
                .OptionLabel("- Tipo de concepto - ")
                .DataValueField("Ident")
                .DataTextField("Valor")
                .Name("TipoConcepto")
                .HtmlAttributes(new { required = "required", style = "text-align:center;width: 16.4em", validationMessage = "Seleccione un tipo de concepto." })
            )
        </div>
        <div class="editor-label">
            <label for="NumeroNivelAutorizante">Número de Nivel Autorizante</label>
        </div>
        <div class="editor-field">
            @(Html.Kendo().TextBoxFor(x => x.NumeroNivelAutorizante)
                .Name("NumeroNivelAutorizante")
                .HtmlAttributes(new { required = "required", style = "text-align:center;width: 16.4em" })
            )
        </div>
        <div class="editor-label">
            <label for="AutorizacionAutomatica">Autorización Automática</label>
        </div>
        <div class="editor-field">
            @Html.CheckBox("AutorizacionAutomatica")
        </div>
        <div class="editor-label">
            <label for="AutorizacionObligatoria">Autorización Obligatoria</label>
        </div>
        <div class="editor-field">
            @Html.CheckBox("AutorizacionObligatoria")
        </div>
        <div class="editor-label">
            <label for="Active">Activo</label>
        </div>
        <div class="editor-field">
            @Html.CheckBox("Active")
        </div>
    </div>
</div>
