
@{
    ViewBag.Title = "Index";
}

<style>
    #gridSolicitud {
        height: 99%;
    }

    #parent {
        overflow: hidden;
    }

    html,
    body {
        height: 100%;
    }
</style>

@if (User.Identity.IsAuthenticated)
{
    <div class="container-fluid">
        <div class="col-lg-12 col-md-12">
            <div class="row">
                @Html.Label("Mis Autorizaciones", new { style = "font-size: 18px" })
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12">
                <div id="parent">
                    @(Html.Kendo().Grid<ASN.Models.CatMisAutorizacionesSel_Result>()
                            .Name("gridSolicitud")
                            .Columns(column =>
                            {
                                column.Command(command => { command.Custom("Editar").Text("<span class='k-icon k-i-edit'></span> Editar").Click("EditaAutorizacion"); }).Width(40);
                                //column.Bound(c => c.FolioSolicitud).Width(40).Title("Folio de Solicitud").Visible(true).Filterable(true);
                                column.Bound(c => c.FolioSolicitud).Width(40).Title("Folio de Solicitud").Visible(true).Filterable(ftb => ftb.Cell(cell => cell.Template("gridFilterIntegerNumericTextbox").ShowOperators(false)));
                                column.Bound(c => c.Fecha_Solicitud).Title("Fecha de Solicitud").Visible(true).Format("{0:yyyy-MM-dd}").Filterable(true).Width(50).Filterable(fil => fil.Cell(cc => cc.ShowOperators(false).Template("dateFilter")));
                                column.Bound(c => c.EstatusSolicitud).Title("Estatus").Visible(true).Width(70);
                                //column.Bound(c => c.PeriodoNominaId).Title("Período de Nómina").Visible(true).Filterable(true).Width(70);
                                column.ForeignKey(c => c.PeriodoNominaId, (System.Collections.IEnumerable)ViewData["PeriodosNomina"], "Ident", "Valor").Title("Período de Nómina").Visible(true).Filterable(true).Width(70);
                                column.Bound(c => c.NombreAutorizador).Title("Nombre Autorizador").Visible(true).Width(70);
                                //column.Bound(c => c.Justificacion).Title("Justificanción").Visible(true).Width(70);
                            })
                            //.HtmlAttributes(new { style = "height: 475px;" })
                            .Scrollable(sorteable => sorteable.Virtual(false))
                            .Sortable()
                            .PersistSelection()
                            .Events(eve => eve.SaveChanges("onSave"))//.Change("onChange")
                            .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Model(model =>
                                {
                                    model.Id(c => c.FolioSolicitud);
                                    model.Field(c => c.FolioSolicitud);
                                    //model.Field(c => c.Justificacion).Editable(false);
                                })
                                .Read(read => read.Action("GetAutorizaciones", "MisAutorizaciones")) //.Data("GetPerfil"))
                            )
                            .Navigatable()
                            .Pageable(pageable => pageable
                            .Refresh(true)
                            .PageSizes(true)
                            .ButtonCount(5)
                            .Numeric(true)
                            .PreviousNext(true)
                            .Messages(messages =>
                            {
                                messages.ItemsPerPage("Registros por página");
                                messages.Empty("Sin información para mostrar");
                                messages.First("Primera");
                                messages.Page("Página");
                                messages.Last("Última");
                                messages.Previous("Anterior");
                                messages.Next("Siguiente");
                                messages.Refresh("Actualizar");
                                messages.Of("De");
                                messages.MorePages("Mas páginas");
                                messages.Display("{0} a {1} de {2}");
                            })
                            )
                    )
                </div>
            </div>
        </div>
    </div>
    <script>
        var urlSolicitud = '@Url.Action("Autorizar", "MisAutorizaciones")';
		var urlEditar = '@Url.Action("Index", "AutorizaSolicitud")'
    </script>
}
else
{
    <script type="text/javascript">
$(function(){
    window.location.href = "@Url.Action("Index","Inicio")";
});
    </script>
}

@Scripts.Render("~/bundles/MisAutorizaciones")
