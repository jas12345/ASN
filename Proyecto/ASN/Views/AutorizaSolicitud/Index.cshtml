@model ASN.Models.CatAutorizacionesSel_Result
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .primerLabel {
        font-weight: normal;
    }

    label {
        font-size: small;
    }

    .k-grid-header th.k-header {
        text-align: center;
    }

    #gridAutorizacion {
        height: 99%;
    }

    #parent {
        overflow: hidden;
    }

    html,
    body {
        height: 100%;
    }

    #gridAutorizacion > .k-grid-header > div > table,
    #gridAutorizacion > .k-grid-content > table {
        width: 100% !important;
    }
</style>



@{
    int folioId = 0;

    if (Model != null)
    {
        folioId = Model.FolioSolicitud;
    }

    @Html.Hidden("folioId", folioId)
}

@if (User.Identity.IsAuthenticated)
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                @Html.Label("Autoriza Solicitud", new { style = "font-size: 18px" })
            </div>
        </div>
        <div class="col-lg-12 col-md-12">
            @*<div class="col-lg-2">
                    @Html.Label("Autoriza Solicitud", new { style = "font-size: 15px" })
                </div>*@
            <div class="col-lg-4">
                @Html.Label("Folio de Solicitud: ", new { style = "font-size: 15px" })
                @(Html.Kendo().NumericTextBox().Name("FolioSolicitud")
                    .Enable(false)
                    .Spinners(false)
                    .Decimals(0)
                    .Format("0")
                    .Min(0)
                    .Events(e => e.Change("onChangeFolioSolicitud"))
                    //.Value(string.IsNullOrEmpty(Model.FolioSolicitud.ToString()) ? "Nuevo" : Model.FolioSolicitud.ToString())
                    .Value(Model.FolioSolicitud)
                    .HtmlAttributes(new { style = "text-align:center;width: 6em;", maxlength = "10" })
                )
            </div>
            <div class="col-lg-4">
                @Html.Label("Periodo de nómina: ", new { style = "font-size: 15px" })
                @Html.TextBox("PeriodoNomina", "", new { disabled = "disabled", style = "width:13em;" })
                @*@(Html.Kendo().DropDownList().DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetPeriodoNominaCMB", "AutorizaSolicitud");
                            }
                            );
                        //.ServerFiltering(true);
                        }
                        )
                        .Filter("contains")
                        .OptionLabel("- Seleccione Periodo de Nomina - ")
                        .DataValueField("Ident")
                        .DataTextField("Valor")
                        .Name("PeriodoNomina_Id")
                        .SelectedIndex(1)
                        .Enable(false)
                        .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                    )*@
            </div>
            <div class="col-lg-4">
                @Html.Label("Estatus: ", new { style = "font-size: 15px" })
                @Html.TextBox("Estatus", "", new { disabled = "disabled", style = "width:13em;" })
            </div>
            <p></p>
        </div>
        <p></p>

        <table class="table" style="margin-bottom: 5px;">
            <tbody>
                <tr>
                    <td>
                        <label class="primerLabel" id="lblCCMSID">CCMSID:</label><br />
                        <label class="primerLabel" id="lblNombre">Nombre:</label><br />
                        <label class="primerLabel" id="lblPuesto">Puesto:</label><br />
                        <label class="primerLabel" id="lblContrato">Contrato:</label>
                    </td>
                    <td>
                        <label id="CCMSIDX"></label><br />
                        <label id="NombreX"></label><br />
                        <label id="PuestoX"></label><br />
                        <label id="ContratoX"></label>
                    </td>
                    <td>
                        <label class="primerLabel" id="lblSite">Site:</label><br />
                        <label class="primerLabel" id="lblConcepto">Concepto:</label><br />
                        <label class="primerLabel" id="lblParametro">Parámetro:</label><br />
                        <label class="primerLabel" id="lblMotivo">Motivo:</label>
                    </td>
                    <td>
                        <label id="SiteX"></label><br />
                        <label id="ConceptoX"></label><br />
                        <label id="ParametroX"></label><br />
                        <label id="MotivoX"></label>
                    </td>
                    <td>
                        <label class="primerLabel" id="lblConceptoMotivo">Concepto Motivo:</label><br />
                        <label class="primerLabel" id="lblResponsableCCMSID">Responsable de incidente:</label><br />
                        <label class="primerLabel" id="lblNombreRespo">Nombre responsable:</label><br />
                        <label class="primerLabel" id="lblPeriodoOP">Período original de pago:</label>
                    </td>
                    <td>
                        <label id="ConceptoMotivoX"></label><br />
                        <label id="ResponsableCCMSIDX"></label><br />
                        <label id="NombreRespoX"></label><br />
                        <label id="PeriodoOPX"></label>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="container-fluid">
        <div id="Captura">
            <div class="row">
                <div class="col-lg-12">
                    <table class="table-responsive table" cellpadding="1" style="margin-bottom: 5px;">
                        <tr>
                            <th scope="col">
                                CCMSID
                            </th>
                            <th scope="col">
                                Concepto
                            </th>
                            <th scope="col">
                                Parámetro/Monto
                            </th>
                            <th scope="col">
                                Motivo
                            </th>
                            <th scope="col">
                                Concepto Motivo
                            </th>
                            <th scope="col">
                                Responsable de Incidente (CCMSID)
                            </th>
                            <th scope="col">
                                Período Original de Pago
                            </th>
                        </tr>
                        <tr>
                            <td>
                                @(Html.Kendo().NumericTextBox()
                                    .Name("CCMSIDSolicitado")
                                    .Spinners(false)
                                    .Decimals(0)
                                    .Format("0.")
                                    .Min(0)
                                    .Events(e => e.Change("onChangeCCMSId"))
                                    .Enable(false)
                                    //.Step(5)
                                    //.Value(0)
                                    .HtmlAttributes(new { style = "text-align:center;width: 9em;", maxlength = "10" })
                                )
                            </td>
                            <td>
                                @(Html.Kendo().DropDownList().DataSource(source =>
                                    {
                                    source.Read(read =>
                                    {
                                        read.Action("GetConceptosxEmpleadoxSolicitanteCMB", "AutorizaSolicitud").Data("getIdent"); ;
                                    }
                                    );
                                                //.ServerFiltering(true);
                                            }
                                    )
                                    .Filter("contains")
                                    .AutoBind(false)
                                    .OptionLabel("- Conceptos - ")
                                    .DataValueField("Ident")
                                    .DataTextField("Valor")
                                    .Name("Conceptos")
                                    .Enable(false)
                                    .Events(e => e.Change("onChangeConceptos"))
                                    //.SelectedIndex(1)
                                    .Enable(true)
                                    .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                )
                            </td>
                            <td>
                                @(Html.Kendo().NumericTextBox()
                                    .Name("Parametro")
                                    .Enable(false)
                                    .Events(e => e.Change("onChangeParametro"))
                                    .Spinners(false)
                                    .Decimals(2)
                                    .Format("0.00")
                                    .Min(0)
                                    //.Step(5)
                                    //.Value(0)
                                    .HtmlAttributes(new { style = "text-align:center;width: 9em", maxlength = "10" })
                                )
                            </td>
                            <td>
                                @(Html.Kendo().DropDownList().DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetMotivosCMB", "AutorizaSolicitud");
                                        }
                                    );
                                                    //.ServerFiltering(true);
                                                }
                                                                                )
                                    .Filter("contains")
                                    .OptionLabel("- Motivo - ")
                                    .DataValueField("Id")
                                    .DataTextField("Valor")
                                    .Name("Motivo")
                                    .Enable(false)
                                    .Events(e => e.Change("onChangeMotivo"))
                                    //.SelectedIndex(1)
                                    .Enable(true)
                                    .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                )
                            </td>
                            <td>
                                @(Html.Kendo().DropDownList().DataSource(source =>
                                    {
                                        source.Read(read =>
                                                    {
                                                        read.Action("GetConceptosMotivosCMB", "AutorizaSolicitud");
                                                    });
                                                    //.ServerFiltering(true);
                                                })
                                    .Filter("contains")
                                    .OptionLabel("- Concepto Motivo - ")
                                    .DataValueField("Ident")
                                    .DataTextField("Valor")
                                    .Name("ConceptoMotivo")
                                    .Enable(false)
                                    .Events(e => e.Change("onChangeConceptoMotivo"))
                                    //.SelectedIndex(1)
                                    .Enable(true)
                                    .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                )
                            </td>
                            <td>
                                @(Html.Kendo().NumericTextBox()
                                    .Name("CCMSIDIncidente")
                                    .Enable(false)

                                    .Spinners(false)
                                    .Decimals(0)
                                    .Format("0.")
                                    .Min(0)
                                    .Events(e => e.Change("onChangeCCMSIdIncidente"))
                                    //.Step(5)
                                    //.Value(0)
                                    .HtmlAttributes(new { style = "text-align:center;width: 9em", maxlength = "10" })
                                )
                            </td>
                            <td>
                                @(Html.Kendo().DropDownList().DataSource(source =>
                                    {
                                        source.Read(read =>
                                                    {
                                        read.Action("GetPeriodoNominaCMB", "AutorizaSolicitud");
                                    });
                                                    //.ServerFiltering(true);
                                                })
                                    .Filter("contains")
                                    .OptionLabel("- Período Incidente - ")
                                    .DataValueField("Ident")
                                    .DataTextField("Valor")
                                    .Name("PeriodoIncidente")
                                    //.Enable(false)
                                    .Events(e => e.Change("onChangePeriodoIncidente"))
                                    //.SelectedIndex(1)
                                    .Enable(true)
                                    .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                )
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="col-lg-12">
                    <div class="col-lg-9">
                        @*<div class="col-lg-2">
                                @(Html.Kendo().Button().Name("AutorizarSolicitud").Content("Autorizar").Icon("check")
                                .Events(x => x.Click("autorizarSolicitud")).HtmlAttributes(new { style = "background-color:green;color:white;font-weight:bold;" })
                                )
                            </div>*@
                        @*<div class="col-lg-2">
                                @(Html.Kendo().Button().Name("RechazarSolicitud").Content("Rechazar").Icon("close")
                                .Events(x => x.Click("rechazarSolicitud")).HtmlAttributes(new { style = "background-color:red;color:white;font-weight:bold;" })
                                )
                            </div>*@
                        <div class="col-lg-3">
                            @(Html.Kendo().Button().Name("AutorizarSolicitudALL").Content("Autorizar").Icon("check")
                            .Events(x => x.Click("autorizarSolicitudALL")).HtmlAttributes(new { style = "background-color:green;color:white;font-weight:bold;" })
                            )
                        </div>
                        <div class="col-lg-3">
                            @(Html.Kendo().Button().Name("AutorizarTodaSolicitud").Content("Autorizar Toda Solicitud").Icon("check")
                            .Events(x => x.Click("autorizarTodaSolicitudDialog")).HtmlAttributes(new { style = "background-color:green;color:white;font-weight:bold;" })
                            )
                        </div>
                        <div class="col-lg-3">
                            @(Html.Kendo().Button().Name("RechazarSolicitudALL").Content("Rechazar").Icon("close")
                            .Events(x => x.Click("rechazarSolicitudALL")).HtmlAttributes(new { style = "background-color:red;color:white;font-weight:bold;" })
                            )
                        </div>
                        <div class="col-lg-3">
                            @(Html.Kendo().Button().Name("RechazarTodaSolicitud").Content("Rechazar Toda Solicitud").Icon("check")
                            .Events(x => x.Click("rechazarTodaSolicitudDialog")).HtmlAttributes(new { style = "background-color:red;color:white;font-weight:bold;" })
                            )
                        </div>
                    </div>
                    <div class="col-lg-3">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <p></p>
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div id="parent">
                    @(Html.Kendo().Grid<ASN.Models.CatAutorizacionesSel_Result>()
                            .Name("gridAutorizacion")
                            .Columns(column =>
                            {
                                if(Model.EstatusId == "PA" || Model.EstatusId == "R" )
                                {
                                    column.Select().Width(9).HtmlAttributes(new { style = "text-align: left;" }).HeaderHtmlAttributes(new { style = "text-align: left;" });
                                }
                                column.Command(command => command.Custom("Editar").Text("<span class='k-icon k-i-preview'></span>").Click("editarEmpleadoSolicitud")).Title("Ver").Width(25).HtmlAttributes(new { style = "text-align: center;" });
                                //column.Command(command => command.Custom("Borrar").Text("<span class='k-icon k-i-delete'></span>").Click("borrarEmpleadoSolicitud")).Title("Borrar").Width(25);
                                column.Bound(c => c.FolioSolicitud).Width(35).Title("Comentarios").ClientTemplate("<input class='k-button k-button-icontext' style='text-align:center;' type='button' value='Comentarios' onclick='getComments(#=FolioSolicitud#,#=Ident#,#=ConceptoId#);' />").Filterable(false);
                                //column.Bound(c => c.FolioSolicitud).Width(1).Title("# folioid").Filterable(false).Visible(true);
                                //column.Bound(c => c.ConceptoId).Width(1).Title("# conceptid").Filterable(false).Visible(true);
                                column.Bound(c => c.Ident).Width(40).Title("# Empleado").Filterable(false).Visible(true);
                                column.Bound(c => c.Nombre).Title("Nombre").Filterable(false).Visible(true).Width(70);
                                column.Bound(c => c.ConceptoDesc).Title("Concepto").Filterable(false).Width(70);
                                column.Bound(c => c.Monto).Title("Monto").Filterable(false).Width(70);
                                column.Bound(c => c.MotivosSolicitudDesc).Title("Motivo").Filterable(false).Width(70);
                                column.Bound(c => c.EstatusSolicitud).Title("Estatus").Filterable(false).Width(70);
                                column.Bound(c => c.Autorizador).Title("Autorizador Asignado").Filterable(false).Width(70);
                                column.Bound(c => c.Autorizador_Ident).Title("Autorizador CCMSID").Filterable(false).Width(70).Visible(false);
                            })
                            //.HtmlAttributes(new { style = "height: 475px;" })
                            .Scrollable()
                            .Sortable()
                            //.PersistSelection()
                            .AutoBind(false)
                            .Events(eve => eve.Change("onChange").DataBound("ocultaCheckbox"))
                            //.Filterable(ftb => ftb.Mode(GridFilterMode.Row))
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Model(model =>
                                {
                                    model.Id(c => c.FolioSolicitud);
                                    model.Field(c => c.Ident).Editable(true);
                                    model.Field(c => c.Nombre).Editable(true);
                                    model.Field(c => c.ConceptoId).Editable(true);
                                    model.Field(c => c.ConceptoDesc).Editable(true);
                                    model.Field(c => c.Monto).Editable(false);
                                    model.Field(c => c.MotivosSolicitudId).Editable(true);
                                    model.Field(c => c.MotivosSolicitudDesc).Editable(true);
                                    model.Field(c => c.ConceptoMotivoId).Editable(true);
                                    model.Field(c => c.ConceptoMotivoDesc).Editable(true);
                                    model.Field(c => c.ResponsableId).Editable(true);
                                    model.Field(c => c.PeriodoOriginalId).Editable(true);
                                    model.Field(c => c.EstatusSolicitud).Editable(false);
                                    model.Field(c => c.NivelAutorizacion).Editable(false);
                                    model.Field(c => c.Solicitante_Ident).Editable(false);
                                    model.Field(c => c.Autorizador_Ident).Editable(true);
                                    model.Field(c => c.Autorizador).Editable(true);
                                    model.Field(c => c.BtnAutorizarBorrar).Editable(false);
                                })
                            .Read(read => read.Action("GetAutorizaciones", "AutorizaSolicitud").Data("getFolio"))
                            //.Update(update => update.Action("UpdatePerdiodoNomina", "PeriodoNomina").Type(HttpVerbs.Post))
                            //.Create(create => create.Action("CrearSolicitudPorEmpleado", "AutorizaSolicitud").Type(HttpVerbs.Post))
                            //.Events(ev => ev.Error("errorsote").RequestEnd("valida"))
                            )
                            //.Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                            //.Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple).Type(GridSelectionType.Row))
                            .Navigatable()
                            .Pageable(pageable => pageable
                            .Refresh(true)
                            .PageSizes(true)
                            .ButtonCount(5)
                            .Numeric(true)
                            .PreviousNext(true)
                            .Messages(messages =>
                            {
                                messages.ItemsPerPage("Registros por página");
                                messages.Empty("Sin información para mostrar");
                                messages.First("Primera");
                                messages.Page("Página");
                                messages.Last("Última");
                                messages.Previous("Anterior");
                                messages.Next("Siguiente");
                                messages.Refresh("Actualizar");
                                messages.Of("De");
                                messages.MorePages("Mas páginas");
                                messages.Display("{0} a {1} de {2}");
                            })
                            )
                )
                </div>
            </div>
        </div>
    </div>

    @(Html.Kendo().Window()
        .Name("Comentarios")
        .Title("Comentarios")
        .Content("loading user info...")
        //.LoadContentFrom("GetComments", "MisReferidos")
        .Iframe(true)
        .Actions(a => a
            //.Minimize()
            .Maximize()
            .Close()
        )
        .Resizable()
        .Draggable()
        .Width(470)
        .Height(530)
        .Visible(false)
        .Modal(true)
    )


    @(Html.Kendo().Notification()
        .Name("popupNotificationCom")
        .Position(p => p.Pinned(true).Top(30).Right(30))
        .Stacking(NotificationStackingSettings.Down)
        .Events(e => e.Show("onShow"))
    //.HtmlAttributes( new { @style = "background:rgba(0%,60%,0%,.7);color:white;"})
    )

    @(Html.Kendo().Dialog()
        .Name("dialogAutorizaTodo")
        .Title("Advertencia")
        .Content("<p><strong>Se van a autorizar todos los conceptos de la solicitud...</strong></p><p>No es posible deshacer esta operación.</p><p><strong>Deseas continuar?</strong></p>")
        .Width(400)
        .Modal(true)
        .Animation(true)
        .Visible(false)
        .Actions(actions =>
        {
            actions.Add()
            .Text("Autorizar Todo")
            .Action("autorizarTodaSolicitud");
            actions.Add()
            .Text("No autorizar")
            .Action("onCancel")
            .Primary(true);
        })
    )


    @(Html.Kendo().Dialog()
        .Name("dialogRechazaTodo")
        .Title("Advertencia")
        .Content("<p><strong>Se van a rechazar todos los conceptos de la solicitud...</strong></p><p>No es posible deshacer esta operación.</p><p><strong>Deseas continuar?</strong></p>")
        .Width(400)
        .Modal(true)
        .Animation(true)
        .Visible(false)
        .Actions(actions =>
        {
            actions.Add()
            .Text("Rechazar Todo")
            .Action("rechazarTodaSolicitud");
            actions.Add()
            .Text("No rechazar")
            .Action("onCancel")
            .Primary(true);
        })
    )


    <script>
                @*var urlCrearSolicitud = '@Url.Action("CreateSolicitud", "Solicitudes")';*@
                var urlSolicitudEmpleados = '@Url.Action("GuardaEmpleados", "Solicitudes")';
                var urlDefault = '@Url.Action("Index", "Solicitudes")';
                var urlGridEmpleadosAutorizadores = '@Url.Action("GridEmpleadosAutorizantes", "EmpleadosSolicitudes")';
    </script>

    <script>
                //var listaEmpleados = "";
                //var selectedEmpleados = new Array();
                var grid = $('#grid');
                //var urlDeletePerfilEmpleadosAccesos = '@Url.Action("DeleteEmpleados", "AutorizaSolicitud")';

                //Datos a extraer Empleado - Puesto - Contrato - Site
                var EmpCCMSId = "";
                var EmpNombre = "";
                var EmpPuestoId = "";
                var EmpPuesto = "";
                var EmpContratoId = "";
                var EmpContrato = "";
                var EmpSiteId = "";
                var EmpSite = "";

                // Sección Empleado - Puesto
                var EmpPosition_Code_Ident = "";
                var EmpPosition_Code_Title = "";
                var EmpContract_Type_Ident = "";
                var EmpContract_Type = "";
                var EmpLocation_Ident = "";
                var EmpLocation_Name = "";
                var EmpActive = "";
                var EmpCCMSIdManager = "";
                var EmpNombreManager = "";

                // Sección Conceptos - Parámetro - Conceptos - Valor
                var ConConceptoIdent = ""
                var ConConceptoNombre = ""
                var ConParametroId = ""
                var ConParametroNombre = ""
                var ConParametroConceptoMonto = ""
                var ConNivelesAutorizacion = ""
                var ConEmpleadoident = ""

                // Sección Responsable de Incidente
                var CCMSIdResponsable = "";
                var NombreResponsableIncidente = "";

                // Sección alta de Empleados - Solicitudes
                var FolioSolicitud = -1
                var Fecha_Solicitud = ""
                var Solicitante_Ident = ""

                //Sección alta de
                var conceptoMotivoId = ""
                var responsableId = ""
                var periododOriginalId = ""
                var ConMotivoNombre = "";
                var ConMotivoIdent = "";

                //Datos a extraer Perfil - Tipo de Acceso
                var nivel = "";
                var Active = "";
                var Error = "";

                // Autorizadores
                var autorizadorNivel1 = "";
                var autorizadorNivel2 = "";
                var autorizadorNivel3 = "";
                var autorizadorNivel4 = "";
                var autorizadorNivel5 = "";
                var autorizadorNivel6 = "";
                var autorizadorNivel7 = "";
                var autorizadorNivel8 = "";
                var autorizadorNivel9 = "";

                // URL para consultar datos de Empleado
                var urlEmpleadoPuesto = '@Url.Action("GetEmpleadoPuesto", "AutorizaSolicitud")';

                //
                var urlEmpleadoxSolicitante = '@Url.Action("GetEmpleadoxSolicitante", "AutorizaSolicitud")';

                //
                var urlConceptoParametroConcepto = '@Url.Action("GetConceptoParametroConcepto", "AutorizaSolicitud")';

                //
                var urlPerfilTipoAcceso = '@Url.Action("GetPerfilTipoAcceso", "PerfilEmpleadosAccesos")';

                // Liga para crear Solicitud
                //var urlCrearSolicitud = '@Url.Action("CreateSolicitud", "AutorizaSolicitud")';

                // Liga para enviar solicitud a Autorizadores
                //var urlEnviaSolicitud = '@Url.Action("EnviaSolicitud", "AutorizaSolicitud")';

                //
                //var urlUpdateEmpleadoSolicitud = '@Url.Action("UpdateEmpleadoSolicitud", "AutorizaSolicitud")';

                //
                //var urlCrearEmpleadoSolicitud = '@Url.Action("CreateEmpleadoSolicitud", "AutorizaSolicitud")';

                //
                //var urlEmpleadoSolicitud = '@Url.Action("CreateEmpleadoSolicitud", "AutorizaSolicitud")';

        //
        var urlAutorizaSolicitud = '@Url.Action("ProcesaSolicitud", "AutorizaSolicitud")';

        //
        var urlRechazaSolicitud = '@Url.Action("ProcesaSolicitud", "AutorizaSolicitud")';

        //
        //var urlCancelaSolicitud = '@Url.Action("ProcesaSolicitud", "AutorizaSolicitud")';


        // Función para calcular Estatus de Solicitud
        var urlConsultarEstatusSolicitud = '@Url.Action("ConsultarEstatusSolicitud", "AutorizaSolicitud")';

        // Función para calcular Perído de Nómina de Solicitud
        var urlConsultarPeriodoNominaSolicitud = '@Url.Action("ConsultarPeriodoNominaSolicitud", "AutorizaSolicitud")';

        //debugger;
        //var urlSolicitud = grid.selectedKeyNames().join(", ");

        var usuarioCCMSID = '@User.Identity.Name';
        var estatusId = '@Model.EstatusId';
    </script>
}
else
{
    <script type="text/javascript">
        $(function () {
            window.location.href = "@Url.Action("Index","Inicio", new { area = "" }, null)";
        });
    </script>
}

<script>
    var InfoCCMSID = '@Url.Action("GetUserInfo","AutorizaSolicitud")';

    function getComments(a,b,c) {

        var dialog = $("#Comentarios").data("kendoWindow");

        dialog.refresh({
            url: '@Url.Action("GetComments", "Comentarios")/?folioId=' + a + '&eid=' + b + '&conceptoId=' + c,
        });

        dialog.center().open();
    }
</script>

@Scripts.Render("~/bundles/AutorizaSolicitud")
