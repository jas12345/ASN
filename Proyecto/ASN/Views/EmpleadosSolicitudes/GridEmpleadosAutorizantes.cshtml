
@{
    ViewBag.Title = "GridEmpleadosAutorizantes";
    var Solicitud = ViewBag.SolicitudBaseId;
}

<div class="container-fluid">
    <div class="col-lg-12 col-md-12">
        <div class="row"><div style="display: inline-block;">@Html.Label("Captura de solicitud", new { style = "font-size: 15px; color:darkgrey;" }) - @Html.Label("Selección de Empleados", new { style = "font-size: 15px; color:darkgrey;" }) - @Html.Label("Conceptos motivos por empleado", new { style = "font-size: 15px; color:darkgrey;" }) - @Html.Label("Selección de autorizantes", new { style = "font-size: 15px;" })</div></div>
    </div>
    <div class="k-form-inline" style="padding:5px; display:none;">
        <div class="k-form-field">
            <div class="editor-label">
                <label for="perfilId">Perfil de usuario</label>
            </div>
            <input type="hidden" id="Solicitud_Id" value="@Solicitud" />
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12">
            @(Html.Kendo().Grid<ASN.Models.CatSolicitudEmpleadosAutorizantesSel_Result>()
                            .Name("GridEmpleadosAutorizantes")
                            .Columns(column =>
                            {
                                column.Bound(c => c.FolioSolicitud).Title("Solicitud").Visible(false).Filterable(true);
                                column.Bound(c => c.Empleado_Ident).Title("CCMS ID").Width(60).Filterable(true);
                                column.Bound(c => c.Autorizador_Ident).Visible(false);
                                column.Bound(c => c.NombreEmpleado).Title("Nombre").Visible(true).Filterable(true).Width(150);
                                column.Bound(c => c.NivelAutorizacion).Title("Nivel").Width(50).Visible(true);
                                column.Bound(c => c.NombreAutorizador).Title("Autorizante").Width(150).Visible(true).Filterable(true);
                                column.Bound(c => c.EsObligatorio).Title("Es obligatorio").Width(50).Visible(true);
                                column.Bound(c => c.Obligatorio).Width(50).Visible(false);
                                column.Bound(c => c.MontoAutorizacionAutomatica).Title("Monto autorización automatica").Width(60).Visible(true);
                                column.Bound(c => c.Estatus).Width(50).Visible(true);
                                column.Command(command => { command.Edit().Text("Editar"); }).Width(20);
                            })
                            .HtmlAttributes(new { style = "height: 700px;" })
                            .Scrollable(sorteable => sorteable.Virtual(false))
                            .Sortable()
                            .PersistSelection()
                            .Resizable(c => c.Columns(true))
                            .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("AutorizadorSolicitudesPopUp").Window(x => x.Width(630).HtmlAttributes(new { style = "width: 630px" })))//EmpleadoMotivoConceptoPopUp
                            .Events(eve => eve.SaveChanges("onSave").Edit("edit"))
                            .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
                            .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .Model(model =>
                                    {
                                        model.Id(c => c.FolioSolicitud);
                                        model.Field(c => c.Empleado_Ident).Editable(false);
                                        model.Field(c => c.Autorizador_Ident).Editable(true);
                                        model.Field(c => c.NivelAutorizacion).Editable(true);
                                        model.Field(c => c.Obligatorio).Editable(true);
                                        model.Field(c => c.MontoAutorizacionAutomatica).Editable(true);
                                        model.Field(c => c.Estatus).Editable(true);
                                        model.Field(c => c.Active).Editable(true);
                                    })
                                    .Read(read => read.Action("GridEmpleadosAutorizantesSel", "EmpleadosSolicitudes").Data("GetSolicitudAutoriza"))
                                    .Events(ev => ev.Error("errorsote").RequestEnd("valida"))
                                    .Update(update => update.Action("UpdateAutorizantesEmpleado", "EmpleadosSolicitudes").Data("GetAutorizador"))//.Data("GetParametros")
                                    )
                                           .Navigatable()
                                           .Pageable(pageable => pageable
                                           .Refresh(true)
                                           .PageSizes(true)
                                           .ButtonCount(5)
                                           .Numeric(true)
                                           .PreviousNext(true)
                                           .Messages(messages =>
                                           {
                                               messages.ItemsPerPage("Registros por página");
                                               messages.Empty("Sin información para mostrar");
                                               messages.First("Primera");
                                               messages.Page("Página");
                                               messages.Last("Última");
                                               messages.Previous("Anterior");
                                               messages.Next("Siguiente");
                                               messages.Refresh("Actualizar");
                                               messages.Of("De");
                                               messages.MorePages("Mas páginas");
                                               messages.Display("{0} a {1} de {2}");
                                           })
                                           )
            )
        </div>
    </div>    
</div>

