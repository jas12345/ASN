<div class="row">
    <div class="col-lg-4 col-md-4 col-sm-4"></div><div class="col-lg-4 col-md-4 col-sm-4"></div><div class="col-lg-4 col-md-4 col-sm-4"></div>
</div>
<div class="col-lg-12 col-md-12 col-sm-12">
    @(Html.Kendo().Grid<ASN.Models.EmpleadosSolicitudesViewModel>()
                                    .Name("gridEmpleados")
                                    .Columns(column =>
                                    {
                                        column.Bound(c => c.FolioSolicitud).Title("SolicitudId").Visible(false).Filterable(true);
                                        column.Bound(c => c.Empleado_Ident).Title("CCMS ID").Width(50).Visible(true).Filterable(true);
                                        column.Bound(c => c.Empleado_Middle_Name).Width(80).Title("Nombre").Visible(true).Filterable(true);
                                        //column.Bound(c => c.CatConceptoMotivoId).Width(50).Title("Concepto de motivo").Visible(true).Filterable(true).Width(50);//,(System.Collections.IEnumerable)ViewData["ConceptoMotivo"], "Ident", "Valor"
                                        column.Bound(c => c.ConceptoMotivo).Width(90).Title("Concepto de Motivo").Visible(true).Filterable(true);
                                        //column.Bound(c => c.Manager_Ident).Title("Responsable ID").Visible(true).Filterable(true).Width(50);
                                        //column.Bound(c => c.Manager_Middle_Name).Title("Nombre responsable").Width(80).Visible(true);
                                        //column.Bound(c => c.Manager_Position_Code_Title).Title("Puesto responsable").Width(50).Visible(true);
                                        //column.Bound(c => c.ParametroConceptoMonto).Width(50).Visible(true);
                                        //column.Bound(c => c.Detalle).Width(80).Visible(true);
                                        //column.Bound(c => c.PeriodoNomina).Width(50).Visible(true);
                                        column.Command(command => { command.Edit().Text("Editar"); }).Width(20);
                                    })
                                   .HtmlAttributes(new { style = "height: 700px;" }) //EmpleadosSolicitudesPopUp
                                   .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("EmpleadoMotivoConceptoPopUp").Window(x => x.Width(630).HtmlAttributes(new { style = "width: 630px" })))
                                   .Events(eve => eve.SaveChanges("onSave").Edit("edit"))
                                   .Scrollable(sorteable => sorteable.Virtual(false))
                                   .Sortable()
                                   .Resizable(c => c.Columns(true))
                                   .PersistSelection()
                                   .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
                                   .DataSource(dataSource => dataSource
                                       .Ajax()
                                       .Model(model =>
                                       {
                                           model.Id(c => c.FolioSolicitud);
                                           model.Field(c => c.Empleado_Ident).Editable(true);
                                           model.Field(c => c.Empleado_Middle_Name).Editable(true);
                                           model.Field(c => c.CatConceptoMotivoId).Editable(true);
                                           //model.Field(c => c.Manager_Ident).Editable(true);
                                           //model.Field(c => c.Manager_Middle_Name).Editable(false);
                                           //model.Field(c => c.Manager_Position_Code_Title).Editable(true);
                                           //model.Field(c => c.ParametroConceptoMonto).Editable(true);
                                           //model.Field(c => c.PeriodoNomina).Editable(true);
                                           //model.Field(c => c.Detalle).Editable(true);
                                       })
                                       .Read(read => read.Action("GetEmpleadosSolicitudesSel", "EmpleadosSolicitudes").Data("GetSolicitudId"))
                                       .Create(create => create.Action("CreateSolicitudEmpleadosDetalle", "EmpleadosSolicitudes").Data("GetParametrosAlta"))
                                       .Update(update => update.Action("CreateSolicitudEmpleadosDetalle", "EmpleadosSolicitudes"))//.Data("GetParametros")
                                   )
                                   .Navigatable()
                                   .Pageable(pageable => pageable
                                   .Refresh(true)
                                   .PageSizes(true)
                                   .ButtonCount(5)
                                   .Numeric(true)
                                   .PreviousNext(true)
                                   .Messages(messages =>
                                   {
                                       messages.ItemsPerPage("Registros por página");
                                       messages.Empty("Sin información para mostrar");
                                       messages.First("Primera");
                                       messages.Page("Página");
                                       messages.Last("Última");
                                       messages.Previous("Anterior");
                                       messages.Next("Siguiente");
                                       messages.Refresh("Actualizar");
                                       messages.Of("De");
                                       messages.MorePages("Mas páginas");
                                       messages.Display("{0} a {1} de {2}");
                                   })
                                   )
    )
    <input type="hidden" id="idSolicitud" value="@ViewBag.SolicitudBaseId"/>
    <input type="hidden" name="idPerfil" value="@ViewBag.PerfilId" />
</div>

@Scripts.Render("~/bundles/EmpleadosSolicitudes")