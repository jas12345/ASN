
@{
    ViewBag.Title = "Index";
}

<style>
    .k-grid .k-hierarchy-col {
        width: 6px;
    }

    #grid {
        height: 99%;
    }

    #parent {
        overflow: hidden;
    }

    html,
    body {
        height: 100%;
    }
</style>


@if (User.Identity.IsAuthenticated)
{
    <div class="container-fluid">
        <div class="col-lg-12 col-md-12">
            <div class="row">
                @Html.Label("Reporte", new { style = "font-size: 18px" })
            </div>
            <div class="col-lg-4">
                @Html.Label("Período de nómina: ", new { style = "font-size: 15px" })
                @(Html.Kendo().DropDownList()
                                                                                .DataSource(source => source
                                                                                    .Custom()
                                                                                    .Transport(tr => tr
                                                                                       .Read(read =>
                                                                                       {
                                                                                           read.Action("GetPeriodoNominaCMB", "ReportePendientesAutorizarYRechazados");
                                                                                       }
                                                                                       )
                                                                                    )
                                                                                )
                                                                                .Filter("contains")
                                                                                .OptionLabel("- Seleccione Periodo de Nomina - ")
                                                                                .DataValueField("Ident")
                                                                                .DataTextField("Valor")
                                                                                .Name("PeriodoNomina_Id")
                                                                                .SelectedIndex(0)
                                                                                .Enable(true)
                                                                                //.Events(e => e.Change("onDropDownChange"))
                                                                                .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                )
            </div>
            <div class="col-lg-4">
                @Html.Label("Empresa:", new { style = "font-size:15px" })
                @(Html.Kendo().DropDownList()
                                                                                .DataSource(source => source
                                                                                    .Custom()
                                                                                    .Transport(tr => tr
                                                                                       .Read(read =>
                                                                                       {
                                                                                           read.Action("GetEmpresaCMB", "ReportePendientesAutorizarYRechazados");
                                                                                       }
                                                                                       )
                                                                                    )
                                                                                )
                                                                                //.Filter("contains")
                                                                                .OptionLabel("- Seleccione una Empresa - ")
                                                                                .DataValueField("ID_Empresa")
                                                                                .DataTextField("Empresa")
                                                                                .Name("ddlEmpresa")
                                                                                .SelectedIndex(0)
                                                                                .Enable(true)
                                                                                //.Events(e => e.Change("onEmpresaDropDownChange"))
                                                                                .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                )
            </div>
            <div class="col-lg-2">
                @*@Html.Label("Enviar Archivo Nómina", new { style = "font-size: 15px" })*@
                @(Html.Kendo().Button().Name("Buscar").Content("Buscar").Icon("search")
                                                .Events(x => x.Click("onClickFiltrar"))
                                                .HtmlAttributes(new { style = "background-color:blue;color:white;font-weight:bold;" })
                )
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12">
                <div id="parent">
                    @(Html.Kendo().Grid<ASN.Models.ReportePendientesAutorizarYRechazados_Result2>()
                                        .Name("grid")
                                        .Columns(columns =>
                                        {
                                            //columns.Bound(e => e.PeriodoNomina).Title("Fecha Inicio").Format("{0:yyyy-MM-dd}").Filterable(true).Width(30).Filterable(fil => fil.Cell(cc => cc.ShowOperators(false).Template("dateFilter")));
                                            //columns.Bound(e => e.PeriodoNominaId).Width(25).Title("Periodo").Filterable(ftb => ftb.Cell(cell => cell.Template("gridFilterIntegerNumericTextbox").ShowOperators(false)));
                                            columns.Bound(e => e.PeriodoNomina).Title("Periodo Nomina").Width(50).Filterable(true);
                                            columns.Bound(e => e.FolioSolicitud).Width(15).Title("Folio").Filterable(ftb => ftb.Cell(cell => cell.Template("gridFilterIntegerNumericTextbox").ShowOperators(false)));
                                            columns.Bound(e => e.Incidencias).Width(25).Title("Incidencias").Filterable(ftb => ftb.Cell(cell => cell.Template("gridFilterIntegerNumericTextbox").ShowOperators(false)));
                                            columns.Bound(e => e.Location_Name).Width(30).Title("Locación").Filterable(true);
                                            columns.Bound(e => e.Concepto).Width(30).Title("Concepto").Filterable(true);
                                            columns.Bound(e => e.Estatus).Width(35).Title("Estatus").Filterable(true);
                                            columns.Bound(e => e.Importe).Width(45).Title("Importe").Filterable(ftb => ftb.Cell(cell => cell.Template("gridFilterIntegerNumericTextbox").ShowOperators(false)));
                                            columns.Bound(e => e.Autorizaciones_Pendientes).Width(70).Title("Autorizaciones Pendientes");
                                            columns.Bound(e => e.Autorizador_Que_Rechaza).Width(70).Title("Autorizador Que Rechaza");
                                            columns.Bound(e => e.Motivo_Del_Rechazo).Width(70).Title("Motivo del Rechazo");
                                        })
                                        .ToolBar(tools => tools.Excel().Text("Exportar a Excel"))
                                        .Excel(excel => excel.FileName(DateTime.Now.ToString("yyyy-MM-dd_HH:mm:ss")).AllPages(true).Filterable(true))
                                        .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
                                        .Sortable()
                                        .Scrollable()
                                        //.HtmlAttributes(new { style = "height: 775px;" })
                                        .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .Batch(true)
                                            .ServerOperation(true)
                                            .Model(model =>
                                            {
                                                model.Id(c => c.FolioSolicitud);
                                            })
                                            .Read(read => read.Action("GetReporte", "ReportePendientesAutorizarYRechazados").Data("infoFiltrar"))
                                        )
                                        .Navigatable()
                                        //.Events(e => e.DataBound("dataBound").ExcelExport("excelexport").DetailInit("detailInit"))
                                        //.Events(e => e.DataBound("dataBound"))
                                        .Events(e => e.ExcelExport("columnas"))
                                        .Pageable(pageable => pageable
                                            .Refresh(true)
                                            .PageSizes(true)
                                            .ButtonCount(5)
                                            .Numeric(true)
                                            .PreviousNext(true)
                                            .Messages(messages =>
                                            {
                                                messages.ItemsPerPage("Registros por página");
                                                messages.Empty("Sin información para mostrar");
                                                messages.First("Primera");
                                                messages.Page("Página");
                                                messages.Last("Última");
                                                messages.Previous("Anterior");
                                                messages.Next("Siguiente");
                                                messages.Refresh("Actualizar");
                                                messages.Of("De");
                                                messages.MorePages("Mas páginas");
                                                //messages.Display("Prueba");
                                                messages.Display("{0} a {1} de {2}");
                                            })
                                        )
                    )
                </div>

            </div>
        </div>
    </div>
}
else
{
    <script type="text/javascript">
        //var PeriodoNomina_Id_selected = 0;
        //var PeriodoNomina_selected = '';
        //var Empresa_selected = '';
        //var EmpresaId_selected = 0;
$(function(){
    window.location.href = "@Url.Action("Index","Inicio")";
});
    </script>
}


@Scripts.Render("~/bundles/ReportePendientesAutorizarYRechazados");
