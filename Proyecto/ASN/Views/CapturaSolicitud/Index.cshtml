@model ASN.Models.CatSolicitudesSel_Result
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .primerLabel {
        font-weight: normal;
    }

    label {
        font-size: small;
    }

    .k-grid-header th.k-header {
        text-align: center;
    }

    #gridSolicitud > .k-grid-header > div > table,
    #gridSolicitud > .k-grid-content > table {
        width: 100% !important;
    }
</style>



@{
    int folioId = 0;

    if (Model != null)
    {
        folioId = Model.FolioSolicitud;
    }

    @Html.Hidden("folioId", folioId)
}

@if (User.Identity.IsAuthenticated)
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                @Html.Label("Captura de Solicitudes", new { style = "font-size: 18px" })
            </div>
        </div>
        <div class="col-lg-12 col-md-12">
            <div class="col-lg-9">
                <div class="col-lg-3">
                    @Html.Label("Folio de Solicitud: ", new { style = "font-size: 15px" })
                    @(Html.Kendo().NumericTextBox().Name("FolioSolicitud")
                        .Enable(false)
                        .Spinners(false)
                        .Decimals(0)
                        .Format("0")
                        .Min(0)
                        .Events(e => e.Change("onChangeFolioSolicitud"))
                        //.Value(string.IsNullOrEmpty(Model.FolioSolicitud.ToString()) ? "Nuevo" : Model.FolioSolicitud.ToString())
                        .Value(Model.FolioSolicitud)
                        .HtmlAttributes(new { style = "text-align:center;width: 6em;", maxlength = "10" })
                    )
                </div>
                 <div class="col-lg-4">
                    @Html.Label("Periodo de nómina actual: ", new { style = "font-size: 15px" })
                    @(Html.Kendo().DropDownList().DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetPeriodoNominaCMB", "CapturaSolicitud");
                            }
                            );
                        //.ServerFiltering(true);
                        })
                        .Filter("contains")
                        .OptionLabel("- Seleccione Periodo de Nomina - ")
                        .DataValueField("Ident")
                        .DataTextField("Valor")
                        .Name("PeriodoNomina_Id")
                        .SelectedIndex(1)
                        .Enable(false)
                        .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                    )
                </div>
                <div class="col-lg-4">
                    @Html.Label("Estatus: ", new { style = "font-size: 15px" })
                    @Html.TextBox("Estatus", "", new { disabled = "disabled" })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="col-lg-12" style="text-align:right;">
                    @(Html.Kendo().Button().Name("CancelarSolicitud").Content("Cancelar solicitud").Icon("close")
                                .Events(x => x.Click("cancelarSolicitud")).HtmlAttributes(new { style = "background-color:red;color:white;font-weight:bold;" })
                    )
                </div>
            </div>
        </div>
            <p></p>

            <table class="table" style="margin-bottom: 5px;">
                <tbody>
                    <tr>
                        <td>
                            <label class="primerLabel" id="lblCCMSID">CCMSID:</label><br />
                            <label class="primerLabel" id="lblNombre">Nombre:</label><br />
                            <label class="primerLabel" id="lblPuesto">Puesto:</label><br />
                            <label class="primerLabel" id="lblContrato">Contrato:</label>
                        </td>
                        <td>
                            <label id="CCMSIDX"></label><br />
                            <label id="NombreX"></label><br />
                            <label id="PuestoX"></label><br />
                            <label id="ContratoX"></label>
                        </td>
                        <td>
                            <label class="primerLabel" id="lblSite">Site:</label><br />
                            <label class="primerLabel" id="lblConcepto">Concepto:</label><br />
                            <label class="primerLabel" id="lblParametro">Parámetro:</label><br />
                            <label class="primerLabel" id="lblMotivo">Motivo:</label>
                        </td>
                        <td>
                            <label id="SiteX"></label><br />
                            <label id="ConceptoX"></label><br />
                            <label id="ParametroX"></label><br />
                            <label id="MotivoX"></label>
                        </td>
                        <td>
                            <label class="primerLabel" id="lblConceptoMotivo">Concepto Motivo:</label><br />
                            <label class="primerLabel" id="lblResponsableCCMSID">Responsable de incidente:</label><br />
                            <label class="primerLabel" id="lblNombreRespo">Nombre responsable:</label><br />
                            <label class="primerLabel" id="lblPeriodoOP">Período original de pago:</label>
                        </td>
                        <td>
                            <label id="ConceptoMotivoX"></label><br />
                            <label id="ResponsableCCMSIDX"></label><br />
                            <label id="NombreRespoX"></label><br />
                            <label id="PeriodoOPX"></label>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    @*
        <div class="container-fluid">
            <div class="row">
                <table class="table" style="margin-bottom: 5px;">
                    <tbody>
                        <tr>
                            <td>
                                <div class="col-lg-3">
                                    <label>Folio de Solicitud:  </label>
                                    @(Html.Kendo().NumericTextBox().Name("FolioSolicitud")
                                    .Enable(false)
                                    .Spinners(false)
                                    .Decimals(0)
                                    .Format("0")
                                    .Min(0)
                                    .Events(e => e.Change("onChangeFolioSolicitud"))
                                    //.Value(string.IsNullOrEmpty(Model.FolioSolicitud.ToString()) ? "Nuevo" : Model.FolioSolicitud.ToString())
                                    .Value(Model.FolioSolicitud)
                                    .HtmlAttributes(new { style = "text-align:center;width: 6em;", maxlength = "10" })
                                    )
                                </div>
                                <div class="col-lg-4">
                                    <label>Periodo de nómina actual:  </label>
                                    @(Html.Kendo().DropDownList().DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetPeriodoNominaCMB", "CapturaSolicitud");
                                    }
                                    );
                                    //.ServerFiltering(true);
                                }
                                                        )
                                    .Filter("contains")
                                    .OptionLabel("- Seleccione Periodo de Nomina - ")
                                    .DataValueField("Ident")
                                    .DataTextField("Valor")
                                    .Name("PeriodoNomina_Id")
                                    .SelectedIndex(1)
                                    .Enable(false)
                                    .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                    )
                                </div>
                                <div class="col-lg-4">
                                    <label>Estatus</label>
                                    @(Html.Kendo().TextBox().Name("Estatus")
                                    .Enable(false)
                                    .Value(string.IsNullOrEmpty(Model.Estatus) ? "Nuevo" : Model.Estatus)
                                    )
                                    </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <p></p>
            <div class="row">
                <div class="col-lg-4">
                    @(Html.Kendo().Button().Icon("k-icon k-i-file-add").Name("Salvar").HtmlAttributes(new { StyleBundle = "width:15.4em;" }).Content("Crear nueva solicitud"))
                </div>
            </div>
        </div>
    *@
    <div class="container-fluid">
        <div id="Captura">
            <div class="row">
                <div class="col-lg-12">
                    <table class="table-responsive table" cellpadding="1" style="margin-bottom: 5px;">
                        <tr>
                            <th scope="col">
                                CCMSID
                            </th>
                            <th scope="col">
                                Concepto
                            </th>
                            <th scope="col">
                                Parámetro/Monto
                            </th>
                            <th scope="col">
                                Motivo
                            </th>
                            <th scope="col">
                                Concepto Motivo
                            </th>
                            <th scope="col">
                                Responsable de Incidente (CCMSID)
                            </th>
                            <th scope="col">
                                Período Original de Pago
                            </th>
                        </tr>
                        <tr>
                            <td>
                                <div id="mensajeroCCMSIDSolicitado">
                                    @(Html.Kendo().NumericTextBox()
                                    .Name("CCMSIDSolicitado")
                                    .Spinners(false)
                                    .Decimals(0)
                                    .Format("0.")
                                    .Min(0)
                                    .Events(e => e.Change("onChangeCCMSId"))
                                    //.Step(5)
                                    //.Value(0)
                                    .HtmlAttributes(new { style = "text-align:center;width: 9em;", maxlength = "10" })
                                    )
                                </div>
                            </td>
                            <td>
                                <div id="mensajeroConceptos">
                                    @(Html.Kendo().DropDownList().DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetConceptosxEmpleadoxSolicitanteCMB", "CapturaSolicitud").Data("parametrosConceptos"); ;
                                        }
                                        );
                                                    //.ServerFiltering(true);
                                    })
                                    .Filter("contains")
                                    .AutoBind(false)
                                    .OptionLabel("- Conceptos - ")
                                    .DataValueField("Ident")
                                    .DataTextField("Valor")
                                    .Name("Conceptos")
                                    .Events(e => e.Change("onChangeConceptos"))
                                    //.SelectedIndex(1)
                                    .Enable(true)
                                    .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                )
                                </div>
                            </td>
                            <td>
                                @(Html.Kendo().NumericTextBox()
                                    .Name("Parametro")
                                    .Events(e => e.Change("onChangeParametro"))
                                    .Spinners(false)
                                    .Decimals(2)
                                    .Format("0.00")
                                    .Min(0)
                                    //.Step(5)
                                    //.Value(0)
                                    .HtmlAttributes(new { style = "text-align:center;width: 9em", maxlength = "10" })
                                )
                            </td>
                            <td>
                                @(Html.Kendo().DropDownList().DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetMotivosCMB", "CapturaSolicitud");
                                        }
                                        );
                                                    //.ServerFiltering(true);
                                    })
                                    .Filter("contains")
                                    .OptionLabel("- Motivo - ")
                                    .DataValueField("Id")
                                    .DataTextField("Valor")
                                    .Name("Motivo")
                                    .Events(e => e.Change("onChangeMotivo"))
                                    //.SelectedIndex(1)
                                    .Enable(true)
                                    .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                )
                            </td>
                            <td>
                                @(Html.Kendo().DropDownList().DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetConceptosMotivosCMB", "CapturaSolicitud");
                                        });
                                                    //.ServerFiltering(true);
                                    })
                                    .Filter("contains")
                                    .OptionLabel("- Concepto Motivo - ")
                                    .DataValueField("Ident")
                                    .DataTextField("Valor")
                                    .Name("ConceptoMotivo")
                                    .Events(e => e.Change("onChangeConceptoMotivo"))
                                    //.SelectedIndex(1)
                                    .Enable(true)
                                    .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                )
                            </td>
                            <td>
                                @(Html.Kendo().NumericTextBox()
                                    .Name("CCMSIDIncidente")
                                    .Spinners(false)
                                    .Decimals(0)
                                    .Format("0.")
                                    .Min(0)
                                    .Events(e => e.Change("onChangeCCMSIdIncidente"))
                                    //.Step(5)
                                    //.Value(0)
                                    .HtmlAttributes(new { style = "text-align:center;width: 9em", maxlength = "10" })
                                )
                            </td>
                            <td>
                                @(Html.Kendo().DropDownList().DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetPeriodoNominaCerradosCMB", "CapturaSolicitud");
                                        });
                                                    //.ServerFiltering(true);
                                    })
                                    .Filter("contains")
                                    .OptionLabel("- Período Incidente - ")
                                    .DataValueField("Ident")
                                    .DataTextField("Valor")
                                    .Name("PeriodoIncidente")
                                    .Events(e => e.Change("onChangePeriodoIncidente"))
                                    //.SelectedIndex(1)
                                    .Enable(true)
                                    .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                )
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="col-lg-12">
                    <table class="table-responsive table" cellpadding="1" style="margin-bottom: 5px;">
                        <tr>
                            <td style="width : 8em">
                                @(Html.Kendo().Button().Name("AgregarSolicitud").Content("Agregar").Icon("add")
                                        .Events(x => x.Click("agregarSolicitud")).HtmlAttributes(new { style = "background-color:blue;color:white;font-weight:bold;", type = "button" })
                                //.Events(x => x.Click("agregaEmpleado"))
                                )
                            </td>
                            <td>
                                <div name="nivel" id="1">
                                    <label class="primerLabel" id="lblAutorizadorNivel1">        Autorizador     Nivel 1:</label>

                                    @(Html.Kendo().DropDownList().DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetEmpleadosPerfilAutorizadoresCMB", "CapturaSolicitud").Data("parametrosAutorizadores");
                                            });
                                        })
                                        .Filter("contains")
                                        .AutoBind(false)
                                        .OptionLabel("- Autorizador Nivel 1 - ")
                                        .DataValueField("Id")
                                        .DataTextField("Valor")
                                        .Name("AutorizadorNivel1")
                                        .Events(e => e.Change("onChangeAutorizadorNivel1"))
                                        //.SelectedIndex(1)
                                        .Enable(true)
                                        .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                    )
                                </div>
                            </td>
                            <td>
                                <div name="nivel" id="2">
                                    <label class="primerLabel" id="lblAutorizadorNivel2">    Nivel 2:</label>

                                    @(Html.Kendo().DropDownList().DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetEmpleadosPerfilAutorizadoresCMB", "CapturaSolicitud").Data("parametrosAutorizadores");
                                            });
                                        })
                                        .Filter("contains")
                                        .AutoBind(false)
                                        .OptionLabel("- Autorizador Nivel 2 - ")
                                        .DataValueField("Id")
                                        .DataTextField("Valor")
                                        .Name("AutorizadorNivel2")
                                        .Events(e => e.Change("onChangeAutorizadorNivel2"))
                                        //.SelectedIndex(1)
                                        .Enable(true)
                                        .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                    )
                                </div>
                            </td>
                            <td>
                                <div name="nivel" id="3">
                                    <label class="primerLabel" id="lblAutorizadorNivel3">    Nivel 3:</label>

                                    @(Html.Kendo().DropDownList().DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetEmpleadosPerfilAutorizadoresCMB", "CapturaSolicitud").Data("parametrosAutorizadores");
                                            });
                                        })
                                        .Filter("contains")
                                        .AutoBind(false)
                                        .OptionLabel("- Autorizador Nivel 3 - ")
                                        .DataValueField("Id")
                                        .DataTextField("Valor")
                                        .Name("AutorizadorNivel3")
                                        .Events(e => e.Change("onChangeAutorizadorNivel3"))
                                        //.SelectedIndex(1)
                                        .Enable(true)
                                        .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                    )
                                </div>
                            </td>
                            <td>
                                <div name="nivel" id="4">
                                    <label class="primerLabel" id="lblAutorizadorNivel4">    Nivel 4:</label>

                                    @(Html.Kendo().DropDownList().DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetEmpleadosPerfilAutorizadoresCMB", "CapturaSolicitud").Data("parametrosAutorizadores");
                                            });
                                        })
                                        .Filter("contains")
                                        .AutoBind(false)
                                        .OptionLabel("- Autorizador Nivel 4 - ")
                                        .DataValueField("Id")
                                        .DataTextField("Valor")
                                        .Name("AutorizadorNivel4")
                                        .Events(e => e.Change("onChangeAutorizadorNivel4"))
                                        //.SelectedIndex(1)
                                        .Enable(true)
                                        .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                    )
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="col-lg-12">
                    <table class="table-responsive table" cellpadding="1" style="margin-bottom: 5px;">
                        <tr>
                            <td style="width : 15em">
                                @(Html.Kendo().Button().Name("EnviarSolicitud").Content("Enviar solicitud").Icon("email")
                                .Events(x => x.Click("enviarSolicitud")).HtmlAttributes(new { style = "background-color:green;color:white;font-weight:bold;" })
                                )

                                @(Html.Kendo().Button().Name("CancelarEmpleadoSolicitud").Content("Cancelar").Icon("close")
                                .Events(x => x.Click("cancelarEmpleadoSolicitud")).HtmlAttributes(new { style = "background-color:red;color:white;font-weight:bold;" })
                                )
                            </td>
                            <td>
                                <div name="nivel" id="5">

                                    <label class="primerLabel" id="lblAutorizadorNivel5">        Autorizador     Nivel 5:</label>

                                    @(Html.Kendo().DropDownList().DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetEmpleadosPerfilAutorizadoresCMB", "CapturaSolicitud").Data("parametrosAutorizadores");
                                            });
                                        })
                                        .Filter("contains")
                                        .AutoBind(false)
                                        .OptionLabel("- Autorizador Nivel 5 - ")
                                        .DataValueField("Id")
                                        .DataTextField("Valor")
                                        .Name("AutorizadorNivel5")
                                        .Events(e => e.Change("onChangeAutorizadorNivel5"))
                                        //.SelectedIndex(1)
                                        .Enable(true)
                                        .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                    )
                                </div>
                            </td>
                            <td>

                                <div name="nivel" id="6">
                                    <label class="primerLabel" id="lblAutorizadorNivel6">     Nivel 6:</label>

                                    @(Html.Kendo().DropDownList().DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetEmpleadosPerfilAutorizadoresCMB", "CapturaSolicitud").Data("parametrosAutorizadores");
                                            });
                                        })
                                        .Filter("contains")
                                        .AutoBind(false)
                                        .OptionLabel("- Autorizador Nivel 6 - ")
                                        .DataValueField("Id")
                                        .DataTextField("Valor")
                                        .Name("AutorizadorNivel6")
                                        .Events(e => e.Change("onChangeAutorizadorNivel6"))
                                        //.SelectedIndex(1)
                                        .Enable(true)
                                        .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                    )
                                </div>
                            </td>
                            <td>


                                <div name="nivel" id="7">
                                    <label class="primerLabel" id="lblAutorizadorNivel7">     Nivel 7:</label>

                                    @(Html.Kendo().DropDownList().DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetEmpleadosPerfilAutorizadoresCMB", "CapturaSolicitud").Data("parametrosAutorizadores");
                                            });
                                        })
                                        .Filter("contains")
                                        .AutoBind(false)
                                        .OptionLabel("- Autorizador Nivel 7 - ")
                                        .DataValueField("Id")
                                        .DataTextField("Valor")
                                        .Name("AutorizadorNivel7")
                                        .Events(e => e.Change("onChangeAutorizadorNivel7"))
                                        //.SelectedIndex(1)
                                        .Enable(true)
                                        .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                    )
                                </div>
                            </td>
                            <td>

                                <div name="nivel" id="8">
                                    <label class="primerLabel" id="lblAutorizadorNivel8">     Nivel 8:</label>

                                    @(Html.Kendo().DropDownList().DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetEmpleadosPerfilAutorizadoresCMB", "CapturaSolicitud").Data("parametrosAutorizadores");
                                            });
                                        })
                                        .Filter("contains")
                                        .AutoBind(false)
                                        .OptionLabel("- Autorizador Nivel 8 - ")
                                        .DataValueField("Id")
                                        .DataTextField("Valor")
                                        .Name("AutorizadorNivel8")
                                        .Events(e => e.Change("onChangeAutorizadorNivel8"))
                                        //.SelectedIndex(1)
                                        .Enable(true)
                                        .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                    )
                                </div>
                            </td>
                        </tr>

                    </table>
                </div>
                <div class="col-lg-12">
                    <table class="table-responsive table" cellpadding="1" style="margin-bottom: 5px;">
                        <tr>
                            <td style="width : 6em"></td>
                            <td>
                                <div name="nivel" id="9">
                                    <label class="primerLabel" id="lblAutorizadorNivel9">     Autorizador Nivel 9:</label>

                                    @(Html.Kendo().DropDownList().DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetEmpleadosPerfilAutorizadoresCMB", "CapturaSolicitud").Data("parametrosAutorizadores");
                                            });
                                        })
                                        .Filter("contains")
                                        .AutoBind(false)
                                        .OptionLabel("- Autorizador Nivel 9 - ")
                                        .DataValueField("Id")
                                        .DataTextField("Valor")
                                        .Name("AutorizadorNivel9")
                                        .Events(e => e.Change("onChangeAutorizadorNivel9"))
                                        //.SelectedIndex(1)
                                        .Enable(true)
                                        .HtmlAttributes(new { required = "required", style = "text-align:center;width: 14em", validationMessage = "Este campo es requerido." })
                                    )
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>

            </div>
        </div>
    </div>
    
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                @(Html.Kendo().Grid<ASN.Models.CatSolicitudesSel_Result>()
                    .Name("gridSolicitud")
                    .Columns(column =>
                    {
                        column.Command(command => command.Custom("Editar").Text("<span class='k-icon k-i-edit'></span>").Click("editarEmpleadoSolicitud")).Title("Editar").Width(28).HtmlAttributes(new { style = "text-align: center;" });
                        column.Command(command => command.Custom("Borrar").Text("<span class='k-icon k-i-delete'></span>").Click("borrarEmpleadoSolicitud")).Title("Borrar").Width(28).HtmlAttributes(new { style = "text-align: center;" });
                        column.Command(command => command.Custom("Ver").Text("<span class='k-icon k-i-preview'></span>").Click("editarEmpleadoSolicitud")).Title("Ver").Width(28).HtmlAttributes(new { style = "text-align: center;" });
                        column.Bound(c => c.FolioSolicitud).Width(38).Title("Comentarios").ClientTemplate("<input class='k-button k-button-icontext comentarioss' style='text-align:center;' type='button' value='Comentarios' onclick='getComments(#=FolioSolicitud#,#=Ident#,#=ConceptoId#);' />").Filterable(false);
                        column.Bound(c => c.Ident).Width(40).Title("# Empleado").Filterable(false).Visible(true);
                        column.Bound(c => c.Nombre).Title("Nombre").Filterable(false).Visible(true).Width(70);
                        column.Bound(c => c.ConceptoDesc).Title("Concepto").Filterable(false).Width(70);
                        column.Bound(c => c.Monto).Title("Monto").Filterable(false).Width(70);
                        column.Bound(c => c.MotivosSolicitudDesc).Title("Motivo").Filterable(false).Width(70);
                        column.Bound(c => c.EstatusSolicitud).Title("Estatus").Filterable(false).Width(70);
                        column.Bound(c => c.Autorizador).Title("Autorizador Asignado").Filterable(false).Width(70);
                    })
                    .HtmlAttributes(new { style = "height: 425px;" })
                    .Scrollable()
                    .Sortable()
                    .Resizable(res => res.Columns(true))
                    .PersistSelection()
                    .AutoBind(false)
                    .Events(eve => eve.DataBound("onDataBound"))
                    //.Filterable(ftb => ftb.Mode(GridFilterMode.Row))
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .Model(model =>
                        {
                            model.Id(c => c.FolioSolicitud);
                            model.Field(c => c.Ident).Editable(true);
                            model.Field(c => c.Nombre).Editable(true);
                            model.Field(c => c.ConceptoId).Editable(true);
                            model.Field(c => c.ConceptoDesc).Editable(true);
                            model.Field(c => c.Monto).Editable(false);
                            model.Field(c => c.MotivosSolicitudId).Editable(true);
                            model.Field(c => c.MotivosSolicitudDesc).Editable(true);
                            model.Field(c => c.ConceptoMotivoId).Editable(true);
                            model.Field(c => c.ConceptoMotivoDesc).Editable(true);
                            model.Field(c => c.ResponsableId).Editable(true);
                            model.Field(c => c.PeriodoOriginalId).Editable(true);
                            model.Field(c => c.EstatusSolicitud).Editable(true);
                            model.Field(c => c.Autorizador_Ident).Editable(true);
                            model.Field(c => c.Autorizador).Editable(true);
                        })
                        .Read(read => read.Action("GetSolicitudes", "CapturaSolicitud").Data("getFolio"))
                    //.Update(update => update.Action("UpdatePerdiodoNomina", "PeriodoNomina").Type(HttpVerbs.Post))
                    //.Create(create => create.Action("CrearSolicitudPorEmpleado", "CapturaSolicitud").Type(HttpVerbs.Post))
                    )
                    .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                    .Navigatable()
                    .Pageable(pageable => pageable
                    .Refresh(true)
                    .PageSizes(true)
                    .ButtonCount(5)
                    .Numeric(true)
                    .PreviousNext(true)
                    .Messages(messages =>
                    {
                        messages.ItemsPerPage("Registros por página");
                        messages.Empty("Sin información para mostrar");
                        messages.First("Primera");
                        messages.Page("Página");
                        messages.Last("Última");
                        messages.Previous("Anterior");
                        messages.Next("Siguiente");
                        messages.Refresh("Actualizar");
                        messages.Of("De");
                        messages.MorePages("Mas páginas");
                        messages.Display("{0} a {1} de {2}");
                    })
                    )
                )
            </div>
        </div>
    </div>

    @(Html.Kendo().Window()
        .Name("Comentarios")
        .Title("Comentarios")
        .Content("loading user info...")
        //.LoadContentFrom("GetComments", "MisReferidos")
        .Iframe(true)
        .Actions(a => a
            //.Minimize()
            .Maximize()
            .Close()
        )
        .Resizable()
        .Draggable()
        .Width(470)
        .Height(530)
        .Visible(false)
        .Modal(true)
    )

    @(Html.Kendo().Dialog()
        .Name("dialog")
        .Title("Advertencia")
        .Content("<p><strong>Se va cancelar la solicitud...</strong></p><p><strong>Deseas continuar?</strong></p>")
        .Width(400)
        .Modal(true)
        .Animation(true)
        .Visible(false)
        .Actions(actions =>
        {
            actions.Add()
            .Text("Cancel")
            .Action("onCancel");
            actions.Add().Text("OK")
            .Primary(true)
            .Action("onOK");
        })
    )

    
    @(Html.Kendo().Notification()
        .Name("popupNotificationCom")
        .Position(p => p.Pinned(true).Top(30).Right(30))
        .Stacking(NotificationStackingSettings.Down)
        .Events(e => e.Show("onShow"))
    //.HtmlAttributes( new { @style = "background:rgba(0%,60%,0%,.7);color:white;"})
    )

    <script>
                @*var urlCrearSolicitud = '@Url.Action("CreateSolicitud", "Solicitudes")';*@
                var urlSolicitudEmpleados = '@Url.Action("GuardaEmpleados", "Solicitudes")';
                var urlDefault = '@Url.Action("Index", "Solicitudes")';
                var urlGridEmpleadosAutorizadores = '@Url.Action("GridEmpleadosAutorizantes", "EmpleadosSolicitudes")';
    </script>

    <script>
        //var listaEmpleados = "";
        //var selectedEmpleados = new Array();
        var grid = $('#grid');
        //var urlDeletePerfilEmpleadosAccesos = '@Url.Action("DeleteEmpleados", "CapturaSolicitud")';

        //Sección de Edición de Solicitud
        var dataItem_FolioSolicitud = "";
        var dataItem_Ident = "";
        var dataItem_Nombre = "";
        var dataItem_ConceptoId = "";
        //dataItem_ConceptoDesc = dataItem.
        var dataItem_Monto = "";
        var dataItem_MotivosSolicitudId = "";
        //dataItem_MotivosSolicitudDesc = dataItem.
        var dataItem_ConceptoMotivoId = "";
        //dataItem_ConceptoMotivoDesc = dataItem.
        var dataItem_ResponsableId = "";
        //dataItem_NombreResponsable = dataItem.
        var dataItem_PeriodoOriginalId = "";
        var dataItem_EstatusId = "";
        //dataItem_EstatusSolicitud = dataItem.
        //dataItem_NivelAutorizacion1 = dataItem.
        var dataItem_AutorizadorNivel1 = "";
        //dataItem_NivelAutorizacion2 = dataItem.
        var dataItem_AutorizadorNivel2 = "";
        //dataItem_NivelAutorizacion3 = dataItem.
        var dataItem_AutorizadorNivel3 = "";
        //dataItem_NivelAutorizacion4 = dataItem.
        var dataItem_AutorizadorNivel4 = "";
        //dataItem_NivelAutorizacion5 = dataItem.
        var dataItem_AutorizadorNivel5 = "";
        //dataItem_NivelAutorizacion6 = dataItem.
        var dataItem_AutorizadorNivel6 = "";
        //dataItem_NivelAutorizacion7 = dataItem.
        var dataItem_AutorizadorNivel7 = "";
        //dataItem_NivelAutorizacion8 = dataItem.
        var dataItem_AutorizadorNivel8 = "";
        //dataItem_NivelAutorizacion9 = dataItem.
        var dataItem_AutorizadorNivel9 = "";
        //dataItem_Active = dataItem.


                //Datos a extraer Empleado - Puesto - Contrato - Site
                var EmpCCMSId = "";
                var EmpNombre = "";
                var EmpPuestoId = "";
                var EmpPuesto = "";
                var EmpContratoId = "";
                var EmpContrato = "";
                var EmpSiteId = "";
                var EmpSite = "";

                // Sección Empleado - Puesto
                var EmpPosition_Code_Ident = "";
                var EmpPosition_Code_Title = "";
                var EmpContract_Type_Ident = "";
                var EmpContract_Type = "";
                var EmpLocation_Ident = "";
                var EmpLocation_Name = "";
                var EmpActive = "";
                var EmpCCMSIdManager = "";
                var EmpNombreManager = "";

                // Sección Conceptos - Parámetro - Conceptos - Valor
                var ConConceptoIdent = ""
                var ConConceptoNombre = ""
                var ConParametroId = ""
                var ConParametroNombre = ""
                var ConParametroConceptoMonto = ""
                var ConNivelesAutorizacion = ""

                // Sección Responsable de Incidente
                var CCMSIdResponsable = "";
                var NombreResponsableIncidente = "";

                // Sección alta de Empleados - Solicitudes
                var FolioSolicitud = -1
                var Fecha_Solicitud = ""
                var Solicitante_Ident = ""

                //Sección alta de
                var conceptoMotivoId = ""
                var responsableId = ""
                var periododOriginalId = ""
                var ConMotivoNombre = "";
                var ConMotivoIdent = "";

                //Datos a extraer Perfil - Tipo de Acceso
                var nivel = "";
                var Active = "";
                var Error = "";

                // Autorizadores
                var autorizadorNivel1 = "";
                var autorizadorNivel2 = "";
                var autorizadorNivel3 = "";
                var autorizadorNivel4 = "";
                var autorizadorNivel5 = "";
                var autorizadorNivel6 = "";
                var autorizadorNivel7 = "";
                var autorizadorNivel8 = "";
                var autorizadorNivel9 = "";

        // Datos de Estatus de Solicitud
        var DescripcionEstatusSolicitud = "";
        var ClaveEstatusSolicitud = "";
        var ClaveEstatusEmpleadoSolicitud = "";

        // URL para consultar datos de Empleado
        var urlEmpleadoPuesto = '@Url.Action("GetEmpleadoPuesto", "CapturaSolicitud")';

        //
        var urlEmpleadoxSolicitante = '@Url.Action("GetEmpleadoxSolicitante", "CapturaSolicitud")';

        //
        var urlConceptoParametroConcepto = '@Url.Action("GetConceptoParametroConcepto", "CapturaSolicitud")';

        //
        var urlPerfilTipoAcceso = '@Url.Action("GetPerfilTipoAcceso", "PerfilEmpleadosAccesos")';

        // Liga para crear Solicitud
        var urlCrearSolicitud = '@Url.Action("CreateSolicitud", "CapturaSolicitud")';

        // Liga para enviar solicitud a Autorizadores
        var urlEnviaSolicitud = '@Url.Action("EnviaSolicitud", "CapturaSolicitud")';

        //
        var urlUpdateEmpleadoSolicitud = '@Url.Action("UpdateEmpleadoSolicitud", "CapturaSolicitud")';

        //
        var urlCrearEmpleadoSolicitud = '@Url.Action("CreateEmpleadoSolicitud", "CapturaSolicitud")';

        //
        var urlEmpleadoSolicitud = '@Url.Action("CreateEmpleadoSolicitud", "CapturaSolicitud")';

        // Función para calcular Estatus de Solicitud
        var urlConsultarEstatusSolicitud = '@Url.Action("ConsultarEstatusSolicitud", "CapturaSolicitud")';

        // Función para calcular...
        var urlGetEmpleadosPerfilAutorizadores = '@Url.Action("GetEmpleadosPerfilAutorizadoresCMB", "CapturaSolicitud")';

        // URS Niveles de Autorización por Empleado y Concepto
        var urlNivelesAutorizacionxEmpleadoxConcepto = '@Url.Action("GetNivelesAutorizacionxEmpleadoxConcepto", "CapturaSolicitud")';

        //
        var urlCancelaSolicitud = '@Url.Action("CancelaSolicitud", "CapturaSolicitud")';

        //
        var urlSolicitudAutorizantes = '@Url.Action("GetAutorizadores", "CapturaSolicitud")';

                //debugger;
                //var urlSolicitud = grid.selectedKeyNames().join(", ");

        var urlMisSolicitudes = '@Url.Action("Index", "MisSolicitudes")'
    </script>
}
else
{
    <script type="text/javascript">
        $(function () {
            window.location.href = "@Url.Action("Index","Inicio", new { area = "" }, null)";
        });
    </script>
}

<script>
    var InfoCCMSID = '@Url.Action("GetUserInfo","CapturaSolicitud")';

    function getComments(a,b,c) {

        var dialog = $("#Comentarios").data("kendoWindow");

        dialog.refresh({
            url: '@Url.Action("GetComments", "Comentarios")/?folioId=' + a + '&eid=' + b + '&conceptoId=' + c,
        });

        dialog.center().open();
    }
</script>

@Scripts.Render("~/bundles/CapturaSolicitud")