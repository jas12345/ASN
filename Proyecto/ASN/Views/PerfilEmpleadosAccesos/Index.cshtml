
@{
    ViewBag.Title = "Index";
}

@if (User.Identity.IsAuthenticated)
{
    <div>
        <div class="row">
            <div id="tab1">
                <div>
                    <div class="row">
                        <div class="col-lg-4 col-md-4">
                            @*<div class="row">
                            </div>*@
                            @Html.Label("X    Seleccion de Perfil - Accesos", new { style = "font-size: 15px" })
                        </div>
                        <div class="col-lg-4 col-md-4">
                            @*<div class="row">
                            </div>*@
                            <div>@Html.Label("    Seleccion de Empleado", new { style = "font-size: 15px" })</div>
                        </div>
                        <div class="col-lg-4 col-md-4">
                            <p><b>Accesos:</b> Solicitantes </p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-4 col-md-4" style="padding:5px;">
                            <div class="k-form-field">
                                <div class="editor-field">
                                    @(Html.Kendo().DropDownList()
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetPerfilCMB", "PerfilEmpleadosAccesos");
                                            })
                                            .ServerFiltering(true);
                                        })
                                        .Filter("contains")
                                        .OptionLabel("- Seleccione perfil de empleados- ")
                                        .DataValueField("Ident")
                                        .DataTextField("Valor")
                                        .Name("PerfilUsuarioId")
                                        .HtmlAttributes(new { required = "required", style = "text-align:center;width: 22.4em", validationMessage = "Este campo es requerido." })
                                    )
                                </div>
                            </div>
                        </div>
                        <div class="k-form-inline, col-lg-4 col-md-4" style="padding:5px;">
                            <div class="k-form-field">
                                <div class="editor-field">
                                    @(Html.Kendo().TextBox()
                                        .Name("CCMSId")
                                        .HtmlAttributes(new { required = "required", style = "text-align:center;width: 13em" })
                                    )
                                    <button id="Agregar" type="button" data-role="button" class="k-button k-button-icontext k-primary" onclick="actualizaGrid;" role="button" aria-disabled="false" tabindex="0">
                                        <span class="k-icon k-i-save"></span> Agregar
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-4 col-md-4"></div>
                        <div class="col-lg-8 col-md-8"><p><b>Empleado:</b> Hecto Guillermo Ramos, <b>Puesto:</b> Trainer - Bilingual, <b>Supervisor:</b> Sergio Alberto Rodríguez <br /></p><p></p></div>
                    </div>
                            @*<div class="col-lg-4 col-md-4">
                                <div style="display: inline-block;">@Html.Label("Seleccion de Empleado", new { style = "font-size: 15px" })</div>
                            </div>*@

                </div>

                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12">
                        @(Html.Kendo().Grid<ASN.Models.CatPerfilEmpleadosAccesosSel_Result>()
                                            .Name("grid")
                                            .Columns(column =>
                                            {
                                                        //column.Select().Width(7).HtmlAttributes(new { style = "text-align:center" });//.ClientTemplate("#:PerfilEmpleadoAcceso_Activo == 1  ? '- Todos -' : Concepto #");
                                                        //column.Command(command => { command.Custom("Borrar").Text("<span class='k-icon k-i-edit'></span> Borrar").Click("BorraEmpleadoAcceso"); }).Width(15);
                                                        //column.Command(command => { command.Edit().Text("Borrar"); }).Width(15);
                                                        column.Command(command => command.Custom("DELETE").Text("<span class='k-icon k-i-delete'></span>Borrar").Click("borrarAcceso")).Width(15).HtmlAttributes(new { style = "text-align: center;" });
                                                        //column.Command(command => command.Custom("Borrar").Text("<span class='k-icon k-i-delete'></span>Borrar").Click("borrarAcceso")).Width(75).HtmlAttributes(new { style = "text-align: center;" });
                                                        column.Bound(c => c.Ident).Width(40).Title("CCMS Id").Visible(true).Filterable(true);
                                                column.Bound(c => c.Nombre).Width(50).Title("Nombre").Filterable(true);
                                                column.Bound(c => c.Position_Code_Title).Width(50).Title("Puesto").Filterable(true);
                                                        //column.Bound(c => c.PerfilEmpleadoAcceso_Activo).Title("PerfilEmpleadoAcceso_Activo").Visible(false).Filterable(false).Width(50);//.ClientTemplate("#:PerfilEmpleadoAcceso_Activo  ? 'Si' : 'No' #");
                                                    })
                                            .HtmlAttributes(new { style = "height: 445px;" })
                                            .Scrollable(sorteable => sorteable.Virtual(false))
                                            .Sortable()
                                            .Resizable(c => c.Columns(true))
                                            .PersistSelection()
                                            //.Events(eve => eve.SaveChanges("onSave").Edit("edit"))
                                            //.Events(eve => eve.SaveChanges("onSave"))
                                            .Events(
                                                events => events
                                                .Change("onChange")
                                                .DataBound("onDataBound")
                                            )
                                            .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
                                            .DataSource(dataSource => dataSource
                                                .Ajax()
                                                .Model(model =>
                                                {
                                                    model.Id(c => c.Ident);
                                                    model.Field(c => c.Nombre);
                                                    model.Field(c => c.PerfilEmpleadoAcceso_Activo);
                                                })
                                                .Read(read => read.Action("GetPerfilEmpleadosAccesos", "PerfilEmpleadosAccesos").Data("GetPerfil"))
                                                .Update(update => update.Action("UpdatePerfilEmpleadosAccesos", "PerfilEmpleadosAccesos").Type(HttpVerbs.Post))
                                            .Events(ev => ev.Error("errorsote").RequestEnd("valida"))
                                            )
                                            .Navigatable()
                                            .Pageable(pageable => pageable
                                            .Refresh(true)
                                            .PageSizes(true)
                                            .ButtonCount(5)
                                            .Numeric(true)
                                            .PreviousNext(true)
                                            .Messages(messages =>
                                            {
                                                messages.ItemsPerPage("Registros por página");
                                                messages.Empty("Sin información para mostrar");
                                                messages.First("Primera");
                                                messages.Page("Página");
                                                messages.Last("Última");
                                                messages.Previous("Anterior");
                                                messages.Next("Siguiente");
                                                messages.Refresh("Actualizar");
                                                messages.Of("De");
                                                messages.MorePages("Mas páginas");
                                                messages.Display("{0} a {1} de {2}");
                                            })
                                            )
                        )
                    </div>
                    <script>
                        var listaEmpleados = "";
                        var selectedEmpleados = new Array();
                        var grid = $('#grid');
                        //debugger;

                        //var urlSolicitud = grid.selectedKeyNames().join(", ");
                    </script>
                </div>
                        @*<div class="row">
            <div class="k-form-field" style="float:right; margin-right:15px;">
                <button id="Guardar" type="button" data-role="button" class="k-button k-button-icontext" onclick="accion(4);" role="button" aria-disabled="false" tabindex="0">
                    <span class="k-icon k-i-save"></span>Guardar
                </button>
            </div>
        </div>*@
                    @*</div>*@
            </div>
        </div>
    </div>
    <script>
        var listaEmpleados = "";
        var selectedEmpleados = new Array();
        var grid = $('#grid');
        var urlDeletePerfilEmpleadosAccesos = '@Url.Action("DeletePerfilEmpleadosAccesos", "PerfilEmpleadosAccesos")';
        //debugger;
        //var urlSolicitud = grid.selectedKeyNames().join(", ");
    </script>
}
else
{
    <p>You are not logged in</p>
}

@Scripts.Render("~/bundles/PerfilEmpleadosAccesos")

