
@{
    ViewBag.Title = "MesesNomina";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (User.Identity.IsAuthenticated)
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <label>Catálogo Meses de Nómina</label>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                @(Html.Kendo().Grid<ASN.Models.CatMesesNominaSel_Result>()
                                .Name("grid")
                                .Columns(columns =>
                                {
                                    columns.Bound(c => c.AnioMesId).Title("AñoMesId").Visible(true).Filterable(false).Width(50);
                                    columns.ForeignKey(c => c.AnioId, (System.Collections.IEnumerable)ViewData["AniosCMB"], "Ident", "Valor").Title("Año").Visible(true).Filterable(false).Width(50);
                                    columns.ForeignKey(c => c.MesId, (System.Collections.IEnumerable)ViewData["MesCMB"], "Ident", "Valor").Title("Mes").Visible(true).Filterable(false).Width(50);
                                    columns.Bound(c => c.FechaInicio).Width(150).Title("Fecha Inicio").Format("{0:yyyy-MM-dd}").Filterable(false);
                                    columns.Bound(c => c.FechaCierre).Width(150).Title("Fecha Cierre").Format("{0:yyyy-MM-dd}").Filterable(false);
                                    columns.Bound(c => c.Active).Width(50).Title("Activo").Filterable(false).ClientTemplate("#:Active  ? 'Si' : 'No' #");
                                    columns.Command(command => { command.Edit().Text("Editar").UpdateText("Guardar").CancelText("Cancelar"); }).Width(75);
                                }
                                )
                                .ToolBar(toolBar =>
                                {
                                    toolBar.Create().Text("Nuevo");
                                //toolBar.Save();
                                toolBar.Excel().Text("Exportar a excel");
                                }
                                )
                                .Excel(ex => ex.AllPages(true))
                                .HtmlAttributes(new { style = "height: 700px;" })
                                .Scrollable(sorteable => sorteable.Virtual(false))
                                .Sortable()
                                .Resizable(c => c.Columns(true))
                                //.Editable(editable => editable.Mode(GridEditMode.InCell))
                                .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("MesNominaPopUp"))
                                .Events(eve => eve.SaveChanges("onSave").Edit("edit"))
                                .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .Batch(true)
                                    .ServerOperation(false)
                                    .Model(model =>
                                    {
                                        model.Id(c => c.AnioMesId);
                                        model.Field(c => c.AnioId);
                                        model.Field(c => c.MesId);
                                        model.Field(c => c.FechaInicio).Editable(false);
                                        model.Field(c => c.FechaCierre).Editable(true);
                                        model.Field(c => c.Active).Editable(true).DefaultValue(true);
                                    })
                                    .Read(read => read.Action("GetMesesNomina", "Nomina"))
                                    .Update(update => update.Action("UpdateMesNomina", "Nomina").Type(HttpVerbs.Post).Data("accionado"))
                                    .Create(create => create.Action("CreateMesNomina", "Nomina").Type(HttpVerbs.Post).Data("accionado"))
                                    .PageSize(10)
                                .Events(ev => ev.Error("errorsote").RequestEnd("hola"))
                                )
                                .Navigatable()
                                .Pageable(pageable => pageable
                                    .Refresh(true)
                                    .PageSizes(true)
                                    .ButtonCount(5)
                                    .Numeric(true)
                                    .PreviousNext(true)
                                .Messages(messages =>
                                {
                                    messages.ItemsPerPage("Registros por página");
                                    messages.Empty("Sin información para mostrar");
                                    messages.First("Primera");
                                    messages.Page("Página");
                                    messages.Last("Última");
                                    messages.Previous("Anterior");
                                    messages.Next("Siguiente");
                                    messages.Refresh("Actualizar");
                                    messages.Of("De");
                                    messages.MorePages("Mas páginas");
                                //messages.Display("Prueba");
                                messages.Display("{0} a {1} de {2}");
                                })
                                )
                )
            </div>
        </div>
    </div>

    <script>
        var urlFechasAnio = '@Url.Action("GetFechasAnio","Nomina")';
    </script>
}
else
{
    <p>You are not logged in</p>
}

@Scripts.Render("~/bundles/MesesNomina")