/*
Deployment script for ASN

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
--:setvar DatabaseName "ASN"
--:setvar DefaultFilePrefix "ASN"
--:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
--:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
--:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
--:setvar __IsSqlCmdEnabled "True"
--GO
--IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
--    BEGIN
--        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
--        SET NOEXEC ON;
--    END


GO
USE [ASN];


GO
PRINT N'Creating [app620].[RelPerfilEmpleadosClientes]...';


GO
CREATE TABLE [app620].[RelPerfilEmpleadosClientes] (
    [Perfil_Ident] INT NOT NULL,
    [Client_Ident] INT NOT NULL,
    CONSTRAINT [PK_RelPerfilEmpleadosClientes] PRIMARY KEY CLUSTERED ([Perfil_Ident] ASC, [Client_Ident] ASC)
);


GO
PRINT N'Altering [app620].[AutorizadoresxEmpleadoxConceptoCMB]...';


GO
ALTER PROCEDURE [app620].[AutorizadoresxEmpleadoxConceptoCMB]
(
	  @EmpleadoIdent INT = 0
	 ,@ConceptoId INT = 0
)
AS

BEGIN
	SET @ConceptoId = ISNULL(@ConceptoId, 0)

	SELECT DISTINCT 
		 PEA.EmpleadoId Id
		,Aut.Nombre		Valor
		--, PE.ConceptoId
	FROM
		 CatPerfilEmpleadosAccesos PEA
	JOIN
		CatPerfilEmpleados PE
	ON
		PE.Perfil_Ident = PEA.Perfil_Ident
	JOIN
		app620.RelPerfilEmpleadosConceptos REC
	ON
		REC.Perfil_Ident = PE.Perfil_Ident
	AND
		REC.ConceptoId	= ISNULL(NULLIF(@ConceptoId,0),REC.ConceptoId)
	JOIN
		CatConceptos C
	ON
		C.ConceptoId	= REC.ConceptoId
	JOIN 
		[app620].[CatEmployeeCCMSVw] Aut
	ON 
		Aut.Ident		= PEA.EmpleadoId
	JOIN 	 
		[app620].[CatEmployeeCCMSVw] Emp
	ON 
		Emp.Ident		= @EmpleadoIdent
	AND	(PE.Country_Ident = Emp.Country_Ident OR PE.Country_Ident = -1)
	AND	(PE.Location_Ident = Emp.Location_Ident OR PE.Location_Ident = -1)
	--AND	(PE.Client_Ident = Emp.Client_Ident OR PE.Client_Ident = -1)
	AND	(PE.Program_Ident = Emp.Program_Ident OR PE.Program_Ident = -1)
	AND (PE.Contract_Type_Ident = Emp.Contract_Type_Ident OR PE.Contract_Type_Ident = -1)
	JOIN [app620].[CatRelLocationBiosCCMSVw] BiosCity 
	ON (BiosCity.location_bios = PE.City_Ident  OR PE.City_Ident = -1)
	AND (BiosCity.location_ccms = Emp.Location_Ident)

	--Adecuación de MultiCliente en RelPerfilEmpleadosClientes
	JOIN app620.RelPerfilEmpleadosClientes RECli
	ON
		RECli.Perfil_Ident = PE.Perfil_Ident
	AND	
		RECli.Client_Ident = Emp.Client_Ident

	WHERE 
		PEA.Active		= 1
	AND	PE.TipoAccesoId	= 2	--El perfil es de Autorizadores
	AND PE.Active		= 1
	AND C.Active		= 1	
END
GO
PRINT N'Altering [app620].[AutorizadoresxPerfilSolicitanteCMB]...';


GO
ALTER PROCEDURE [app620].[AutorizadoresxPerfilSolicitanteCMB]
(
	 @Perfil_Ident			INT = -1
)
AS

BEGIN

	SELECT
			@Perfil_Ident			= ISNULL(@Perfil_Ident, -1)

	SELECT DISTINCT 
		   PerfEmpAccesos.EmpleadoId	Id
		 , EmpAutorizante.Nombre		Value
	FROM
		[app620].[CatPerfilEmpleados] EmpSolicita
	JOIN
		app620.RelPerfilEmpleadosConceptos REC_S
	ON
		REC_S.Perfil_Ident = EmpSolicita.Perfil_Ident
	JOIN
		[app620].[CatPerfilEmpleados] EmpAutoriza
	ON
		(EmpSolicita.Country_Ident			= EmpAutoriza.Country_Ident			OR EmpAutoriza.Country_Ident = -1)
	AND
		(EmpSolicita.City_Ident				= EmpAutoriza.City_Ident			OR EmpAutoriza.City_Ident = -1)
	--AND
	--	(EmpSolicita.Company_Ident			= EmpAutoriza.Company_Ident			OR EmpAutoriza.Company_Ident = -1)
	AND
		(EmpSolicita.Location_Ident			= EmpAutoriza.Location_Ident		OR EmpAutoriza.Location_Ident = -1)
	--AND
	--	(EmpSolicita.Client_Ident			= EmpAutoriza.Client_Ident			OR EmpAutoriza.Client_Ident = -1)
	AND
		(EmpSolicita.Program_Ident			= EmpAutoriza.Program_Ident			OR EmpAutoriza.Program_Ident = -1)
	AND
		(EmpSolicita.Contract_Type_Ident	= EmpAutoriza.Contract_Type_Ident	OR EmpAutoriza.Contract_Type_Ident = -1)
	JOIN
		app620.RelPerfilEmpleadosConceptos REC_A
	ON
		REC_A.Perfil_Ident = EmpAutoriza.Perfil_Ident
	AND
		REC_S.ConceptoId = REC_A.ConceptoId
	JOIN
		[app620].[CatPerfilEmpleadosAccesos] PerfEmpAccesos
	ON
		PerfEmpAccesos.Perfil_Ident = EmpAutoriza.Perfil_Ident
	JOIN
		[app620].[CatEmployeeCCMSVw] EmpAutorizante
	ON
		EmpAutorizante.Ident = PerfEmpAccesos.EmpleadoId

	--Adecuación de MultiCliente en RelPerfilEmpleadosClientes
	JOIN app620.RelPerfilEmpleadosClientes RECliSol
	ON
		RECliSol.Perfil_Ident = @Perfil_Ident
	AND	
		RECliSol.Client_Ident = EmpSolicita.Client_Ident

	JOIN app620.RelPerfilEmpleadosClientes RECliAut
	ON
		RECliAut.Perfil_Ident = @Perfil_Ident
	AND	
		RECliAut.Client_Ident = EmpSolicita.Client_Ident

	WHERE
		(EmpSolicita.Perfil_Ident = @Perfil_Ident OR @Perfil_Ident = -1)
	AND
		EmpAutoriza.TipoAccesoId = 2
	AND
		EmpAutoriza.Active = 1
	--AND 
		--Emp.Position_Code_Title NOT LIKE 'agent%' 
		--Emp.Position_Code_Title NOT LIKE 'becario%'
END
GO
PRINT N'Altering [app620].[CatClientBySiteCMB]...';


GO
ALTER PROC [app620].[CatClientBySiteCMB]
		 @Country INT = NULL
		,@CityId INT = NULL
		,@SiteId INT = NULL
		--,@ClientId INT = NULL
		--,@ProgramId INT = NULL
		--,@CrontactId INT = NULL
AS
BEGIN
	SET @Country	= ISNULL(NULLIF(@Country,0),-1)
	SET @CityId		= ISNULL(NULLIF(@CityId,0),-1)
	SET @SiteId		= ISNULL(NULLIF(@SiteId,0),-1)
	--SET @ClientId = NULLIF(NULLIF(@ClientId,0),-1)
	--SET @ProgramId = NULLIF(NULLIF(@ProgramId,0),-1)
	--SET @CrontactId = NULLIF(NULLIF(@CrontactId,0),-1)

	SELECT	DISTINCT
			 [Client_Ident]	As Id
			,[Client_Name]	As Value
	FROM	app620.CatEmployeeCCMSVw Emp WITH(NOLOCK)
			JOIN [ITAL].[app012].[RelLocationBiosCCMSVw] LocBios WITH(NOLOCK) 
	ON		emp.Location_Ident		= LocBios.location_ccms
	AND		(LocBios.location_bios	= @CityId	OR @CityId	= -1)
	WHERE	(Emp.country_ident		= @Country	OR @Country	= -1)
	AND		(Location_Ident			= @SiteId	OR @SiteId	= -1)
	--AND Program_Ident = ISNULL(@ProgramId,Program_Ident)
	--AND Client_Ident = ISNULL(@ClientId,Client_Ident)
	--AND Contract_Type_Ident = ISNULL(@CrontactId,Contract_Type_Ident)
	UNION
	SELECT
		 -1 AS Id
		,'- Todos -' AS Value
	ORDER BY Value
END
GO
PRINT N'Altering [app620].[CatConceptosPaisClienteCMB]...';


GO
ALTER PROC [app620].[CatConceptosPaisClienteCMB]
	 @Perfil INT = 0
	,@PaisId INT = NULL
	,@ClienteId VARCHAR(2000) = ''
AS
BEGIN

	SET @PaisId = ISNULL(NULLIF(@PaisId,0),-1)
	SET @Perfil = ISNULL(NULLIF(@Perfil,0),-1)
	--SET @ClienteId = NULLIF(NULLIF(@ClienteId,0),-1)

	--------IF @Perfil = 0 
		BEGIN
			SELECT -1 AS Ident, '- Todos -' AS Valor
			UNION ALL
			SELECT DISTINCT
				 CC.[ConceptoId] As Ident
				,CC.[Descripcion] As Valor
			FROM [app620].[CatConceptos] CC
			JOIN [app620].[RelPerfilEmpleadosConceptos] PEC ON
				PEC.ConceptoId = CC.ConceptoId
				AND (PEC.Perfil_Ident = @Perfil OR @Perfil = -1)
				AND (CC.PaisId = @PaisId OR @PaisId = -1)
				AND CC.Active = 1
			JOIN [app620].[RelPerfilEmpleadosClientes] PECli ON
				PECli.Perfil_Ident = PEC.Perfil_Ident
				AND (PECli.Client_Ident	IN
						(
							SELECT	item Client_Ident 
							FROM	fnSplit(@ClienteId, ',')
						) 
					OR 
						@ClienteId = '-1'
				)
				
			ORDER BY Valor
		END
	--------ELSE
	--------	BEGIN

	--------		SELECT -1 AS Ident, '- Todos -' AS Valor
	--------		UNION ALL
	--------		SELECT DISTINCT
	--------			 CC.[ConceptoId] As Ident
	--------			,CC.[Descripcion] As Valor
	--------		FROM [app620].[CatConceptos] CC
	--------		LEFT JOIN [app620].[CatPerfilEmpleados] CP ON CP.[ConceptoId] = CC.ConceptoId
	--------		WHERE CC.Active = 1 AND  (@Perfil IS NULL OR CP.Perfil_Ident = @Perfil)
	--------			AND @PaisId IN (SELECT item FROM fnSplit(CC.PaisId, ','))
	--------			--AND ClienteId IN (ISNULL(@ClienteId,ClienteId), -1)
	--------			AND (ClienteId	IN
	--------					(
	--------						SELECT	item Client_Ident 
	--------						FROM	fnSplit(@ClienteId, ',')
	--------					) 
	--------						OR 
	--------							@ClienteId = '-1'
	--------					)

	--------		ORDER BY Valor
	--------	END
END
GO
PRINT N'Altering [app620].[CatConceptosxEmpleadoxSolicitanteCMB]...';


GO
ALTER PROCEDURE [app620].[CatConceptosxEmpleadoxSolicitanteCMB]
(
	  @Ident				INT = -1
	 ,@Ident_Solicitante	INT = -1
)
AS

BEGIN
	SELECT
			@Ident			= ISNULL(@Ident, -1)

	SELECT 
		 DISTINCT CC.ConceptoId As Ident
		,CC.Descripcion As Valor

		--CC.ClienteId, Perfil.Client_Ident,
		--CC.ConceptoId, Perfil.ConceptoId,

		--'Empleado' Empleado, Emp.*, 'Perfil' Perfil, Perfil.*, 'LocBIOS' LocBIOS, LocBIOS.*, 'Perfil Accesos' PerfilAccesos, PEA.*
		--,'Conceptos' Conceptos, CC.*

	FROM	
		app620.CatEmployeeCCMSVw Emp
	JOIN 
		app620.CatPerfilEmpleados Perfil
	ON	
		(Emp.country_ident			= Perfil.Country_Ident			OR	Perfil.Country_Ident		= -1)
	AND (Emp.Location_Ident			= Perfil.Location_Ident			OR	Perfil.Location_Ident		= -1)
	--AND (Emp.Client_Ident			= Perfil.Client_Ident			OR	Perfil.Client_Ident			= -1)
	AND (Emp.Program_Ident			= Perfil.Program_Ident			OR	Perfil.Program_Ident		= -1)
	AND (Emp.Contract_Type_Ident	= Perfil.Contract_Type_Ident	OR	Perfil.Contract_Type_Ident	= -1)
	AND Emp.Ident = @Ident

	JOIN [app620].[CatRelLocationBiosCCMSVw] LocBIOS
	ON
		LocBIOS.location_ccms = Emp.Location_Ident
	AND
		(LocBIOS.location_bios			= Perfil.City_Ident				OR	Perfil.City_Ident			= -1)

	JOIN CatPerfilEmpleadosAccesos PEA							--Sección que conecta con los Perfiles asociados a permisos del solicitante
	ON	
		PEA.Perfil_Ident				= Perfil.Perfil_Ident
	AND
		PEA.EmpleadoId					= @Ident_Solicitante	-- Id Solicitante
	AND 
		Perfil.TipoAccesoId				= 1						--Tipo de acceso Solicitantes
	AND
		PEA.Active						= 1						-- Permiso activo para solicitante
	
	JOIN
		 app620.CatConceptos AS CC
	--ON
	--	(Emp.country_ident IN (SELECT Ident country_ident FROM fnSplit(CC.PaisId, ',')) OR CC.PaisId = -1)
	ON
		(CHARINDEX(CAST(Emp.country_ident as varchar(50)), CC.PaisId) > 0 OR CC.PaisId = '-1')
	AND (Emp.[Client_Ident] = CC.ClienteId OR CC.ClienteId = -1)

	----AND (CC.ClienteId	= Perfil.Client_Ident	OR Perfil.Client_Ident	= -1	OR CC.ClienteId = -1)
	----AND (CC.ConceptoId	= REC.ConceptoId		OR REC.ConceptoId	IS NULL	OR CC.ConceptoId = -1)
	AND CC.Active = 1

	JOIN
		app620.RelPerfilEmpleadosConceptos REC
	ON
		REC.Perfil_Ident = Perfil.Perfil_Ident
	AND
		REC.ConceptoId	= CC.ConceptoId
		--( 		
			--OR
			--	REC.ConceptoId	IS NULL	
			--OR
			--	CC.ConceptoId = -1
		--)
	
	--Adecuación de MultiCliente en RelPerfilEmpleadosClientes
	JOIN app620.RelPerfilEmpleadosClientes RECli
	ON
		RECli.Perfil_Ident = Perfil.Perfil_Ident
	AND	
		RECli.Client_Ident = Emp.Client_Ident

	ORDER BY CC.Descripcion
END

--SELECT * FROM CatPerfilEmpleados
--SELECT * FROM CatConceptos
GO
PRINT N'Altering [app620].[CatContractTypeByProgramCMB]...';


GO
ALTER PROC [app620].[CatContractTypeByProgramCMB]
		 @Country INT = NULL
		,@CityId INT = NULL
		,@SiteId INT = NULL
		,@ClientId VARCHAR(2000) = ''
		,@ProgramId INT = NULL		
		--,@ContactId INT = NULL
AS
BEGIN
	SET @Country	= ISNULL(NULLIF(@Country,0),-1)
	SET @CityId		= ISNULL(NULLIF(@CityId,0),-1)
	SET @SiteId		= ISNULL(NULLIF(@SiteId,0),-1)
	SET @ClientId	= ISNULL(NULLIF(@ClientId,'0'),'-1')
	SET @ProgramId	= ISNULL(NULLIF(@ProgramId,0),-1)
	--SET @ContactId = NULLIF(NULLIF(@ContactId,0),-1)

	SELECT	DISTINCT
			 [Contract_Type_Ident] As Id
			,[Contract_Type] As Value
	FROM	app620.CatEmployeeCCMSVw Emp
	JOIN [app620].[CatRelLocationBiosCCMSVw] LocBios ON 
				LocBios.location_ccms = Emp.Location_Ident
			AND
			(
				LocBios.location_bios	= ISNULL(@CityId, LocBios.location_bios)	
			OR 
				@CityId	= -1
			)
	WHERE	
			(Emp.country_ident		= @Country		OR @Country = -1) AND
			(Emp.Location_Ident		= @SiteId		OR @SiteId = -1) AND 
			(Emp.Client_Ident		IN (
										SELECT	item Client_Ident 
										FROM	fnSplit(@ClientId, ',')
									) 
									OR 
										@ClientId = '-1'
									) AND
			(Emp.Program_Ident		= @ProgramId	OR @ProgramId = -1)
			--AND Contract_Type_Ident = ISNULL(@CrontactId,Contract_Type_Ident)
	AND [Contract_Type_Ident] IS NOT NULL
	UNION
	SELECT
		 -1 AS Id
		,'- Todos -' AS Value
END
GO
PRINT N'Altering [app620].[CatEmpleadoPuestoSel]...';


GO
ALTER PROCEDURE [app620].[CatEmpleadoPuestoSel]
(
	   @Ident				INT = -1
	  ,@Solicitante_Ident	INT = -1
)
AS

BEGIN

	SELECT
		@Ident			= ISNULL(@Ident, -1)

	IF (@Ident <> -1) 
		BEGIN
			IF EXISTS(
				SELECT DISTINCT Emp.Ident
				FROM [app620].[CatEmployeeCCMSVw] Emp
				JOIN CatPerfilEmpleados PE
				ON (PE.Country_Ident = Emp.Country_Ident OR PE.Country_Ident = -1)
				AND  (PE.Location_Ident = Emp.Location_Ident OR PE.Location_Ident = -1)
				--AND  (PE.Client_Ident = Emp.Client_Ident OR PE.Client_Ident = -1)
				AND  (PE.Program_Ident = Emp.Program_Ident OR PE.Program_Ident = -1)
				AND  (PE.Contract_Type_Ident = Emp.Contract_Type_Ident OR PE.Contract_Type_Ident = -1)
				AND PE.Active = 1

				AND Emp.Current_Status = 'Active'

				JOIN [app620].[CatRelLocationBiosCCMSVw] BiosCity 
				ON (BiosCity.location_bios = PE.City_Ident  OR PE.City_Ident = -1)
				AND (BiosCity.location_ccms = Emp.Location_Ident)

				--Adecuación de MultiCliente en RelPerfilEmpleadosClientes
				JOIN app620.RelPerfilEmpleadosClientes RECli
				ON
					RECli.Perfil_Ident = PE.Perfil_Ident
				AND	
					RECli.Client_Ident = Emp.Client_Ident

				WHERE 
					PE.Perfil_Ident IN (
					SELECT Perfil_Ident 
					FROM CatPerfilEmpleadosAccesos 
					WHERE (EmpleadoId = @Solicitante_Ident OR @Solicitante_Ident = -1)
					AND Active = 1
				)
				AND (emp.Ident = @Ident OR @Ident = -1)
			)
				BEGIN
					SELECT
						  Emp.Ident
						, Emp.Nombre				
						, Emp.Position_Code_Ident	
						, Emp.Position_Code_Title	
						, Emp.Contract_Type_Ident		
						, Emp.Contract_Type	
						, Emp.Location_Ident
						, Emp.Location_Name
						, Emp2.Ident IdentManager
						, Emp2.Nombre NombreManager
					FROM
						app620.CatEmployeeCCMSVw AS Emp 
					LEFT JOIN
						app620.CatEmployeeCCMSVw AS Emp2
					ON 
						Emp2.Ident	= Emp.Manager_Ident
					WHERE
						Emp.Ident			= @Ident

					AND Emp.Current_Status = 'Active'
					AND Emp2.Current_Status = 'Active'

				END
			ELSE IF EXISTS (
				SELECT	Emp.Ident
				FROM	app620.CatEmployeeCCMSVw AS Emp 
				WHERE	Emp.Ident = @Ident

				AND Emp.Current_Status = 'Active'

			)
					BEGIN
						SELECT
							  -1 Ident
							, NULL Nombre				
							, NULL Position_Code_Ident	
							, NULL Position_Code_Title	
							, NULL Contract_Type_Ident		
							, NULL Contract_Type	
							, NULL Location_Ident
							, NULL Location_Name
							, NULL IdentManager
							, NULL NombreManager					
					END
			ELSE 
				BEGIN
					SELECT
						  -2 Ident
						, NULL Nombre				
						, NULL Position_Code_Ident	
						, NULL Position_Code_Title	
						, NULL Contract_Type_Ident		
						, NULL Contract_Type	
						, NULL Location_Ident
						, NULL Location_Name
						, NULL IdentManager
						, NULL NombreManager					
				END

		END
END
GO
PRINT N'Altering [app620].[CatMisResponsabilidadesSel]...';


GO


ALTER PROC [app620].[CatMisResponsabilidadesSel]
	@Responsable_Ident INT = 0
AS
BEGIN

	SET @Responsable_Ident = ISNULL(@Responsable_Ident, 0)

	SELECT		DISTINCT
				S.FolioSolicitud, S.Solicitante_Ident, S.Fecha_Solicitud, S.EstatusSolicitudId, ES.Descripcion AS EstatusSolicitud, '' AS Justificacion
	FROM            app620.CatPerfilEmpleados AS PER 
	INNER JOIN app620.CatPerfilEmpleadosAccesos AS PEAccR ON PEAccR.Perfil_Ident = PER.Perfil_Ident 
		AND PER.Active = 1 
		AND PER.TipoAccesoId = '3' 
		AND PEAccR.EmpleadoId = @Responsable_Ident 

	INNER JOIN app620.CatPerfilEmpleados AS PES ON (PES.Country_Ident = PER.Country_Ident OR PES.Country_Ident = - 1 OR PER.Country_Ident = - 1) 
		AND (PES.Location_Ident = PER.Location_Ident OR PES.Location_Ident = - 1 OR PER.Location_Ident = - 1) 
		--AND (PES.Client_Ident = PER.Client_Ident OR PES.Client_Ident = - 1 OR PER.Client_Ident = - 1) 
		AND (PES.Program_Ident = PER.Program_Ident OR PES.Program_Ident = - 1 OR PER.Program_Ident = - 1) 
		AND (PES.Contract_Type_Ident = PER.Contract_Type_Ident OR PES.Contract_Type_Ident = - 1 OR PER.Contract_Type_Ident = - 1) 
		AND PES.Active = 1 
		AND PES.TipoAccesoId = 1 
							 
	INNER JOIN app620.CatPerfilEmpleadosAccesos AS PEAccS ON PEAccS.Perfil_Ident = PES.Perfil_Ident 

	----Adecuación de MultiCliente en RelPerfilEmpleadosClientes (Responsables)
	--JOIN app620.RelPerfilEmpleadosClientes RECliRes
	--ON
	--	RECliRes.Perfil_Ident	= PER.Perfil_Ident

	----Adecuación de MultiCliente en RelPerfilEmpleadosClientes (Solicitantes)
	--JOIN app620.RelPerfilEmpleadosClientes RECliSol
	--ON
	--	RECliSol.Perfil_Ident	= PES.Perfil_Ident
	--AND
	--	RECliSol.Client_Ident	= RECliRes.Client_Ident

	INNER JOIN app620.CatSolicitudes AS S ON S.Solicitante_Ident = PEAccS.EmpleadoId 
	INNER JOIN app620.CatEstatusSolicitudes AS ES ON ES.EstatusSolicitudId = S.EstatusSolicitudId
							 
	JOIN [app620].[CatRelLocationBiosCCMSVw] BiosCity 
	ON (BiosCity.location_bios = PER.City_Ident OR PER.City_Ident = -1)
		AND (BiosCity.location_ccms = PER.Location_Ident OR PER.Location_Ident = -1)

	WHERE        (ES.EstatusSolicitudId IN ('CE','C', 'R', 'EB', 'A', 'PA')) AND (PEAccR.EmpleadoId = @Responsable_Ident OR @Responsable_Ident = 0) 
	ORDER BY
		S.FolioSolicitud DESC

	--SELECT --* 
	--	S.FolioSolicitud, S.Solicitante_Ident, S.[Fecha_Solicitud], S.EstatusSolicitudId, ES.Descripcion EstatusSolicitud, '' Justificacion
	--FROM 
	--	app620.CatPerfilEmpleados PER

	---- Union con Perfiles de Responsables
	--JOIN
	--	app620.CatPerfilEmpleadosAccesos PEAccR
	--ON	PEAccR.Perfil_Ident		= PER.Perfil_Ident
	--AND	PER.Active				= 1
	--AND PER.TipoAccesoId		= '3'
	--AND PEAccR.EmpleadoId		= @Responsable_Ident

	---- Unión con Perfil de Solicitantes
	--JOIN app620.CatPerfilEmpleados PES 
	--ON
	--	(
	--			(PES.Country_Ident			= PER.Country_Ident			OR PER.Country_Ident		= -1)
	--		AND (PES.Location_Ident			= PER.Location_Ident		OR PER.Location_Ident		= -1)
	--		AND (PES.Client_Ident			= PER.Client_Ident			OR PER.Client_Ident			= -1)
	--		AND (PES.Program_Ident			= PER.Program_Ident			OR PER.Program_Ident		= -1)
	--		AND	(PES.Contract_Type_Ident	= PER.Contract_Type_Ident	OR PER.Contract_Type_Ident	= -1)
	--		AND	PES.Active					= 1
	--		AND PES.TipoAccesoId			= 1
	--		--JOIN [app620].[CatRelLocationBiosCCMSVw] BiosCity 
	--		--ON (BiosCity.location_bios = PE.City_Ident OR PE.City_Ident = -1)
	--		--AND (BiosCity.location_ccms = Emp.Location_Ident)
	--	)

	
	----Accesos de Solicitantes
	--JOIN
	--	app620.CatPerfilEmpleadosAccesos PEAccS
	--ON	PEAccS.Perfil_Ident		= PES.Perfil_Ident

	---- Accesos Solicitante en 
	--JOIN	CatSolicitudes S
	--ON		S.Solicitante_Ident	= PEAccS.EmpleadoId

	---- Descripción de los Estatus
	--JOIN [app620].[CatEstatusSolicitudes] ES
	--	ON ES.[EstatusSolicitudId] = S.[EstatusSolicitudId]

	----JOIN app620.CatPerfilEmpleadosAccesos PEAcc
	----ON PEAcc.EmpleadoId = S.Solicitante_Ident

	----JOIN app620.CatPerfilEmpleados PES
	----ON
	----	PES.Perfil_Ident = PEAcc.Perfil_Ident

	--WHERE (Solicitante_Ident = @Responsable_Ident OR @Responsable_Ident = 0)
	--AND ES.EstatusSolicitudId IN ('R', 'EB', 'A')

 -- WHERE CS.[Active] = 1
 -- AND (CS.FolioSolicitud = @FolioSolicitud OR @FolioSolicitud = 0)

END
GO
PRINT N'Altering [app620].[CatNotificacionesManualesSel]...';


GO
ALTER PROC [app620].[CatNotificacionesManualesSel]
@ResponsableCCMSID int = 0
AS
BEGIN
	DECLARE @PeriodoNoimaId int = 0
	DECLARE @TablaPerfilesResponsable TABLE (PerfilID int primary key,EID int)
	DECLARE @TablaDefinicionPerfilesResponsable TABLE (
	PerfilIDResponsable int primary key
	,EIDResponsable int
	,PerfilId int
	,[Country_Ident] int
	,[City_Ident] int
	,[Location_Ident] int
	,[Client_Ident] int
	,[Program_Ident] int
	,[Contract_Type_Ident] int
	,[ConceptoId] int
	,[TipoAccesoId] int
	)
	DECLARE @TablaPerfilesSolicitantes TABLE (PerfilIDSolicitante int, NombrePerfil nvarchar(50), CountryId int, CityId int, LocationId int, ClientId int, ProgramId int, ContractId int, ConceptoId int)
	DECLARE @TablaPerfilesAutorizantes TABLE (PerfilIDSolicitante int, NombrePerfil nvarchar(50), CountryId int, CityId int, LocationId int, ClientId int, ProgramId int, ContractId int, ConceptoId int)
	DECLARE @TablaCCMSIDSolicitantes TABLE (EID int)
	DECLARE @TablaCCMSIDAutorizantes TABLE (EID int)
	DECLARE @TablaSolicitudesSolicitantes TABLE (FolioId int, Estatus nvarchar(10), EID int, email nvarchar(200), Nombre nvarchar(250))
	DECLARE @TablaSolicitudesAutorizantes TABLE (FolioId int, Estatus nvarchar(10), EID int, email nvarchar(200), Nombre nvarchar(250))

	SET @PeriodoNoimaId = (
							select TOP 1 PeriodoNominaId--, FechaInicio, FechaFin
							from [app620].[CatPeriodosNomina] --ORDER BY FechaFin DESC
							where convert(date,getdate()) > convert(date,FechaFin) ORDER BY FechaFin DESC 
							--where convert(date,getdate()) between convert(date,FechaInicio) and convert(date,FechaFin)
						)
	----SELECT @PeriodoNoimaId PeriodoNoimaId
	/* 
	PASO 1: 
	Obtener el perfil del responsable logeado
	*/
	INSERT INTO @TablaPerfilesResponsable 
	select
	Perfil_Ident,EmpleadoId
	from [app620].[CatPerfilEmpleadosAccesos]
	where EmpleadoId = @ResponsableCCMSID
	AND Active = 1

	----SELECT * from @TablaPerfilesResponsable

	/*
	PASO 2:
	Sacar la definicion del perfil o los perfiles donde aplique el responsable por medio del CCMSID
	*/
	INSERT INTO @TablaDefinicionPerfilesResponsable
	SELECT
	b.PerfilID,b.EID,a.Perfil_Ident,a.Country_Ident,a.City_Ident,a.Location_Ident,a.Client_Ident,a.Program_Ident,a.Contract_Type_Ident,a.ConceptoId,a.TipoAccesoId
	from [app620].[CatPerfilEmpleados] a
	inner join @TablaPerfilesResponsable b on a.Perfil_Ident in (b.PerfilID)
	AND a.Active = 1

	----SELECT * FROM @TablaDefinicionPerfilesResponsable

	/*
	PASO 3:
	Obtener pefiles de solicitante y autorizantes que concuerden con la definicion del perfil o perfiles del responsable.
	*/
	INSERT INTO @TablaPerfilesSolicitantes
	SELECT DISTINCT
		  a.Perfil_Ident
		, a.NombrePerfilEmpleados
		, a.Country_Ident
		, a.City_Ident
		, a.Location_Ident
		, a.Client_Ident
		, a.Program_Ident
		, a.Contract_Type_Ident
		, a.ConceptoId
	FROM [app620].[CatPerfilEmpleados] a
	INNER JOIN @TablaDefinicionPerfilesResponsable b on 
		(
			(a.Country_Ident = b.Country_Ident OR a.Country_Ident = -1)
		AND
			(a.City_Ident = b.City_Ident OR a.City_Ident = -1)
		AND
			(a.Location_Ident = b.Location_Ident OR a.Location_Ident = -1)
		AND
			(a.Program_Ident = b.Program_Ident OR a.Program_Ident = -1)
		AND
			(a.Contract_Type_Ident = b.Contract_Type_Ident OR a.Contract_Type_Ident = -1)
		)
	AND
		a.TipoAccesoId = 1
	AND 
		a.Active = 1

	----SELECT * FROM @TablaPerfilesSolicitantes


	INSERT INTO @TablaPerfilesAutorizantes
	SELECT DISTINCT
		  a.Perfil_Ident
		, a.NombrePerfilEmpleados
		, a.Country_Ident
		, a.City_Ident
		, a.Location_Ident
		, a.Client_Ident
		, a.Program_Ident
		, a.Contract_Type_Ident
		, a.ConceptoId
	FROM [app620].[CatPerfilEmpleados] a
	INNER JOIN @TablaDefinicionPerfilesResponsable b on 
	(
			(a.Country_Ident = b.Country_Ident OR a.Country_Ident = -1)
		AND
			(a.City_Ident = b.City_Ident OR a.City_Ident = -1)
		AND
			(a.Location_Ident = b.Location_Ident OR a.Location_Ident = -1)
		AND
			(a.Program_Ident = b.Program_Ident OR a.Program_Ident = -1)
		AND
			(a.Contract_Type_Ident = b.Contract_Type_Ident OR a.Contract_Type_Ident = -1)
	)
	AND
		a.TipoAccesoId = 2
	AND 
		a.Active = 1

	----SELECT * FROM @TablaPerfilesAutorizantes

	/*
	PASO 4:
	Dividir los perfiles por solicitante y autorizantes
	*/
	INSERT INTO @TablaCCMSIDSolicitantes
	SELECT DISTINCT
	a.EmpleadoId--, a.*
	FROM [app620].[CatPerfilEmpleadosAccesos] a
	INNER JOIN @TablaPerfilesSolicitantes b on a.Perfil_Ident = b.PerfilIDSolicitante AND a.Active = 1


	----SELECT * FROM @TablaCCMSIDSolicitantes



	INSERT INTO @TablaCCMSIDAutorizantes
	SELECT DISTINCT
	a.EmpleadoId--a.*
	
	FROM [app620].[CatPerfilEmpleadosAccesos] a
	INNER JOIN @TablaPerfilesAutorizantes b on a.Perfil_Ident = b.PerfilIDSolicitante AND a.Active = 1


	----SELECT * FROM @TablaCCMSIDAutorizantes


	/*
	PASO 5:
	Obtener los ccmsid relacionados con cada perfil y sus email.
	En el caso de solicitantes, buscar por medio del ccmsid todas las solicitudes que estan en estatus de borrador(EB) o rechazadas(R) relacionadas a ese CCMSID.
	En el caso de autorizantes, buscar por medio del ccmsid todas las solicitudes que estan en estatus de PA relacionadas a ese CCMSID.
	*/
	INSERT INTO @TablaSolicitudesSolicitantes
	SELECT
	a.FolioSolicitud, a.EstatusSolicitudId, a.Solicitante_Ident, c.email1 + ';alfredo.guerrero@teleperformance.com;jdelossantosr@outlook.com' email1, c.Nombre
	FROM [app620].[CatSolicitudes] a
	INNER JOIN @TablaCCMSIDSolicitantes b on a.Solicitante_Ident = b.EID AND a.EstatusSolicitudId in ('EB','R') AND a.Active = 1 AND a.PeriodoNominaId = @PeriodoNoimaId
	INNER JOIN [app620].[CatEmployeeCCMSVw] c on b.EID = c.Ident

	----SELECT * FROM @TablaSolicitudesSolicitantes order by eid


	INSERT INTO @TablaSolicitudesAutorizantes
	SELECT DISTINCT
	a.FolioSolicitud,b.EstatusSolicitudId, a.Autorizador_Ident, d.email1 + ';alfredo.guerrero@teleperformance.com;jdelossantosr@outlook.com' email1, d.Nombre
	FROM [app620].[CatSolicitudEmpleadosAutorizantes] a
	INNER JOIN [app620].[CatSolicitudes] b on a.FolioSolicitud = b.FolioSolicitud AND b.EstatusSolicitudId in ('PA') AND a.Active = 1 AND b.PeriodoNominaId = @PeriodoNoimaId
	INNER JOIN @TablaCCMSIDAutorizantes c on a.Autorizador_Ident = c.EID AND a.Pendiente = 1
	INNER JOIN [app620].[CatEmployeeCCMSVw] d on c.EID = d.Ident
	order by a.Autorizador_Ident
 

	----SELECT * FROM @TablaSolicitudesAutorizantes order by eid

	/*
	PASO 6:
	Juntar las solicitudes que se van a enviar por email.
	*/
	SELECT
	FolioId, Estatus, EID, email, 1 AS Accesos, Nombre
	FROM @TablaSolicitudesSolicitantes

	UNION

	SELECT
	FolioId, Estatus, EID, email, 2 AS Accesos, Nombre
	FROM @TablaSolicitudesAutorizantes
	ORDER BY EID
END
GO
PRINT N'Altering [app620].[CatPerfilEmpleadosCopy]...';


GO
ALTER PROC [app620].[CatPerfilEmpleadosCopy]
	 @Perfil_Ident INT = 0 
	,@NombrePerfilEmpleados VARCHAR (50)

	,@UserEmployeeId INT
	,@Estatus INT = 0 OUTPUT
AS
BEGIN
	DECLARE
		 @FechaActual		DATETIME
		,@Perfil_Ident_INS	INT

		SET @FechaActual = GETDATE();

	/*
	Estados para @Estatus, de esta manera de lado de la aplicacion recibe un estatus de la ejecución del SP
	- 0 = Proceso sin error
	- -1 = Ya existe un registro con la misma descripción
	*/
	
	SET @Perfil_Ident = ISNULL(@Perfil_Ident, 0)

	IF EXISTS		(
						SELECT 1 
						FROM [app620].[CatPerfilEmpleados] 
						WHERE	NombrePerfilEmpleados	= @NombrePerfilEmpleados
					)
	AND NOT EXISTS	(
						SELECT 1 
						FROM [app620].[CatPerfilEmpleados] 
						WHERE	NombrePerfilEmpleados	= @NombrePerfilEmpleados + '_Copia'
					)
		BEGIN
			DECLARE @inserted TABLE (
				[Perfil_Ident] [int]
			)

			INSERT INTO [app620].[CatPerfilEmpleados]
			OUTPUT Inserted.Perfil_Ident INTO @inserted
			SELECT TOP 1
				-- Perfil_Ident_INS	[Perfil_Ident]
				--,
				 @NombrePerfilEmpleados + '_Copia'	NombrePerfilEmpleados

				,[Country_Ident]			
				,[City_Ident]				
				,[Location_Ident]			
				,[Client_Ident]				
				,[Program_Ident]			
				,[Contract_Type_Ident]		
				,[ConceptoId]				
				,[TipoAccesoId]				

				,1									Active
				,@UserEmployeeId					CreatedBy
				,@FechaActual						CreatedDate
				,NULL								DeactivatedDate			
				,NULL								DeactivatedBy				
				,@UserEmployeeId					LastModifiedBy				
				,@FechaActual						LastModifiedDate			
				,HOST_NAME()						LastModifiedFromPCName					

			FROM [app620].[CatPerfilEmpleados]
			WHERE
				NombrePerfilEmpleados	= @NombrePerfilEmpleados				

			SELECT	TOP 1 @Perfil_Ident_INS = Perfil_Ident
			FROM @inserted;		

			--Se insertan todos los registros de relación en RelPerfilEmpleadosConceptos
			INSERT INTO app620.RelPerfilEmpleadosConceptos 
			SELECT
				 @Perfil_Ident_INS					[Perfil_Ident]
				,RPEC.[ConceptoId]
			FROM app620.RelPerfilEmpleadosConceptos RPEC
			JOIN app620.CatPerfilEmpleados			PE
			ON
				RPEC.Perfil_Ident					= PE.Perfil_Ident
			AND
				PE.NombrePerfilEmpleados			= @NombrePerfilEmpleados

			--Se insertan todos los registros de relación en RelPerfilEmpleadosClientes
			INSERT INTO app620.RelPerfilEmpleadosClientes 
			SELECT
				 @Perfil_Ident_INS					[Perfil_Ident]
				,RPECli.[Client_Ident]
			FROM app620.RelPerfilEmpleadosClientes	RPECli
			JOIN app620.CatPerfilEmpleados			PE
			ON
				RPECli.Perfil_Ident					= PE.Perfil_Ident
			AND
				PE.NombrePerfilEmpleados			= @NombrePerfilEmpleados

			--Se insertan todos los registros de app620.CatPerfilEmpleadosAccesos
			INSERT INTO app620.CatPerfilEmpleadosAccesos
			SELECT
				 @Perfil_Ident_INS					[Perfil_Ident]				
				,[EmpleadoId]				
				,[Nivel]					
				,1									Active
				,@UserEmployeeId					CreatedBy				
				,@FechaActual						CreatedDate				
				,NULL								DeactivatedDate			
				,NULL								DeactivatedBy			
				,@UserEmployeeId					LastModifiedBy			
				,@FechaActual						LastModifiedDate			
				,HOST_NAME()						LastModifiedFromPCName	
			FROM app620.CatPerfilEmpleadosAccesos	PEA
			JOIN app620.CatPerfilEmpleados			PE
			ON
				PEA.Perfil_Ident					= PE.Perfil_Ident
			AND
				PE.NombrePerfilEmpleados			= @NombrePerfilEmpleados

		END
	ELSE
		SET @Estatus = -1
END
GO
PRINT N'Altering [app620].[CatPerfilEmpleadosSel]...';


GO
ALTER PROC [app620].[CatPerfilEmpleadosSel]
	@Perfil_Ident INT = 0 
AS
BEGIN

	SET @Perfil_Ident = ISNULL(@Perfil_Ident, 0)

	CREATE TABLE #TempPerfilEmpleadosClientes(
		 [Perfil_Ident]		INT
		,[Client_Ident]		VARCHAR(1500)
		,[Client_Name]		VARCHAR(50)
		,CONSTRAINT [PK_TempPerfilEmpleadosClientes] PRIMARY KEY CLUSTERED 
		(
			[Perfil_Ident] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY]

	INSERT INTO #TempPerfilEmpleadosClientes
	SELECT
		 PE.Perfil_Ident
		,(
			SELECT DISTINCT  
			SUBSTRING(
				(
					SELECT ',' + CONVERT(VARCHAR(1500), RECli1.Client_Ident)  AS [text()]
					FROM app620.RelPerfilEmpleadosClientes RECli1
						JOIN app620.CatClientVw B ON RECli1.Client_Ident = B.Client_Ident
					WHERE RECli1.Perfil_Ident = RECli2.Perfil_Ident
					ORDER BY B.Client_Name
					FOR XML PATH ('')
				), 2, 1000) [Client_Ident]
			FROM app620.RelPerfilEmpleadosConceptos RECli2 WHERE RECli2.Perfil_Ident = PE.Perfil_Ident
		) AS Client_Ident
		,CASE
			WHEN COUNT(CC.Client_Name) > 1
			THEN 'VARIOS'
			ELSE (	SELECT	Client_Name
					FROM	[app620].[RelPerfilEmpleadosClientes] A WITH(NOLOCK)
							JOIN app620.CatClientVw B ON B.Client_Ident = A.Client_Ident
					WHERE	A.Perfil_Ident = PE.Perfil_Ident)
		 END AS Client_Name
	FROM app620.CatPerfilEmpleados PE
	JOIN app620.RelPerfilEmpleadosClientes RPECli ON RPECli.Perfil_Ident = PE.Perfil_Ident 
	LEFT JOIN [app620].[CatClientVw] CC ON CC.Client_Ident = RPECli.Client_Ident
	GROUP BY PE.Perfil_Ident

	CREATE TABLE #TempPerfilEmpleadosConceptos(
		 [Perfil_Ident]		INT
		,[ConceptoId]		VARCHAR(1500)
		,[Descripcion]		VARCHAR(50)
		,CONSTRAINT [PK_TempPerfilEmpleadosConceptos] PRIMARY KEY CLUSTERED 
		(
			[Perfil_Ident] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY]

	INSERT INTO #TempPerfilEmpleadosConceptos
	SELECT
		 PE.Perfil_Ident
		,(
			SELECT DISTINCT  
			SUBSTRING(
				(
					SELECT ',' + CONVERT(VARCHAR(1500),REC1.ConceptoId)  AS [text()]
					FROM app620.RelPerfilEmpleadosConceptos REC1
						JOIN app620.CatConceptos B ON REC1.ConceptoId = B.ConceptoId
					WHERE REC1.Perfil_Ident = REC2.Perfil_Ident
					ORDER BY B.Descripcion
					FOR XML PATH ('')
				), 2, 1000) [ConceptoId]
			FROM app620.RelPerfilEmpleadosConceptos REC2 WHERE REC2.Perfil_Ident = PE.Perfil_Ident
		) AS ConceptoId
		,CASE
			WHEN COUNT(CC.Descripcion) > 1
			THEN 'VARIOS'
			ELSE (	SELECT	Descripcion
					FROM	[app620].[RelPerfilEmpleadosConceptos] A WITH(NOLOCK)
							JOIN app620.CatConceptos B ON A.ConceptoId = B.ConceptoId
					WHERE	A.Perfil_Ident = PE.Perfil_Ident)
		 END AS Descripcion
	FROM app620.CatPerfilEmpleados PE
	JOIN app620.RelPerfilEmpleadosConceptos RPEC ON RPEC.Perfil_Ident = PE.Perfil_Ident 
	LEFT JOIN [app620].[CatConceptos] CC ON CC.ConceptoId = RPEC.ConceptoId
	GROUP BY PE.Perfil_Ident

	CREATE TABLE #CatPerfilEmpleadosSel(
                 [Perfil_Ident]				INT
                ,[NombrePerfilEmpleados]	VARCHAR(50)
                ,[Country_Ident]			INT
                ,[Country_Full_Name]		VARCHAR(250)
                ,[City_Ident]				INT
                ,[City_Name]				VARCHAR(50)
                ,[Location_Ident]			INT
                ,[Location_Name]			VARCHAR(150)
                ,[Program_Ident]			INT
                ,[Program_Name]				VARCHAR(250)
                ,[Contract_Type_Ident]		INT
                ,[Contract_Type]			VARCHAR(50)
                ,[TipoAccesoId]				INT
                ,[TipoAcceso]				VARCHAR(50)
                ,[Active]					BIT
                ,[Client_Ident]				VARCHAR(1500)
                ,[Client_Name]				VARCHAR(50)
                ,[ConceptoId]				VARCHAR(1500)
                ,[ConceptoNombre]			VARCHAR(50)
		,CONSTRAINT [PK_CatPerfilEmpleadosSel] PRIMARY KEY CLUSTERED 
		(
			[Perfil_Ident] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY]

	INSERT INTO #CatPerfilEmpleadosSel
	SELECT
		 Perfil.[Perfil_Ident]
		,[NombrePerfilEmpleados]
		,Perfil.[Country_Ident]
		,Pais.Country_Full_Name
		,ISNULL(CCVW.Id, -1) City_Ident
		,CCVW.Value City_Name
		,Perfil.[Location_Ident]
		,Location.full_name Location_Name
		,Perfil.[Program_Ident]
		,Program.Program_Name
		,Perfil.[Contract_Type_Ident]
		,Contract.Contract_Type
		,Perfil.TipoAccesoId
		,TipoAcceso.Descripcion TipoAcceso
		,Perfil.Active
		,PECli.Client_Ident
		,PECli.Client_Name
		,PEC.ConceptoId
		,PEC.Descripcion ConceptoNombre
	FROM [app620].[CatPerfilEmpleados] Perfil
	LEFT JOIN #TempPerfilEmpleadosClientes PECli ON PECli.Perfil_Ident = Perfil.Perfil_Ident
	LEFT JOIN #TempPerfilEmpleadosConceptos PEC ON PEC.Perfil_Ident = Perfil.Perfil_Ident
	LEFT JOIN [app620].[CatCountryVw] Pais ON Pais.[Country_Ident] = Perfil.Country_Ident
	LEFT JOIN [app620].[CatLocationVw] Location ON Location.Location_Ident = Perfil.Location_Ident
	LEFT JOIN [app620].[CatClientVw] Client ON Client.Client_Ident = Perfil.Client_Ident
	LEFT JOIN [app620].[CatProgramVw] Program ON Program.Program_Ident = perfil.Program_Ident
	LEFT JOIN [app620].[CatContractTypeVw] Contract ON Contract.Contract_Type_Ident = Perfil.Contract_Type_Ident
	LEFT JOIN [app620].[CatConceptos] Concepto ON Concepto.ConceptoId = Perfil.ConceptoId
	LEFT JOIN [app620].[CatTiposAcceso] TipoAcceso ON TipoAcceso.TipoAccesoId = Perfil.[TipoAccesoId]
	LEFT JOIN [app620].[CatCityVw] CCVW ON CCVW.Id = Perfil.City_Ident
	WHERE (Perfil.Perfil_Ident =@Perfil_Ident OR @Perfil_Ident = 0)
	GROUP BY Perfil.[Perfil_Ident]
			,[NombrePerfilEmpleados]
			,Perfil.[Country_Ident]
			,Pais.Country_Full_Name
			,ISNULL(CCVW.Id, -1)
			,CCVW.Value 
			,Perfil.[Location_Ident]
			,Location.full_name 
			,Perfil.[Client_Ident]
			,Client.Client_Name
			,Perfil.[Program_Ident]
			,Program.Program_Name
			,Perfil.[Contract_Type_Ident]
			,Contract.Contract_Type
			,Perfil.ConceptoId
			,Concepto.Descripcion
			,Perfil.TipoAccesoId
			,TipoAcceso.Descripcion
			,Perfil.Active
			,PECli.Client_Ident
			,PECli.Client_Name
			,PEC.ConceptoId
			,PEC.Descripcion 
	ORDER BY NombrePerfilEmpleados

	SELECT 
		 [Perfil_Ident]				
		,[NombrePerfilEmpleados]	
		,[Country_Ident]			
		,[Country_Full_Name]		
		,[City_Ident]				
		,[City_Name]				
		,[Location_Ident]			
		,[Location_Name]			
		,[Program_Ident]			
		,[Program_Name]				
		,[Contract_Type_Ident]		
		,[Contract_Type]			
		,[TipoAccesoId]				
		,[TipoAcceso]				
		,[Active]					
		,ISNULL([Client_Ident], '-1') Client_Ident				
		,ISNULL([Client_Name], 'VARIOS') Client_Name
		,ISNULL([ConceptoId], '-1') ConceptoId				
		,ISNULL([ConceptoNombre], 'VARIOS') ConceptoNombre  			
	FROM #CatPerfilEmpleadosSel

	DROP TABLE #CatPerfilEmpleadosSel

	DROP TABLE #TempPerfilEmpleadosClientes

	DROP TABLE #TempPerfilEmpleadosConceptos

END
GO
PRINT N'Altering [app620].[CatPerfilEmpleadosSi]...';


GO
ALTER PROC [app620].[CatPerfilEmpleadosSi]
	 @NombrePerfilEmpleados VARCHAR(50)
	,@Country_Ident INT
	,@City_Ident INT
	,@Location_Ident INT
	,@Client_Ident VARCHAR(1500) --INT
	,@Program_Ident INT
	,@Contract_Type_Ident INT
	,@ConceptoId VARCHAR(1500) --INT
	,@TipoAccesoId INT

	,@UserEmployeeId INT
	,@Estatus INT = 0 OUTPUT
AS
BEGIN
	DECLARE
		 @FechaActual DATETIME,
		 @Perfil_Ident INT

	-- Se inicializa @Estatus a cero si el valor de entrada es NULL
	SET @Estatus = ISNULL(@Estatus, 0)

	/*
	Estados para @Estatus, de esta manera de lado de la aplicacion recibe un estatus de la ejecución del SP
	- 0 = Proceso sin error
	- -1 = Ya existe un registro con la misma descripción
	*/
	
	SET @FechaActual = GETDATE();

	SET @City_Ident = IIF(@City_Ident=0, -1, @City_Ident)


	SELECT *
	FROM [app620].[CatPerfilEmpleados] 
	WHERE [NombrePerfilEmpleados] = @NombrePerfilEmpleados


	IF NOT EXISTS	
			(
				SELECT 1
				FROM [app620].[CatPerfilEmpleados] 
				WHERE [NombrePerfilEmpleados] = @NombrePerfilEmpleados
			)

		BEGIN
			DECLARE @inserted TABLE (
				[Perfil_Ident] [int]
			)

			INSERT INTO [app620].[CatPerfilEmpleados]
			   (
					[NombrePerfilEmpleados]
				   ,[Country_Ident]
				   ,[City_Ident]
				   ,[Location_Ident]
				   ,[Client_Ident]
				   ,[Program_Ident]
				   ,[Contract_Type_Ident]
				   ,ConceptoId 
				   ,TipoAccesoId 

				   ,[CreatedBy]
				   ,[LastModifiedBy]
			   )
		OUTPUT Inserted.Perfil_Ident INTO @inserted
		 VALUES
				(
					 @NombrePerfilEmpleados
					,@Country_Ident
					,@City_Ident
					,@Location_Ident
					,NULL --,@Client_Ident
					,@Program_Ident
					,@Contract_Type_Ident
					,NULL --@ConceptoId
					,@TipoAccesoId

					,@UserEmployeeId 
					,@UserEmployeeId 
				)

		SELECT	TOP 1 @Perfil_Ident = Perfil_Ident
		FROM @inserted;
		
		--Se insertan todos los registros de relación en CatPerfilesClientes
		INSERT INTO app620.RelPerfilEmpleadosClientes 
		SELECT @Perfil_Ident Perfil_Ident, Cli.item Client_Ident
		FROM fnSplit(@Client_Ident,',') Cli
				
		--Se insertan todos los registros de relación en CatPerfilesConceptos
		INSERT INTO app620.RelPerfilEmpleadosConceptos 
		SELECT @Perfil_Ident Perfil_Ident, Con.item ConceptoId
		FROM fnSplit(@ConceptoId,',') Con
		
		END		
	ELSE
		SET @Estatus = -1

END
GO
PRINT N'Altering [app620].[CatPerfilEmpleadosSu]...';


GO

ALTER PROCEDURE [app620].[CatPerfilEmpleadosSu]
	 @Perfil_Ident INT
	,@NombrePerfilEmpleados VARCHAR (50)

	,@Country_Ident INT = -1
	,@City_Ident INT = -1
	,@Location_Ident INT = -1
	,@Client_Ident VARCHAR(1500)		--INT = -1
	,@Program_Ident INT = -1
	,@Contract_Type_Ident INT = -1
	,@ConceptoId VARCHAR(1500)		--INT = -1
	,@TipoAccesoId INT = 1

	,@UserEmployeeId INT
	,@Active BIT
	,@Estatus INT = 0 OUTPUT
AS
BEGIN
	DECLARE
		 @FechaActual DATETIME
		,@DeactivatedBy INT
		,@DeactivatedDate DATETIME
		,@LastModifiedBy INT
		,@LastModifiedDate DATETIME

	/*
	Estados para @Estatus, de esta manera de lado de la aplicacion recibe un estatus de la ejecución del SP
	- 0 = Proceso sin error
	- -1 = Ya existe un registro con la misma descripción
	*/
	
	SET @FechaActual = GETDATE();

	IF EXISTS		(
						SELECT 1 
						FROM [app620].[CatPerfilEmpleados] 
						WHERE [Perfil_Ident] = @Perfil_Ident
					)
	AND NOT EXISTS	(
						SELECT 1 
						FROM [app620].[CatPerfilEmpleados] 
						WHERE	Perfil_Ident			<> @Perfil_Ident 
						AND		NombrePerfilEmpleados	= @NombrePerfilEmpleados
					)
		BEGIN
			UPDATE [app620].[CatPerfilEmpleados]
			SET 
				 [NombrePerfilEmpleados]	= @NombrePerfilEmpleados

				,[Country_Ident]			= @Country_Ident
				,[City_Ident]				= @City_Ident
				,[Location_Ident]			= @Location_Ident
				--,[Client_Ident]				= @Client_Ident
				,[Program_Ident]			= @Program_Ident
				,[Contract_Type_Ident]		= @Contract_Type_Ident
				--,[ConceptoId]				= @ConceptoId
				,[TipoAccesoId]				= @TipoAccesoId

				,[Active]					= @Active
				,LastModifiedBy				= @UserEmployeeId
				,LastModifiedDate			= @FechaActual

				,DeactivatedBy				= IIF(@Active=1,NULL,@UserEmployeeId)
				,DeactivatedDate			= IIF(@Active=1,NULL,@FechaActual)
				,LastModifiedFromPCName		= HOST_NAME()
			WHERE
				Perfil_Ident				= @Perfil_Ident

		--Se insertan todos los registros de relación en RelPerfilEmpleadosClientes
		INSERT INTO app620.RelPerfilEmpleadosClientes 
		SELECT @Perfil_Ident Perfil_Ident, Cli.item Client_Ident
		FROM fnSplit(@Client_Ident,',') Cli
		WHERE Cli.item NOT IN (
			SELECT Cli.item 
			FROM
				 RelPerfilEmpleadosClientes RPEC
				,fnSplit(@Client_Ident,',') Cli
			WHERE RPEC.Perfil_Ident = @Perfil_Ident
			AND RPEC.Client_Ident = Cli.item
		)

		--Se desactivan todos los registros de relación en CatPerfilesClientes
		DELETE app620.RelPerfilEmpleadosClientes
		WHERE Client_Ident NOT IN (SELECT Cli.item Client_Ident FROM fnSplit(@Client_Ident,',') Cli)
		AND Perfil_Ident = @Perfil_Ident

		--Se insertan todos los registros de relación en RelPerfilEmpleadosConceptos
		INSERT INTO app620.RelPerfilEmpleadosConceptos 
		SELECT @Perfil_Ident Perfil_Ident, Con.item ConceptoId
		FROM fnSplit(@ConceptoId,',') Con
		WHERE Con.item NOT IN (
			SELECT Con.item 
			FROM
				 RelPerfilEmpleadosConceptos RPEC
				,fnSplit(@ConceptoId,',') Con
			WHERE RPEC.Perfil_Ident = @Perfil_Ident
			AND RPEC.ConceptoId = Con.item
		)

		--Se desactivan todos los registros de relación en CatPerfilesConceptos
		DELETE app620.RelPerfilEmpleadosConceptos
		WHERE ConceptoId NOT IN (SELECT Con.item ConceptoId FROM fnSplit(@ConceptoId,',') Con)
		AND Perfil_Ident = @Perfil_Ident

		END
	ELSE
		SET @Estatus = -1
END
GO
PRINT N'Altering [app620].[CatProgramByClientCMB]...';


GO

ALTER PROC [app620].[CatProgramByClientCMB]
		 @Country INT = NULL
		,@CityId INT = NULL
		,@SiteId INT = NULL
		,@ClientId VARCHAR(1000) = NULL
		--,@ProgramId INT = NULL
		--,@CrontactId INT = NULL
AS
BEGIN

	SET @Country = ISNULL(NULLIF(@Country,0),-1)
	SET @CityId = ISNULL(NULLIF(@CityId,0),-1)
	SET @SiteId = ISNULL(NULLIF(@SiteId,0),-1)
	--SET @ClientId = NULLIF(NULLIF(@ClientId,0),'-1')
	--SET @ProgramId = NULLIF(NULLIF(@ProgramId,0),-1)
	--SET @CrontactId = NULLIF(NULLIF(@CrontactId,0),-1)

	SELECT	DISTINCT
			 [Program_Ident] As Id
			,[Program_Name] As Value
	FROM	app620.CatEmployeeCCMSAllVw Emp
	JOIN [app620].[CatRelLocationBiosCCMSVw] LocBios ON
			LocBios.location_ccms  = Emp.Location_Ident AND
		(
			LocBios.location_bios	= ISNULL(@CityId, LocBios.location_bios)	
		OR 
			@CityId	= -1
		)

	WHERE	
		(Emp.country_ident		= ISNULL(@Country, Emp.country_ident)		OR @Country	= -1) 
	AND
		(Emp.Location_Ident		= ISNULL(@SiteId, Emp.Location_Ident)		OR @SiteId	= -1) 
	AND 
		(Emp.Client_Ident		IN (SELECT item Client_Ident FROM fnSplit(@ClientId, ',')) OR @ClientId = '-1')
	UNION
	SELECT
		 -1 AS Id
		,'- Todos -' AS Value
	ORDER BY Value
END
GO
PRINT N'Altering [app620].[CatResponsabilidadesSel]...';


GO

ALTER PROC [app620].[CatResponsabilidadesSel]
	 @FolioSolicitud INT = 0
	,@Responsable_Ident	INT = 0
AS
BEGIN

	SET @FolioSolicitud = ISNULL(@FolioSolicitud, 0)

	DECLARE @Temp TABLE(
		 FolioSolicitud		INT NULL
		,Empleado_Ident		INT NULL
		,ConceptoId			INT NULL
		,NivelAutorizacion	INT NULL
		,Autorizador_Ident	INT NULL
	)

	SELECT DISTINCT
		 Sol.[FolioSolicitud]
		,Sol.Solicitante_Ident
		,EMP.Ident
		,EMP.Nombre
		,Con.ConceptoId
		,Con.Descripcion ConceptoDesc
		--,CONVERT(VARCHAR(22), EmpSol.ParametroConceptoMonto) + ' ' +  Par.Descripcion Monto
		,CASE WHEN Par.ParametroConceptoId = 3 THEN CONVERT(VARCHAR(22), EmpSol.ParametroConceptoMonto) + ' ' + TM.TipoDeMoneda
			   ELSE CONVERT(VARCHAR(22), EmpSol.ParametroConceptoMonto) + ' ' + Par.Descripcion 
		  END AS Monto
		,CMS.MotivosSolicitudId
		,CMS.Descripcion MotivosSolicitudDesc
		,ISNULL(ConMot.ConceptoMotivoId, -1) ConceptoMotivoId
		,ConMot.Descripcion ConceptoMotivoDesc
		,ISNULL(SED.ResponsableId, 0) ResponsableId
		,EMP2.Nombre NombreResponsable
		,ISNULL(SED.PeriodoOriginalId, -1) PeriodoOriginalId
		,ES.EstatusSolicitudId EstatusId
		,ES.Descripcion EstatusSolicitud
		--,SEA.NivelAutorizacion
		,EmpSol.Active

	FROM
		app620.CatSolicitudes Sol

	JOIN [app620].[CatEmpleadosSolicitudes] EmpSol 
		ON EmpSol.FolioSolicitud = Sol.FolioSolicitud
	    AND Sol.FolioSolicitud = @FolioSolicitud
	    --AND Sol.FolioSolicitud = 9
		AND Sol.Active = 1
		AND EmpSol.Active = 1

	JOIN app620.CatEstatusSolicitudes ES
		ON ES.EstatusSolicitudId = EmpSol.EstatusSolicitudId

	JOIN app620.CatEmployeeCCMSVw EMP 
		--ON EMP.Ident = Sol.Solicitante_Ident
		ON EMP.Ident = EmpSol.Empleado_Ident

	JOIN app620.CatConceptos Con
		ON Con.ConceptoId = EmpSol.ConceptoId

	JOIN app620.CatParametroConceptos Par
		ON Par.[ParametroConceptoId] = Con.ParametroConceptoId

    LEFT JOIN app620.CatMotivosSolicitud CMS 
		ON CMS.MotivosSolicitudId = EmpSol.MotivosSolicitudId

	LEFT JOIN app620.CatSolicitudEmpleadosDetalle SED
		ON SED.FolioSolicitud		= Empsol.FolioSolicitud
		AND SED.[Empleado_Ident]	= Empsol.[Empleado_Ident]
		AND SED.[ConceptoId]		= Empsol.[ConceptoId]
		AND SED.Active = 1

	LEFT JOIN app620.CatEmployeeCCMSVw EMP2 
		ON EMP2.Ident = SED.ResponsableId
		
	LEFT JOIN app620.CatConceptosMotivos ConMot
		ON ConMot.ConceptoMotivoId = SED.ConceptoMotivoId

	JOIN app620.CatPerfilEmpleadosAccesos PEAR
		ON
			PEAR.EmpleadoId		= @Responsable_Ident
			AND	
				PEAR.Active = 1
			--PEAR.EmpleadoId		= 656654

	JOIN app620.CatPerfilEmpleados PER
		ON 
			PER.Perfil_Ident	= PEAR.Perfil_Ident
		AND 
			PER.TipoAccesoId	= 3 
		AND 
			PER.Active			= 1

		AND	(EMP.Country_Ident			= PER.Country_Ident			OR PER.Country_Ident = -1)
		AND	(EMP.Location_Ident			= PER.Location_Ident		OR PER.Location_Ident = -1)
		--AND	(EMP.Client_Ident			= PER.Client_Ident			OR PER.Client_Ident = -1)
		AND	(EMP.Program_Ident			= PER.Program_Ident			OR PER.Program_Ident = -1)
		AND (EMP.Contract_Type_Ident	= PER.Contract_Type_Ident	OR PER.Contract_Type_Ident = -1)

		--AND (Emp.Ident					= EMS.Empleado_Ident)

		JOIN [app620].[CatRelLocationBiosCCMSVw] BiosCity ON 
				(BiosCity.location_bios		= PER.City_Ident				OR PER.City_Ident = -1)
			AND (BiosCity.location_ccms		= EMP.Location_Ident)

	JOIN [app620].[CatTipoDeMoneda] TM ON TM.Pais = EMP.country_ident

	--Adecuación de MultiCliente en RelPerfilEmpleadosClientes
	JOIN app620.RelPerfilEmpleadosClientes RECli
	ON
		RECli.Perfil_Ident = PER.Perfil_Ident
	AND	
		RECli.Client_Ident = EMP.Client_Ident

END
GO
PRINT N'Altering [app620].[DescargaArchivoSolicitud]...';


GO
ALTER PROC [app620].[DescargaArchivoSolicitud]
	 @EmpleadoId INT
	,@Activos INT
	,@PeriodoNomina INT = NULL
AS
	BEGIN
		DECLARE
			@PeriodoNominaId INT = 0
			,@CurrentStatus VARCHAR(10)

		IF (ISNULL(@PeriodoNomina,0) = 0)
			SELECT	TOP 1 @PeriodoNomina = PeriodoNominaId
			FROM	[app620].[CatPeriodosNomina]
			WHERE	PeriodicidadNominaId = 'C' 
					AND TipoPeriodo = 'O'
					--AND convert(date,getdate()) between convert(date,FechaInicio) and convert(date,FechaFin)
					AND convert(date,getdate()) between convert(date,FechaInicio) and convert(date,FechaCierre)
			ORDER BY FechaInicio ASC		
		--SELECT @PeriodoNomina PeriodoNomina
		SELECT	' EMPLEADO' EMPLEADO,'CONCEPTO' CONCEPTO,'ACCION' ACCION,'UNIDAD' UNIDAD,'IMPORTE' IMPORTE,'PORCENTAJE' PORCENTAJE,'FECHA' FECHA,'INICIO' INICIO,'FIN' FIN,'FOLIO' FOLIO,'CONSECUENCIA' CONSECUENCIA,'CONTROL' CONTROL,'SEMANA' SEMANA
		UNION ALL
		SELECT	CONVERT(VARCHAR(20),EMS.Empleado_Ident) EMPLEADO,
				PS.Descripcion CONCEPTO,
				'' ACCION,
				CASE
					WHEN C.ParametroConceptoId IN (1,2)
					THEN CONVERT(VARCHAR(10),EMS.ParametroConceptoMonto)
					ELSE ''
				END UNIDAD,
				CASE
					WHEN C.ParametroConceptoId IN (3)
					THEN CONVERT(VARCHAR(10),EMS.ParametroConceptoMonto)
					ELSE ''
				END IMPORTE,
				CASE
					WHEN C.ParametroConceptoId IN (4)
					THEN CONVERT(VARCHAR(10),EMS.ParametroConceptoMonto)
					ELSE ''
				END PORCENTAJE,
				'' FECHA,
				''	INICIO,
				''	FIN,
				''	FOLIO,
				''	CONSECUENCIA,
				''	CONTROL,
				''	SEMANA
				--,S.*
				--,E.country_ident
				--,E.country_full_name
				--,LB.location_bios
				--,LB.city
				--,E.Location_Ident
				--,E.Location_Name
				--,E.Client_Ident
				--,E.Client_Name
				--,E.Program_Ident
				--,E.Program_Name
				--,E.Contract_Type_Ident
				--,E.Contract_Type
				--,PE.Country_Ident
				--,PE.City_Ident
				--,LB.location_ccms
		FROM	[app620].[CatSolicitudes] S
				JOIN [app620].[CatEmpleadosSolicitudes] EMS ON S.FolioSolicitud = EMS.FolioSolicitud
				INNER JOIN [app620].[CatConceptos] C ON C.ConceptoId = EMS.ConceptoId
				INNER JOIN [app620].[CatConceptosPeopleSoft] PS ON PS.ConceptoId = C.PeopleSoftId
				LEFT JOIN [app620].[CatEmployeeCCMSAllVw] E ON E.Ident = EMS.[Empleado_Ident]
				INNER JOIN [app620].[CatLocationVw] AS b ON E.Location_Ident = b.Location_Ident
				INNER JOIN [ITAL].[app012].[RelLocationBiosCCMSVw] LB ON LB.location_ccms = E.Location_Ident
				INNER JOIN [app620].[CatPerfilEmpleados] PE ON	ISNULL(NULLIF(PE.Country_Ident, -1), b.country_ident) = b.country_ident AND 
																ISNULL(NULLIF(PE.City_Ident, -1), LB.location_bios) = LB.location_bios AND 
																ISNULL(NULLIF(PE.Location_Ident, -1), E.Location_Ident) = E.Location_Ident AND 
																--ISNULL(NULLIF(PE.Client_Ident, -1), E.Client_Ident) = E.Client_Ident AND
																ISNULL(NULLIF(PE.Program_Ident, -1),E.Program_Ident) = E.Program_Ident AND
																ISNULL(NULLIF(PE.Contract_Type_Ident, -1), E.Contract_Type_Ident) = E.Contract_Type_Ident
				INNER JOIN [app620].[CatPerfilEmpleadosAccesos] PEA ON PE.Perfil_Ident = PEA.Perfil_Ident
				INNER JOIN [app620].[CatPeriodosNomina] PN ON PN.PeriodoNominaId = S.PeriodoNominaId

				--Adecuación de MultiCliente en RelPerfilEmpleadosClientes
				JOIN app620.RelPerfilEmpleadosClientes RECli
				ON
					RECli.Perfil_Ident = PE.Perfil_Ident
				AND	
					RECli.Client_Ident = E.Client_Ident

		WHERE	
				S.EstatusSolicitudId = 'CE'
				AND S.Active = 1
				AND EMS.EstatusSolicitudId = 'CE'
				AND EMS.Active = 1
				AND PE.TipoAccesoId = 3
				AND PE.Active = 1
				AND PEA.Active = 1
				AND PN.PeriodoNominaId = @PeriodoNomina
				AND PEA.EmpleadoId = @EmpleadoId
				AND E.Current_Status IN (CASE WHEN @Activos = 1 THEN 'Active'  ELSE 'Terminated' END)
	END
GO
PRINT N'Altering [app620].[DescargaArchivoSolicitudSel]...';


GO
ALTER PROC [app620].[DescargaArchivoSolicitudSel]
	@Activos BIT
AS
	BEGIN
		DECLARE
			@PeriodoNominaId INT = 0
			,@CurrentStatus VARCHAR(10)

		SELECT	@PeriodoNominaId = PeriodoNominaId
		FROM	[app620].[CatPeriodosNomina]
		WHERE	
				PeriodicidadNominaId = 'C' 
				AND TipoPeriodo = 'O'
				--AND convert(date,getdate()) between convert(date,FechaInicio) and convert(date,FechaFin)
		ORDER BY CreatedDate DESC		

		--SELECT	'EMPLEADO' EMPLEADO,'CONCEPTO' CONCEPTO,'ACCION' ACCION,'UNIDAD' UNIDAD,'IMPORTE' IMPORTE,'PORCENTAJE' PORCENTAJE,'FECHA' FECHA,'INICIO' INICIO,'FIN' FIN,'FOLIO' FOLIO,'CONSECUENCIA' CONSECUENCIA,'CONTROL' CONTROL,'SEMANA' SEMANA
		--UNION
		SELECT	
				PN.AnioId,
				PN.MesId,
				PN.ConsecutivoId,
				CONVERT(VARCHAR(20),EMS.Empleado_Ident) EMPLEADO,
				PS.Descripcion CONCEPTO,
				'' ACCION,
				CASE
					WHEN C.ParametroConceptoId IN (1,2)
					THEN CONVERT(VARCHAR(10),EMS.ParametroConceptoMonto)
					ELSE ''
				END UNIDAD,
				CASE
					WHEN C.ParametroConceptoId IN (3)
					THEN '$'+ FORMAT(EMS.ParametroConceptoMonto,'##########,0.00')
					ELSE ''
				END IMPORTE,
				CASE
					WHEN C.ParametroConceptoId IN (4)
					THEN CONVERT(VARCHAR(10),EMS.ParametroConceptoMonto)
					ELSE ''
				END PORCENTAJE,
				'' FECHA,
				''	INICIO,
				''	FIN,
				''	FOLIO,
				''	CONSECUENCIA,
				''	CONTROL,
				''	SEMANA
				--,S.*
				--,E.country_ident
				--,E.country_full_name
				--,LB.location_bios
				--,LB.city
				--,E.Location_Ident
				--,E.Location_Name
				--,E.Client_Ident
				--,E.Client_Name
				--,E.Program_Ident
				--,E.Program_Name
				--,E.Contract_Type_Ident
				--,E.Contract_Type
				--,PE.Country_Ident
				--,PE.City_Ident
				--,LB.location_ccms
		FROM	[app620].[CatSolicitudes] S
				JOIN [app620].[CatEmpleadosSolicitudes] EMS ON S.FolioSolicitud = EMS.FolioSolicitud
				INNER JOIN [app620].[CatConceptos] C ON C.ConceptoId = EMS.ConceptoId
				INNER JOIN [app620].[CatConceptosPeopleSoft] PS ON PS.ConceptoId = C.PeopleSoftId
				LEFT JOIN [app620].[CatEmployeeCCMSVw] E ON E.Ident = EMS.[Empleado_Ident]
				INNER JOIN [app620].[CatLocationVw] AS b ON E.Location_Ident = b.Location_Ident
				INNER JOIN [ITAL].[app012].[RelLocationBiosCCMSVw] LB ON LB.location_ccms = E.Location_Ident
				INNER JOIN [app620].[CatPerfilEmpleados] PE ON	ISNULL(NULLIF(PE.Country_Ident, -1), b.country_ident) = b.country_ident AND 
																ISNULL(NULLIF(PE.City_Ident, -1), LB.location_bios) = LB.location_bios AND 
																ISNULL(NULLIF(PE.Location_Ident, -1), E.Location_Ident) = E.Location_Ident AND 
																--ISNULL(NULLIF(PE.Client_Ident, -1), E.Client_Ident) = E.Client_Ident AND
																ISNULL(NULLIF(PE.Program_Ident, -1),E.Program_Ident) = E.Program_Ident AND
																ISNULL(NULLIF(PE.Contract_Type_Ident, -1), E.Contract_Type_Ident) = E.Contract_Type_Ident
				--INNER JOIN [app620].[CatPerfilEmpleadosAccesos] PEA ON PE.Perfil_Ident = PEA.Perfil_Ident
				INNER JOIN [app620].[CatPeriodosNomina] PN ON PN.PeriodoNominaId = S.PeriodoNominaId
	
					--Adecuación de MultiCliente en RelPerfilEmpleadosClientes
				JOIN app620.RelPerfilEmpleadosClientes RECli
				ON
					RECli.Perfil_Ident = PE.Perfil_Ident
				AND	
					RECli.Client_Ident = E.Client_Ident

		WHERE	
				S.EstatusSolicitudId = 'CE'
				AND EMS.EstatusSolicitudId = 'CE'
				AND PE.TipoAccesoId = 3
				AND PE.Active = 1
				--AND PEA.Active = 1
				--AND PN.PeriodoNominaId = @PeriodoNominaId
				--AND PEA.EmpleadoId = @EmpleadoId
				AND E.Current_Status IN (CASE WHEN @Activos = 1 THEN 'Active'  ELSE 'Terminated' END)
	END
GO
PRINT N'Altering [app620].[NivelesAutorizacionxEmpleadoxConcepto]...';


GO
ALTER PROCEDURE [app620].[NivelesAutorizacionxEmpleadoxConcepto]
(
	@EmpleadoIdent INT = 0--2964012
	,@ConceptoId INT = 0--2
	,@FolioId INT = 0--87
)
AS

BEGIN
	SET @ConceptoId = ISNULL(@ConceptoId, 0)

	--SELECT * FROM app620.CatSolicitudEmpleadosAutorizantes WHERE FolioSolicitud = @FolioId AND Empleado_Ident = @EmpleadoIdent AND ConceptoId = @ConceptoId AND Autorizador_Ident IS NOT NULL

	IF EXISTS(SELECT 1 FROM app620.CatSolicitudEmpleadosAutorizantes WHERE FolioSolicitud = @FolioId AND Empleado_Ident = @EmpleadoIdent AND ConceptoId = @ConceptoId AND Autorizador_Ident IS NOT NULL)
	BEGIN
		--SELECT 'verdadero'
		SELECT 
		NivelAutorizacion AS Nivel
		,Autorizador_Ident AS Id
		,b.Nombre AS Valor
		FROM app620.CatSolicitudEmpleadosAutorizantes a
		INNER JOIN [app620].[CatEmployeeCCMSVw] b on a.Autorizador_Ident = b.Ident
		WHERE FolioSolicitud = @FolioId AND Empleado_Ident = @EmpleadoIdent AND ConceptoId = @ConceptoId AND Autorizador_Ident IS NOT NULL
	END
	ELSE
	BEGIN
		--SELECT 'falso'

		SELECT
			c.Nivel, c.Id, c.Valor
		FROM
			(
				SELECT
					 ISNULL(PEA.Nivel, 999) Nivel
					,PEA.EmpleadoId Id
					,Aut.Nombre		Valor
					--, PE.Perfil_Ident
					,row_number() over(
						partition by PEA.Nivel
							order by PEA.EmpleadoId) as rn
				FROM
					 app620.CatPerfilEmpleadosAccesos PEA
				JOIN app620.CatPerfilEmpleados PE ON PE.Perfil_Ident = PEA.Perfil_Ident
				JOIN app620.RelPerfilEmpleadosConceptos REC ON REC.Perfil_Ident = PE.Perfil_Ident
				JOIN app620.CatConceptos C ON (C.ConceptoId	= REC.ConceptoId)
				JOIN [app620].[CatEmployeeCCMSVw] Aut ON Aut.Ident		= PEA.EmpleadoId
				JOIN [app620].[CatEmployeeCCMSVw] Emp ON Emp.Ident		= @EmpleadoIdent
					AND	(PE.Country_Ident = Emp.Country_Ident OR PE.Country_Ident = -1)
					AND	(PE.Location_Ident = Emp.Location_Ident OR PE.Location_Ident = -1)
					--AND	(PE.Client_Ident = Emp.Client_Ident OR PE.Client_Ident = -1)
					AND	(PE.Program_Ident = Emp.Program_Ident OR PE.Program_Ident = -1)
					AND (PE.Contract_Type_Ident = Emp.Contract_Type_Ident OR PE.Contract_Type_Ident = -1)
				JOIN [app620].[CatRelLocationBiosCCMSVw] BiosCity ON (BiosCity.location_bios = PE.City_Ident  OR PE.City_Ident = -1)
					AND (BiosCity.location_ccms = Emp.Location_Ident)

				----Adecuación de MultiCliente en RelPerfilEmpleadosClientes
				--JOIN app620.RelPerfilEmpleadosClientes RECli
				--ON
				--	RECli.Perfil_Ident = PE.Perfil_Ident
				--AND	
				--	RECli.Client_Ident = Emp.Client_Ident

				WHERE 
					PEA.Active		= 1
					AND	PE.TipoAccesoId	= 2	--El perfil es de Autorizadores
					AND PE.Active		= 1
					AND C.Active		= 1
					AND (
							C.ConceptoId	= @ConceptoId 
						OR 
							@ConceptoId	= 0
						)
					AND
						PEA.Nivel		<= C.NumeroNivelAutorizante
				--GROUP BY Nivel
			) c
		WHERE c.rn = 1
		ORDER BY Nivel, Id

	END
END
GO
PRINT N'Altering [app620].[ReporteSolicitudXEstatusSel]...';


GO
ALTER PROC [app620].[ReporteSolicitudXEstatusSel]
--@FechaIni varchar(15) --= '2019-09-28'
--,@FechaFin varchar(15) --= '2019-10-29'
--,@City int --= 1
--,@Site int --= 317
 @Responsable_Ident int = 0--= 1286941
,@PeriodoNomina int = 0
,@EstatusSolicitud varchar(50) = '0' --= 'A'
,@EstatusConcepto varchar(50) = '0' --= 'A'

AS
BEGIN
	--DECLARE
	--@FechaIni varchar(15) --= '2019-09-28'
	--,@FechaFin varchar(15) --= '2019-10-29'
	--,@City varchar(20) --= 'Monterrey'
	--,@Site int --= 317
	--,@Solicitante int --= 1286941
	--,@EstatusSolicitud varchar(5) = 'A'
	--,@EstatusConcepto varchar(5) = 'A'

	SELECT
		 @PeriodoNomina = ISNULL(@PeriodoNomina, 0)
		,@EstatusSolicitud = ISNULL(@EstatusSolicitud, '')
		,@EstatusConcepto = ISNULL(@EstatusConcepto, '')

	SELECT
		S.FolioSolicitud As Folio,
		C.Descripcion Concepto,
		CASE
			WHEN C.ParametroConceptoId IN (3)
		--	THEN sum(EMS.ParametroConceptoMonto)
			THEN CAST(sum(EMS.ParametroConceptoMonto) AS VARCHAR(50))
			ELSE CAST(0 AS VARCHAR(50))
		END Total
		--CASE
		--	WHEN C.ParametroConceptoId IN (3)
		--	THEN --Format(sum(EMS.ParametroConceptoMonto),'##,##0')
		--	'$'+ FORMAT(sum(EMS.ParametroConceptoMonto),'##########,0.00')
		--	ELSE '$'+ FORMAT(0,'#,0.00')
		--END Total
		,r.city As Ciudad
		,b.Location_Name As Site
		,PN.NombrePeriodo Periodo
		--,convert(nvarchar(19),S.Fecha_Solicitud,120) As Fecha
		,d.Descripcion AS EstatusSol
		,CASE WHEN EMS.EstatusSolicitudId IS NOT NULL THEN
				(SELECT Descripcion FROM  [app620].[CatEstatusSolicitudes] WHERE EstatusSolicitudId = EMS.EstatusSolicitudId)
			ELSE 
				''
			END
		 AS EstatusCon
		,S.Solicitante_Ident AS SolicitanteCCMSID
	FROM [app620].[CatSolicitudes] S
		JOIN [app620].[CatEmpleadosSolicitudes] EMS ON 
			S.FolioSolicitud = EMS.FolioSolicitud
		AND 
			(S.PeriodoNominaId = @PeriodoNomina OR @PeriodoNomina = 0)
		AND
			(
				S.EstatusSolicitudId = @EstatusSolicitud 
			OR 
				@EstatusSolicitud = '' 
			)
		AND 
			(
				EMS.EstatusSolicitudId = @EstatusConcepto 
			OR 
				@EstatusConcepto = '' 
		)
		--EMS.EstatusSolicitudId = isnull(IIF(LEN(@EstatusConcepto) = 0,NULL,@EstatusConcepto),EMS.EstatusSolicitudId)

		JOIN app620.CatEmployeeCCMSVw EMP ON 
			EMP.Ident = EMS.Empleado_Ident

		--S.EstatusSolicitudId = isnull(IIF(LEN(@EstatusSolicitud) = 0,NULL,@EstatusSolicitud),S.EstatusSolicitudId)

		INNER JOIN [app620].[CatConceptos] C ON C.ConceptoId = EMS.ConceptoId
		INNER JOIN [app620].[CatConceptosPeopleSoft] PS ON PS.ConceptoId = C.PeopleSoftId
		INNER JOIN [app620].[CatPeriodosNomina] PN ON PN.PeriodoNominaId = S.PeriodoNominaId
		INNER JOIN [app620].[CatEmployeeCCMSVw] b on S.Solicitante_Ident = b.Ident
		INNER JOIN [app620].[CatRelLocationBiosCCMSVw] r on b.Location_Ident = r.location_ccms
		INNER JOIN [app620].[CatEstatusSolicitudes] d on S.EstatusSolicitudId = d.EstatusSolicitudId
		--INNER JOIN [app620].[CatEstatusSolicitudes] e on EMS.EstatusSolicitudId = d.EstatusSolicitudId
		INNER JOIN [app620].[CatPeriodosNomina] e on S.PeriodoNominaId = e.PeriodoNominaId
		
		JOIN app620.CatPerfilEmpleadosAccesos PEA ON PEA.EmpleadoId = @Responsable_Ident
		JOIN app620.CatPerfilEmpleados PE ON 
			PE.Perfil_Ident = PEA.Perfil_Ident 
		AND 
			PE.TipoAccesoId = 3 
		AND 
			PE.Active = 1
		--JOIN [app620].[CatEmployeeCCMSVw] Emp on  = b.Ident
		------JOIN [app620].[CatEmployeeCCMSVw] Emp ON 
		
		AND	(EMP.Country_Ident			= PE.Country_Ident			OR PE.Country_Ident = -1)
		AND	(EMP.Location_Ident			= PE.Location_Ident			OR PE.Location_Ident = -1)
		--AND	(EMP.Client_Ident			= PE.Client_Ident			OR PE.Client_Ident = -1)
		AND	(EMP.Program_Ident			= PE.Program_Ident			OR PE.Program_Ident = -1)
		AND (EMP.Contract_Type_Ident	= PE.Contract_Type_Ident	OR PE.Contract_Type_Ident = -1)
		------AND (Emp.Ident					= EMS.Empleado_Ident)
		
		JOIN [app620].[CatRelLocationBiosCCMSVw] BiosCity
		ON 
			(
				BiosCity.location_bios		= PE.City_Ident				
			OR
				PE.City_Ident = -1
			)

		AND (BiosCity.location_ccms		= EMP.Location_Ident)

		--Adecuación de MultiCliente en RelPerfilEmpleadosClientes
		JOIN app620.RelPerfilEmpleadosClientes RECli
		ON
			RECli.Perfil_Ident = PE.Perfil_Ident
		AND	
			RECli.Client_Ident = EMP.Client_Ident
	WHERE	
		------	(S.PeriodoNominaId = @PeriodoNomina OR @PeriodoNomina = 0)
		------AND
		------	(S.EstatusSolicitudId = @EstatusSolicitud OR @EstatusSolicitud = '' OR @EstatusSolicitud = '' )
		--------S.EstatusSolicitudId = isnull(IIF(LEN(@EstatusSolicitud) = 0,NULL,@EstatusSolicitud),S.EstatusSolicitudId)
		------AND 
		------	(EMS.EstatusSolicitudId = @EstatusConcepto OR @EstatusConcepto = '' OR @EstatusConcepto = '' )
		--------EMS.EstatusSolicitudId = isnull(IIF(LEN(@EstatusConcepto) = 0,NULL,@EstatusConcepto),EMS.EstatusSolicitudId)
		------AND 
		C.ParametroConceptoId = 3 -- Montos
	GROUP BY 
		 S.FolioSolicitud, EMS.ConceptoId, C.Descripcion, C.ParametroConceptoId, r.city, b.Location_Name, PN.NombrePeriodo--, S.Fecha_Solicitud
		,d.Descripcion, S.Solicitante_Ident, EMS.EstatusSolicitudId
	ORDER BY 
		S.FolioSolicitud
		,C.Descripcion
END
GO
PRINT N'Refreshing [app620].[CatSolicitudSimpleSi]...';


GO
EXECUTE sp_refreshsqlmodule N'[app620].[CatSolicitudSimpleSi]';


GO
PRINT N'Update complete.';


GO
